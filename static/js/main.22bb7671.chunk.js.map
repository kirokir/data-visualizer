{"version":3,"sources":["components/ChartSelector/ChartSelector.module.scss","components/ParsingOptions/ParsingOptions.module.scss","components/DataLoader/loaders/LoadProject.module.scss","components/DataLoader/loaders/UploadFile.module.scss","components/InlineColorPicker/InlineColorPicker.module.scss","components/Footer/Footer.module.scss","components/DataLoader/loaders/SparqlFetch.module.scss","components/ChartOptions/ChartOptions.module.scss","components/DataMapping/DataMapping.module.scss","components/DataGrid/DataGrid.module.scss","components/Header/Header.module.scss","components/Section/Section.module.scss","components/DataSamples/DataSamples.module.scss","components/DataLoader/loaders/UrlFetch.module.scss","components/CopyToClipboardButton/style.module.css","components/DataLoader/DataLoader.module.scss","components/CustomChartLoader/CustomChartLoader.module.scss","HeaderItems.js","components/Header/Header.js","components/Section/Section.js","components/Footer/Footer.js","components/ScreenSizeAlert/ScreenSizeAlert.js","worker/index.js","hooks/useWindowSize.js","constants.js","worker/worker.js","hooks/useDataLoaderUtils/parser.js","hooks/useDataLoaderUtils/stack.js","hooks/useDataLoader.js","components/DataGrid/DataGrid.js","components/DataSamples/DataSamples.js","components/JsonViewer/JsonViewer.js","components/ParsingOptions/SeparatorSelector.js","components/ParsingOptions/ThousandsSeparatorSelector.js","components/ParsingOptions/DecimalsSeparatorSelector.js","components/ParsingOptions/DateLocaleSelector.js","components/ParsingOptions/StackSelector.js","components/DataLoader/loaders/UrlFetch.js","components/DataLoader/loaders/SparqlFetch.js","components/ParsingOptions/ParsingOptions.js","charts.js","components/DataLoader/loaders/LoadProject.js","components/DataLoader/loaders/Paste.js","components/DataLoader/loaders/UploadFile.js","components/DataLoader/loading.js","components/WarningMessage/WarningMessage.js","components/DataLoader/DataMismatchModal.js","components/CopyToClipboardButton/CopyToClipboardButton.js","hooks/useCopyToClipboard.js","components/DataLoader/DataLoader.js","components/ChartSelector/ChartSelector.js","components/DataMapping/ColumnCard.js","components/DataMapping/DataTypeIcon.js","components/DataMapping/asterisk.svg","components/DataMapping/RequiredIcon.js","components/DataMapping/ChartDimensionItem.js","components/DataMapping/ChartDimensionCard.js","components/DataMapping/DataMapping.js","components/ChartOptions/ChartOptionTypes/ChartOptionSelect.js","components/ChartOptions/ChartOptionTypes/ChartOptionNumber.js","components/ChartOptions/ChartOptionTypes/ChartOptionText.js","components/InlineColorPicker/InlineColorPicker.js","components/ChartOptions/ChartOptionTypes/ChartOptionColor.js","components/ChartOptions/ChartOptionTypes/ColorSchemePreview.js","components/ChartOptions/ChartOptionTypes/ColorSchemesDropDown.js","components/ChartOptions/ChartOptionTypes/ColorScaleUtils.js","hooks/usePrevious.js","components/ChartOptions/ChartOptionTypes/ChartOptionColorScale.js","components/ChartOptions/ChartOptionTypes/ChartOptionColorScaleDefault.js","components/ChartOptions/ChartOptionTypes/ChartOptionColorScaleWrapper.js","components/ChartOptions/ChartOptionTypes/ChartOptionBoolean.js","components/ChartOptions/ChartOptions.js","gaEvents.js","components/ChartPreview/ChartPreview.js","hooks/useDebounce.js","components/ChartPreviewWIthOptions/ChartPreviewWithOptions.js","components/Exporter/Exporter.js","hooks/rawRequire.js","hooks/useCustomCharts.js","hooks/useSafeCustomCharts.js","components/CustomChartLoader/CustomChartLoader.js","components/CustomChartWarnModal/CustomChartWarnModal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","headerItems","label","slug","href","Header","menuItems","Navbar","bg","sticky","className","styles","navbar","Brand","Nav","map","d","i","Link","Section","props","Container","fluid","section","join","Row","Col","title","loading","Spinner","animation","variant","style","width","height","borderWidth","marginLeft","children","Footer","backgroundColor","footer","xs","md","color","target","rel","ScreenSizeAlert","parsingWorker","mappingWorker","size","useState","undefined","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","showModal","setShowModal","modalWasClosed","setModalWasClosed","handleClose","Modal","show","onHide","backdrop","keyboard","centered","closeButton","Title","as","role","Body","Button","onClick","DateIcon","BsClock","NumberIcon","BsHash","StringIcon","BsType","dataTypeIcons","date","number","string","localeList","arEG","caES","csCZ","daDK","deCH","deDE","enCA","enGB","enUS","esES","esMX","faIR","fiFI","frCA","frFR","heIL","huHU","itIT","jaJP","koKR","mkMK","nbNO","nlNL","plPL","ptBR","ruRU","svSE","ukUA","zhCN","zhTW","separatorsLabels","separatorsList","Object","keys","AGGREGATIONS_LABELS","SCALES_LABELS","COLOR_SCHEMES_LABELS","Worker","SparqlMarker","Symbol","PARSERS","dataType","parse","data","opts","Error","dataString","trimmedDataString","trim","replace","JSON","separator","dsvFormat","candidates","parsed","length","push","score","e","sort","a","b","parseAndCheckData","parser","extra","parseData","isScalarType","item","includes","stackData","column","flatMap","record","key","others","omit","value","prop","DATA_LOADER_MODE","__cache","useDataLoader","userInput","setUserInput","dataSource","setDataSource","userData","setUserData","userDataType","setUserDataType","parseError","setParserError","unstackedInfo","setUnstackedInfo","setSeparator","thousandsSeparator","setThousandsSeparator","decimalsSeparator","setDecimalsSeparator","navigator","language","locale","setLocale","stackDimension","setStackDimension","setData","unstackedData","unstackedColumns","setLoading","mode","setMode","replaceRequiresConfirmation","setReplaceRequiresConfirmation","columnsTypes","dataTypes","parseDatasetAsyncAndSetData","useCallback","parsingOptions","Comlink","parseDataset","parseDatasetInWorker","dateLocale","get","then","resultData","catch","err","console","log","finally","parseDatasetSyncAndSetData","Promise","resolve","reject","parseDatasetAuto","parseDatasetAndSetData","reset","hydrateFromSavedProject","project","handleReplacingData","decimal","group","newDataInferred","errors","replacedData","oldColNames","newColNames","missingCols","difference","nextDataTypes","newData","stackedData","handleNewUserData","nextUserData","error","setUserDataAndDetect","str","source","options","parsedUserData","jsonPath","jsonData","Array","isArray","setJsonData","path","normalized","element","iterateElement","tmp","forEach","outElement","property","valueType","filter","nestedProperty","nestedValue","startDataReplace","cancelDataReplace","commitDataReplace","newSeparator","newThousandsSeparator","newDecimalSeparator","newLocale","dataset","coerceTypes","nextTypes","loadSample","rawData","sampleSeparator","type","handleInlineEdit","newDataset","handleStackOperation","resetDataLoader","dataLoaderMode","DATE_FORMATS","dateFormats","DateFormatSelector","React","forwardRef","ref","currentFormat","onChange","classNames","S","dateFmt","selected","stopPropagation","preventDefault","dateFormat","DataTypeSelector","typeDescriptor","currentType","onTypeChange","currentTypeComplete","dataTypeIconDomRef","useRef","showPicker","setShowPicker","handleTypeChange","newType","datatype","isEqual","handleTypeChangeDate","handleTargetClick","Icon","Overlay","current","placement","rootClose","rootCloseEvent","container","document","body","scheduleUpdate","arrowProps","outOfBoundaries","id","OverlayTrigger","overlay","trigger","triggerHandler","marginRight","fill","HeaderRenderer","sortColumn","sortDirection","_raw_datatype","_raw_coerceType","name","DataGrid","userDataset","onDataUpdate","setSort","keyedErrors","useMemo","keyBy","containerEl","idColumnWidth","Math","floor","log10","equalDinstribution","getBoundingClientRect","columnWidth","max","columns","headerRenderer","frozen","sortable","k","editable","formatter","row","_errors","toString","nextType","resizable","sortedDataset","datasetWithIds","_id","_stage3","sortColumnType","getTypeName","valueOf","localeCompare","reverse","handleSort","columnKey","direction","minColumnWidth","rows","rowHeight","onSort","onColumnResize","onRowsUpdate","update","action","fromRow","cellKey","updated","samplesList","category","url","delimiter","sourceName","sourceURL","DataSamples","onSampleReady","setLoadingError","select","sample","fetch","response","message","text","lg","xl","marginBottom","Card","JsonViewerRecursive","contextName","nestingLevel","context","selectFilter","onSelect","isSelectable","contextType","mouseOver","setMouseOver","classes","handleSelect","handleMouseOver","handleMouseOut","onMouseOver","onMouseOut","JsonViewer","SeparatorSelector","inputValue","handleChange","nextValue","formatValue","Dropdown","Toggle","Menu","Item","ThousandsSeparatorSelector","DecimalsSeparatorSelector","DateLocaleSelector","StackSelector","list","nextDimension","disabled","fetchData","UrlFetch","initialState","setUrl","fetchUrl","handleSubmit","onSubmit","DEFAULT_PREFIXES","wd","wds","wdv","wdt","wikibase","p","ps","pq","rdfs","bd","wdref","psv","psn","pqv","pqn","pr","prv","prn","wdno","wdata","schema","rdf","owl","skos","xsd","prov","bds","gas","hint","sparqlGenerator","Generator","client","SimpleClient","endpointUrl","query","stringify","json","results","bindingsToJson","head","vars","bindings","SparqlFetch","parsedQuery","setParsedQuery","editorDomRef","initialQuery","onQueryParsed","evt","detail","queryType","onParserFailure","result","node","render","html","varNames","binding","variable","term","dataRefreshWorkers","fetchDataFromUrl","fetchDataFromSparql","dataRefreshCaptions","ParsingOptions","refreshData","dataRefreshImpl","onDataRefreshed","nextSeparator","nextLocale","dimensions","nextStackDimension","charts","alluvialdiagram","arcdiagram","barchart","barchartmultiset","barchartstacked","beeswarm","boxplot","bubblechart","bumpchart","calendarHeatmap","chorddiagram","circlepacking","circularDendrogram","contourPlot","convexHull","dendrogram","ganttChart","hexagonalBinning","horizongraph","linechart","matrixplot","parallelcoordinates","piechart","radarchart","sankeydiagram","slopechart","streamgraph","sunburst","treemap","violinplot","voronoidiagram","voronoitreemap","LoadProject","onProjectSelected","onDrop","acceptedFiles","reader","FileReader","deserializeProject","readAsText","useDropzone","accept","maxFiles","getRootProps","getInputProps","isDragReject","isDragAccept","dropzone","Paste","border","borderRadius","padding","minHeight","UploadFile","Loading","WarningMessage","Alert","DataMismatchModal","startsWith","split","CopyToClipboardButton","content","copyToClipboard","btn","createElement","display","appendChild","clipboard","ClipboardJS","focus","click","destroy","removeChild","pending","setPending","handleCopy","setTimeout","DataLoader","mainContent","hydrateFromProject","loadingError","initialOptionState","setInitialOptionState","loader","rawInput","icon","BsClipboard","allowedForReplace","BsUpload","BsGift","BsCloud","BsSearch","BsFolder","optionIndex","setOptionIndex","selectedOption","ctx","reloadRAW","location","pathname","copyToClipboardButton","tsvFormat","opt","classnames","active","c","dataSourceIndex","findIndex","successRows","parsingErrors","memo","filterCharts","metadata","categories","indexOf","ChartSelector","availableCharts","currentChart","setCurrentChart","onRemoveCustomChart","onAddChartClick","setFilter","handleFilterChange","nextFilter","nextCharts","charAt","toUpperCase","slice","uniq","flat","Img","src","thumbnail","Subtitle","Text","description","code","tutorial","customChart","rawCustomChart","backgroundImage","whiteSpace","position","top","right","maxWidth","overflow","textOverflow","ColumnCard","dimensionName","dimensionType","commitLocalMapping","rollbackLocalMapping","useDrag","collect","monitor","isDragging","end","dropResult","didDrop","drag","dimType","DataTypeIcon","_path","Tooltip","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgAsterisk","_ref","svgRef","titleId","xmlns","viewBox","ForwardRef","RequiredIcon","ChartDimensionItem","draggingColumn","index","isValid","columnId","dimension","aggregators","relatedAggregation","onMove","onChangeAggregation","onDeleteItem","onChangeDimension","replaceDimension","onInsertColumn","localMappding","useDrop","isOver","getItem","hover","multiple","hoverIndex","dimensionId","dragIndex","hoverBoundingRect","hoverMiddleY","bottom","hoverClientY","getClientOffset","y","drop","opacity","aggregation","aggregatorName","getAggregatorNames","emptyList","ChartDimensionCard","mapping","setMapping","draggingId","setDraggingId","defaulAggregation","getDefaultDimensionAggregation","columnDataType","validTypes","ids","concat","uniqueId","mappedType","config","setAggregation","newAggregations","idsMappedHere","columnsMappedHere","aggregationsMappedHere","nextConfig","col","j","newCol","arrayMove","nextId","arrayInsert","t","required","renderId","removeIndex","arrayReplace","arr","handleReplaceLocalMapping","prev","fromDimension","toDimension","fromIndex","toIndex","removedItem","newAggregation","moveFn","prevToMapping","toDimensionMapping","obj","DataMapping","setLocalMapping","updateMapping","mappingConf","isLocal","lastMapping","useImperativeHandle","clearLocalMapping","DndProvider","backend","HTML5Backend","columnName","ChartOptionSelect","defaultValue","default","stringValue","Number","option","isObject","ChartOptionNumber","isEnabled","step","min","n","parseFloat","isNaN","placeholder","ChartOptionText","InlineColorPicker","maybeColor","displayColorPicker","setDisplayColorPicker","swatch","background","popover","cover","disableAlpha","onChangeComplete","hex","ChartOptionColor","ColorSchemePreview","samples","scale","numSamples","ticks","domain","flex","ColorSchemesDropDown","interpolators","interpolator","setInterpolator","colorDataset","colorDataType","scaleType","currentFinalScale","paddingRight","intrplr","colorPresets","getPresetScale","getColorDomain","ResetBtn","resetScale","InvertBtn","invertScale","LockBtn","handleChangeLocked","locked","usePrevious","getDatePickerValue","userValue","userDomain","getValueType","toISOString","substring","ChartOptionColorScale","mappingValue","chart","mappedData","hasAnyMapping","initialValue","__loaded","setScaleType","defaultColor","colorFromDefault","setLocked","availableScaleTypes","getAvailableScaleTypes","setInterpolators","userRange","range","userValues","setUserValues","getCurrentFinalScale","userValuesForFinalScale","x","getColorScale","getDefaultUserValues","getInitialScaleValues","getUserValuesForFinalScale","values","currentUserValues","valuesForFinalScale","getDefaultColorScale","handleChangeValues","nextUserValues","userScaleValues","setUserValueRange","newUserValues","setUserValueDomain","handleChangeScaleType","nextScaleType","nextInterpolators","nextInterpolator","handleSetInterpolator","customUserValues","byDomain","v","nextLocked","reversedValues","invertedValues","prevMappingValue","marginTop","s","Date","ChartOptionColorScaleDefault","colorFromValue","setDefaultColor","handleChangeDefaultColor","nextDefaultColor","outScaleParams","ChartOptionColorScaleWrapper","ChartOptionBoolean","optionId","Form","Check","checked","CHART_OPTION_COMPONENTS","colorScale","boolean","getPartialMapping","repeatIndex","nv","getPartialMappedData","datum","getDefaultForRepeat","def","repeatDefault","WrapControlComponent","setVisualOptions","Component","remainingOptions","visualOptions","domainFromChart","handleControlChange","newValue","Fragment","ChartOptions","optionsConfig","getOptionsConfig","groups","collapseStatus","setCollapseStatus","enabledOptions","getEnabledOptions","optionsDefinitionsByGroup","reduce","acc","containerOptions","defaultOptionsValues","getDefaultOptionsValues","getContainerOptions","groupName","groupname","repeatFor","showLegend","prevChartIdRendered","ChartPreview","setError","setRawViz","domRef","vizOptionsDebounced","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","useDebounce","currentlyMapped","requiredVariables","errorMessage","curr","firstChild","multivaluesVariables","minValues","chartMetadata","variableObj","find","viz","rawChart","rawViz","renderToDOM","gtag","event_category","ChartPreviewWithOptions","setMappingLoading","setMappedData","chartName","mapData","mapDataInWorker","downloadBlob","filename","download","Exporter","exportProject","downloadSvg","svgString","XMLSerializer","serializeToString","_node","DOMURL","URL","webkitURL","svg","Blob","createObjectURL","revokeObjectURL","downloadImage","format","canvas","clientHeight","clientWidth","getContext","img","Image","onload","drawImage","toDataURL","downloadProject","blob","setCurrentFormat","currentFile","setCurrentFile","downloadViz","_chartImplementation","event_label","InputGroup","DropdownButton","Append","NPM_CDN","queue","cacheChartsPkg","LRU","cacheDependenciesTree","DEPENDENCIES_ALIAS","d3","rawgraphsCore","requireDependency","sUrl","has","requireFromUrl","set","defineDOM","params","factory","dependencies","rutimeDepenciesPromises","dep","all","rutimeDepencies","outFactory","requireDependencyWebWorker","requireFromUrlWebWorker","defineWebWorker","define","scriptTag","async","promiseFinalExports","pop","remove","once","append","isRawChartLike","requireRawChartsFromUrl","daExports","self","importScripts","amd","STORE_NS","getNextCustomChartsAndReleased","prevCharts","newChartsToInject","newIds","releasedCustomCharts","prevChart","shouldBeReleased","storeCustomCharts","nextCustomCharts","toStoreCustomCharts","localStorage","setItem","caches","open","cache","nextHashses","Boolean","cacheKeys","currentHashses","toRemoveHashes","hash","delete","makeFileHash","file","event","sha3_512","readAsArrayBuffer","loadStoredCustomCharts","storedCustomCharts","match","m","packs","packsToLoad","nChars","o","loadedChartsById","exportCustomChart","HOSTS_WHITELIST","isUrlAllowed","hostname","UserAbortError","args","isAbortByUser","useSafeCustomCharts","storage","customCharts","setCustomCharts","loadCustomChartsFromUrlAsSource","loadCustomChartsFromUrl","loadCustomChartsFromNpm","uploadCustomCharts","fileHash","put","Response","importCustomChartFromProject","projectChart","File","newChart","removeCustomChart","useCustomCharts","unsafeUploadCustomCharts","unsafeLoadCustomChartsFromNpm","unsafeLoadCustomChartsFromUrl","unsafeImportCustomChartFromProject","methods","toConfirmCustomChart","setToConfirmCustomChartLoad","parsedUrl","String","inputName","askConfirm","confirmCustomChartLoad","abortCustomChartLoad","LoadFromFile","load","dropin","LoadFromString","setValue","CustomChartLoaderForm","onClose","setType","handleError","changeImportType","loadingOption","pkg","CustomChartLoader","isOpen","contentClassName","CustomChartWarnModal","App","baseCharts","dataLoader","mappingLoading","dataMappingRef","columnNames","prevColumnNames","lasImportProjectRef","importProject","projectUrl","projectUrlStr","URLSearchParams","search","r","ok","projectStr","lastImportProject","currentCustom","handleChartChange","nextChart","serializeProject","fromUrl","nextCurrentChart","history","replaceState","patchedOptions","isPlainObject","isModalCustomChartOpen","setModalCustomChartOpen","toggleModalCustomChart","HeaderItems","buttonText","buttonStyle","fontSize","buttonClasses","acceptOnScroll","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22bb7671.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnail\":\"ChartSelector_thumbnail__1xQ_-\",\"currentChart\":\"ChartSelector_currentChart__NKILM\",\"disabled\":\"ChartSelector_disabled__MRXKu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parsingOptions\":\"ParsingOptions_parsingOptions__K4kyV\",\"refresh-button\":\"ParsingOptions_refresh-button__3TkLa\",\"separator-preview\":\"ParsingOptions_separator-preview__1UuQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzone\":\"LoadProject_dropzone__6a5Ft\",\"reject\":\"LoadProject_reject__1NjN5\",\"accept\":\"LoadProject_accept__1a3qM\",\"browse-button\":\"LoadProject_browse-button__Kvg8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzone\":\"UploadFile_dropzone__1h-vB\",\"reject\":\"UploadFile_reject__2Kpgt\",\"accept\":\"UploadFile_accept__3mK1X\",\"browse-button\":\"UploadFile_browse-button__2AUZ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swatch\":\"InlineColorPicker_swatch__11WDP\",\"color\":\"InlineColorPicker_color__12j-E\",\"popover\":\"InlineColorPicker_popover__3Hchl\",\"cover\":\"InlineColorPicker_cover__2KTIs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\",\"main-credit\":\"Footer_main-credit__3IjEE\",\"attribution\":\"Footer_attribution__16IXA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"url-input\":\"SparqlFetch_url-input__1OTEr\",\"query-input-here\":\"SparqlFetch_query-input-here__1GTNa\",\"base-iri-input-here\":\"SparqlFetch_base-iri-input-here__1MbOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart-options\":\"ChartOptions_chart-options__3l80N\",\"chart-option\":\"ChartOptions_chart-option__AxfdW\",\"color-swatch\":\"ChartOptions_color-swatch__2yOSf\",\"color-scale-item\":\"ChartOptions_color-scale-item__3Rhfd\",\"ordinal\":\"ChartOptions_ordinal__2mFUI\",\"not-ordinal\":\"ChartOptions_not-ordinal__3DrFs\",\"color-swatches-list\":\"ChartOptions_color-swatches-list__2EQnZ\",\"options-group\":\"ChartOptions_options-group__3Zauh\",\"group-header\":\"ChartOptions_group-header__1X0bJ\",\"collapsed\":\"ChartOptions_collapsed__pl7d6\",\"collapse-button\":\"ChartOptions_collapse-button__rUqFX\",\"color-scheme-dropdown-item\":\"ChartOptions_color-scheme-dropdown-item__1zRUD\",\"scheme-preview\":\"ChartOptions_scheme-preview__f1lz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column-card\":\"DataMapping_column-card__2VBWp\",\"column-title\":\"DataMapping_column-title__2yLXi\",\"data-type-icon\":\"DataMapping_data-type-icon__fdfcN\",\"chart-dimension\":\"DataMapping_chart-dimension__2tNga\",\"chart-dimension-header\":\"DataMapping_chart-dimension-header__3FrwJ\",\"accepted-type-icon\":\"DataMapping_accepted-type-icon__3XRr1\",\"dimension-required\":\"DataMapping_dimension-required__1FreW\",\"assigned-column\":\"DataMapping_assigned-column__3S8Vu\",\"column-valid\":\"DataMapping_column-valid__1wlKa\",\"column-invalid\":\"DataMapping_column-invalid__3g-BT\",\"remove-assigned\":\"DataMapping_remove-assigned__3VE_f\",\"dropzone\":\"DataMapping_dropzone__2L06t\",\"active\":\"DataMapping_active__NdQHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data-type-selector\":\"DataGrid_data-type-selector__2on-B\",\"data-type-selector-item\":\"DataGrid_data-type-selector-item__3xB1K\",\"selected\":\"DataGrid_selected__iVbJn\",\"date-format-preview\":\"DataGrid_date-format-preview__f5V3s\",\"data-type-selector-trigger\":\"DataGrid_data-type-selector-trigger__1yAyi\",\"date-format-selector\":\"DataGrid_date-format-selector__19SHO\",\"date-format-selector-entry\":\"DataGrid_date-format-selector-entry__3kPs-\",\"parent-type-selector\":\"DataGrid_parent-type-selector__8RCk2\",\"column-name\":\"DataGrid_column-name__q_QPq\",\"has-error\":\"DataGrid_has-error__jgPR1\",\"raw-col-header\":\"DataGrid_raw-col-header__2fXsy\",\"unsorted\":\"DataGrid_unsorted__2dx3u\",\"acs\":\"DataGrid_acs__-kgxx\",\"desc\":\"DataGrid_desc__2WpaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__359Kr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2mYr1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataset-source\":\"DataSamples_dataset-source__1NwGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"url-input\":\"UrlFetch_url-input__3vKK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copy-to-clipboard-button\":\"style_copy-to-clipboard-button__29IxT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-option\":\"DataLoader_loading-option__Spa1h\",\"disabled\":\"DataLoader_disabled__3RVvn\",\"active\":\"DataLoader_active__-mHU8\",\"start-over\":\"DataLoader_start-over__3fWNA\",\"cancel\":\"DataLoader_cancel__22q8c\",\"loading-component\":\"DataLoader_loading-component__1zOap\",\"bg-animated\":\"DataLoader_bg-animated__1j4Qa\",\"bg-animation\":\"DataLoader_bg-animation__12elS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingOption\":\"CustomChartLoader_loadingOption__1vYQM\",\"disabled\":\"CustomChartLoader_disabled__1vBSV\",\"active\":\"CustomChartLoader_active__2XtZG\",\"dropzone\":\"CustomChartLoader_dropzone__S5GVb\",\"dropin\":\"CustomChartLoader_dropin__1VOM0\",\"reject\":\"CustomChartLoader_reject__8aMxD\",\"accept\":\"CustomChartLoader_accept__J_4Ap\",\"browse-button\":\"CustomChartLoader_browse-button__ZAvJI\"};","const headerItems = [\n  // All items have been removed as requested.\n  // You can add new items for your own site here. For example:\n  {  label: 'Home',\n    slug: 'home',\n    href: 'https://dear.is-a.dev',\n   },\n]\n\nexport default headerItems","import React from 'react'\nimport styles from './Header.module.scss'\nimport { Navbar, Nav } from 'react-bootstrap'\n\nexport default function Header({ menuItems }) {\n  return (\n    // MODIFIED: Removed expand=\"lg\" and related components\n    <Navbar bg=\"transparent\" sticky=\"top\" className={styles.navbar}>\n      <Navbar.Brand href=\"/\"><b>Graphon</b></Navbar.Brand>\n      <Nav className=\"ml-auto\">\n        {menuItems.map((d, i) => {\n          return (\n            <Nav.Link key={'item' + i} href={d.href}>\n              {d.label}\n            </Nav.Link>\n          )\n        })}\n      </Nav>\n    </Navbar>\n  )\n}","import React from 'react'\nimport styles from './Section.module.scss'\nimport { Container, Row, Col, Spinner } from 'react-bootstrap'\n\nexport default function Section(props) {\n  return (\n    <Container\n      fluid\n      className={\n        [styles.section, props.className].join(' ')\n      }\n    >\n      <Row>\n        <Col>\n          <div className=\"d-flex align-items-center mb-3\">\n            <h1>{props.title}</h1>\n            { props.loading && <Spinner animation=\"border\" variant=\"primary\" style={{width:'2rem', height:'2rem',borderWidth:'2px',marginLeft:'2rem'}} />}\n          </div>\n          \n          {props.children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","import React from 'react'\nimport styles from './Footer.module.scss'\nimport { Row, Col, Container } from 'react-bootstrap'\nimport { FaHeart } from 'react-icons/fa' // Import the heart icon\n\nexport default function Footer(props) {\n  return (\n    <Container fluid style={{ backgroundColor: 'var(--dark)' }}>\n      <Container className={styles.footer}>\n        <Row className=\"justify-content-center\">\n          <Col xs={12} md={10} className=\"text-center\">\n            {/* Main \"Made with love\" credit */}\n            <p className={styles['main-credit']}>\n              Made with <FaHeart color=\"red\" /> by{' '}\n              <a\n                href=\"https://dear.is-a.dev/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                dear\n              </a>\n            </p>\n            {/* Low-contrast attribution */}\n            <p className={styles['attribution']}>\n              Based on the open-source project{' '}\n              <a\n                href=\"https://github.com/rawgraphs/rawgraphs-app\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                RAWGraphs\n              </a>\n              . Original work © 2013-2021 (Apache License 2.0).\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport useWindowSize from '../../hooks/useWindowSize'\nimport { Modal, Button } from 'react-bootstrap'\nimport { BsEnvelopeFill } from 'react-icons/bs'\n\n// import styles from './ScreenSizeAlert.module.scss'\n\nfunction ScreenSizeAlert() {\n  const size = useWindowSize()\n  const [showModal, setShowModal] = useState(size.width < 992)\n  const [modalWasClosed, setModalWasClosed] = useState(false)\n\n  const handleClose = () => {\n    setShowModal(false)\n    setModalWasClosed(true)\n  }\n\n  useEffect(() => {\n    if (modalWasClosed === false) {\n      setShowModal(size.width < 992)\n    }\n  }, [modalWasClosed, size])\n\n  return (\n    <Modal\n      className=\"raw-modal\"\n      show={showModal}\n      onHide={handleClose}\n      backdrop=\"static\"\n      keyboard={false}\n      // size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title as=\"h5\">\n          <span role=\"img\" aria-label=\"Party icon\">\n            🎉\n          </span>{' '}\n          Welcome to Graphon!\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p className=\"big\">\n          Graphon is designed for {size.width >= 768 ? 'slightly ' : ' '}\n          bigger screens!\n        </p>\n        <p>\n          Resize your browser window or{' '}\n          <a href=\"mailto:?subject=Visit+Graphon&body=Hello%21%0D%0APlease+do+not+forget+to+take+a+look+at+the+new+version+of+Graphon%21%0D%0A%0D%0AVisit%3A+https%3A%2F%2Fyour-app-url.com%2F%0D%0A%0D%0ASee+you+later\">\n            <BsEnvelopeFill /> send yourself a reminder\n          </a>{' '}\n          to come back at a better time.\n        </p>\n        <p>Touch devices are not fully supported yet.</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={handleClose}>\n          Got it!\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default ScreenSizeAlert","import * as Comlink from 'comlink'\n/* eslint-disable import/no-webpack-loader-syntax */\nimport Worker from 'worker-loader!./worker'\n\nlet parsingWorker // = new Worker()\n\nexport function parseDatasetInWorker(data, dataTypes, parsingOptions) {\n  // TODO: Check lazy loading vs terminate on each time\n  if (!parsingWorker) {\n    parsingWorker = new Worker()\n  }\n  let obj = Comlink.wrap(parsingWorker)\n  let out = obj.parseDataset(data, dataTypes, parsingOptions)\n  return out\n}\n\nlet mappingWorker // = new Worker()\n\nexport function mapDataInWorker(\n  chartName,\n  { data, mapping, visualOptions, dataTypes },\n  customChart\n) {\n  // TODO: Check lazy loading vs terminate on each time\n  if (!mappingWorker) {\n    mappingWorker = new Worker()\n  }\n  let obj = Comlink.wrap(mappingWorker)\n  let out = obj.mapData(\n    chartName,\n    { data, mapping, visualOptions, dataTypes },\n    customChart\n  )\n  return out\n}\n","import { useEffect, useState } from 'react'\n\n// Hook\nexport default function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    \n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    \n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    \n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n","// import React from \"react\"\nimport { BsClock, BsHash, BsType } from 'react-icons/bs'\nimport arEG from 'd3-time-format/locale/ar-EG.json'\nimport caES from 'd3-time-format/locale/ca-ES.json'\nimport csCZ from 'd3-time-format/locale/cs-CZ.json'\nimport daDK from 'd3-time-format/locale/da-DK.json'\nimport deCH from 'd3-time-format/locale/de-CH.json'\nimport deDE from 'd3-time-format/locale/de-DE.json'\nimport enCA from 'd3-time-format/locale/en-CA.json'\nimport enGB from 'd3-time-format/locale/en-GB.json'\nimport enUS from 'd3-time-format/locale/en-US.json'\nimport esES from 'd3-time-format/locale/es-ES.json'\nimport esMX from 'd3-time-format/locale/es-MX.json'\nimport faIR from 'd3-time-format/locale/fa-IR.json'\nimport fiFI from 'd3-time-format/locale/fi-FI.json'\nimport frCA from 'd3-time-format/locale/fr-CA.json'\nimport frFR from 'd3-time-format/locale/fr-FR.json'\nimport heIL from 'd3-time-format/locale/he-IL.json'\nimport huHU from 'd3-time-format/locale/hu-HU.json'\nimport itIT from 'd3-time-format/locale/it-IT.json'\nimport jaJP from 'd3-time-format/locale/ja-JP.json'\nimport koKR from 'd3-time-format/locale/ko-KR.json'\nimport mkMK from 'd3-time-format/locale/mk-MK.json'\nimport nbNO from 'd3-time-format/locale/nb-NO.json'\nimport nlNL from 'd3-time-format/locale/nl-NL.json'\nimport plPL from 'd3-time-format/locale/pl-PL.json'\nimport ptBR from 'd3-time-format/locale/pt-BR.json'\nimport ruRU from 'd3-time-format/locale/ru-RU.json'\nimport svSE from 'd3-time-format/locale/sv-SE.json'\nimport ukUA from 'd3-time-format/locale/uk-UA.json'\nimport zhCN from 'd3-time-format/locale/zh-CN.json'\nimport zhTW from 'd3-time-format/locale/zh-TW.json'\n\n// // creplaced with the following\n// export const DATATYPE_ICONS = {\n//   'date': <BsClock />,\n//   'number': <BsHash />,\n//   'string': <BsType />\n// }\n\nexport const DateIcon = BsClock\nexport const NumberIcon = BsHash\nexport const StringIcon = BsType\n\nexport const dataTypeIcons = {\n  date: DateIcon,\n  number: NumberIcon,\n  string: StringIcon,\n}\n\nexport const localeList = {\n  'ar-EG': arEG,\n  'ca-ES': caES,\n  'cs-CZ': csCZ,\n  'da-DK': daDK,\n  'de-CH': deCH,\n  'de-DE': deDE,\n  'en-CA': enCA,\n  'en-GB': enGB,\n  'en-US': enUS,\n  'es-ES': esES,\n  'es-MX': esMX,\n  'fa-IR': faIR,\n  'fi-FI': fiFI,\n  'fr-CA': frCA,\n  'fr-FR': frFR,\n  'he-IL': heIL,\n  'hu-HU': huHU,\n  'it-IT': itIT,\n  'ja-JP': jaJP,\n  'ko-KR': koKR,\n  'mk-MK': mkMK,\n  'nb-NO': nbNO,\n  'nl-NL': nlNL,\n  'pl-PL': plPL,\n  'pt-BR': ptBR,\n  'ru-RU': ruRU,\n  'sv-SE': svSE,\n  'uk-UA': ukUA,\n  'zh-CN': zhCN,\n  'zh-TW': zhTW,\n}\n\nexport const WEBWORKER_ACTIVE = true\n\nexport const separatorsLabels = {\n  '\\\\t': 'Tab',\n  ';': 'Semicolon',\n  ',': 'Comma',\n  '|': 'Pipe',\n}\n\nexport const separatorsList = Object.keys(separatorsLabels)\n\nexport const DefaultSeparator = \",\"\n\nexport const AGGREGATIONS_LABELS = {\n  \"count\": \"Count\",\n  \"mean\": \"Average\",\n  \"median\": \"Median\",\n  \"max\": \"Max\",\n  \"min\": \"Min\",\n  \"countDistinct\": \"Count unique\",\n  \"sum\": \"Sum\",\n  \"csv\": \"CSV\",\n  \"csvDistinct\": \"CSV (unique)\",\n}\n\nexport const SCALES_LABELS = {\n  \"sequential\": \"Sequential\",\n  \"diverging\": \"Diverging\",\n  \"ordinal\": \"Ordinal\"\n}\n\nexport const COLOR_SCHEMES_LABELS = {\n  \"interpolateBlues\": \"Blue sequential\",\n  \"interpolateGreens\": \"Green sequential\",\n  \"interpolateReds\": \"Red sequential\",\n  \"interpolateRdBu\": \"RdBu diverging\",\n  \"interpolateBrBG\": \"BrBG diverging\",\n  \"interpolatePiYG\": \"PiYG diverging\",\n  \"schemeCategory10\": \"Categorical 10\",\n  \"interpolateTurbo\": \"Turbo discrete\",\n  \"interpolateSpectral\": \"Spectral discrete\"\n}","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/worker.0db894ce.worker.js\");\n}\n","import { dsvFormat } from 'd3'\nimport { DefaultSeparator, separatorsList } from '../../constants'\n\nfunction JsonParser(dataString) {\n  //Removing white lines (useful when pasting from sheets, ecc)\n  const trimmedDataString = dataString\n    .trim()\n    .replace(/^(?=\\n)$|^\\s*|\\s*$|\\n\\n+/gm, '')\n  \n  return [JSON.parse(trimmedDataString), {}]\n}\n\nfunction CsvParser(dataString, opts) {\n  //Removing white lines (useful when pasting from sheets, ecc)\n  const trimmedDataString = dataString\n    .trim()\n    .replace(/^(?=\\n)$|^\\s*|\\s*$|\\n\\n+/gm, '')\n  \n  // Use the separator the user gives me, if any\n  if (opts.separator) {\n    return [\n      dsvFormat(opts.separator).parse(trimmedDataString),\n      {\n        separator: opts.separator,\n      },\n    ]\n  }\n  // Otherwise, try to infer it\n  const candidates = []\n  for (const _separator of separatorsList) {\n    const separator = _separator\n      .replace(/\\\\r/g, '\\r')\n      .replace(/\\\\n/g, '\\n')\n      .replace(/\\\\t/g, '\\t')\n    try {\n      const parser = dsvFormat(separator)\n      const parsed = parser.parse(trimmedDataString)\n      if (\n        (parsed.length > 0 && Object.keys(parsed[0]).length > 1) ||\n        separator === DefaultSeparator\n      ) {\n        candidates.push({\n          separator,\n          score: Object.keys(parsed[0]).length,\n          parsed,\n        })\n      }\n    } catch (e) {}\n  }\n  candidates.sort((a, b) => b.score - a.score)\n  return [candidates[0].parsed, { separator: candidates[0].separator }]\n}\n\nexport const SparqlMarker = Symbol(\"RawgraphsSparqlMarker\")\n\nfunction SparqlParser(data, opts) {\n  if (data[SparqlMarker] === true) {\n    return [data, {}]\n  } \n  throw new Error(\"Not a sparql result\")\n}\n\nconst PARSERS = [\n  { dataType: 'sparql', parse: SparqlParser },\n  { dataType: 'json', parse: JsonParser },\n  { dataType: 'csv', parse: CsvParser },\n]\n\nexport function parseData(data, opts) {\n  for (const parser of PARSERS) {\n    try {\n      const [parsed, extra] = parser.parse(data, opts)\n      return [parser.dataType, parsed, extra]\n    } catch (e) {\n      // console.error('Parsing error', e)\n    }\n  }\n  return [null, null]\n}\n\nexport function parseAndCheckData(dataString, opts) {\n  const [dataType, data, extra] = parseData(dataString, opts)\n  if (dataType === null) {\n    // This should never happen\n    return [\n      dataType,\n      data,\n      'Cannot parse dataset! (This should never happen)',\n      {},\n    ]\n  } else {\n    if (dataType === 'json') {\n      return ['json', data, null, extra]\n    } else if (data.length > 0) {\n      return [dataType, data, null, extra]\n    } else {\n      return [null, null, \"We can't parse your data.\", {}]\n    }\n  }\n}\n\nfunction isScalarType(item) {\n  return ['string', 'number', 'boolean'].includes(typeof item)\n}\n\nexport function normalizeJsonArray(jsonArray) {\n  return jsonArray\n    .map((element) => {\n      let iterateElement = element\n      if (Array.isArray(iterateElement)) {\n        const tmp = {}\n        iterateElement.forEach((item, i) => {\n          tmp[`Column ${i + 1}`] = item\n        })\n        iterateElement = tmp\n      }\n      if (isScalarType(iterateElement) || iterateElement === null) {\n        iterateElement = { value: iterateElement }\n      }\n      const outElement = {}\n      for (const property in iterateElement) {\n        const value = iterateElement[property]\n        const valueType = typeof value\n        if (Array.isArray(value)) {\n          outElement[property] = value.filter(isScalarType).join(' ')\n        } else if (valueType === 'object' && valueType !== null) {\n          for (const nestedProperty in value) {\n            const nestedValue = value[nestedProperty]\n            if (isScalarType(nestedValue)) {\n              outElement[`${property}.${nestedProperty}`] = nestedValue\n            }\n          }\n        } else if (isScalarType(value)) {\n          outElement[property] = value\n        }\n      }\n      return outElement\n    })\n    .filter((item) => item !== null)\n}\n","import { flatMap, omit, map } from 'lodash'\n\nexport function stackData(data, column) {\n  return flatMap(data, (record) => {\n    const key = record[column]\n    const others = omit(record, column)\n    return map(others, (value, prop) => {\n      return {\n        [column]: key,\n        column: prop,\n        value,\n      }\n    })\n  })\n}\n","import { parseDataset } from '@rawgraphs/rawgraphs-core'\nimport { difference, get } from 'lodash'\nimport { useCallback, useState } from 'react'\nimport { DefaultSeparator, localeList, WEBWORKER_ACTIVE } from '../constants'\nimport { parseDatasetInWorker } from '../worker'\nimport {\n  normalizeJsonArray,\n  parseAndCheckData,\n} from './useDataLoaderUtils/parser'\nimport { stackData } from './useDataLoaderUtils/stack'\n\nexport const DATA_LOADER_MODE = {\n  DIRECT: 'direct',\n  REPLACE: 'replace',\n}\n\nconst __cache = {}\n\nexport default function useDataLoader() {\n  /* Data to be plot in the chart */\n  /* First stage: raw user input */\n  const [userInput, setUserInput] = useState('')\n  const [dataSource, setDataSource] = useState(null)\n\n  /* Second stage: parsed data and user data type (i.e. csv, json, ...) */\n  /*\n   * In case user data type is json, userData is not filled immediately.\n   * Instead, a JSON view is first shown asking the user to select an\n   * array inside the JSON tree. The (parsed) content of the array will\n   * be used to fill `userData`. In case of some error during parsing,\n   * the `parseError` state holds the error description\n   */\n  const [userData, setUserData] = useState(null)\n  const [userDataType, setUserDataType] = useState(null)\n  const [parseError, setParserError] = useState(null)\n  const [unstackedInfo, setUnstackedInfo] = useState([null, null])\n\n  /* Data Parsing Options */\n  const [separator, setSeparator] = useState(DefaultSeparator)\n  const [thousandsSeparator, setThousandsSeparator] = useState(',')\n  const [decimalsSeparator, setDecimalsSeparator] = useState('.')\n  const [locale, setLocale] = useState(navigator.language || 'en-US')\n  const [stackDimension, setStackDimension] = useState()\n\n  /* Third stage: data ready to become a chart */\n  const [data, setData] = useState(null)\n\n  /* Stack operations */\n  const [unstackedData, unstackedColumns] = unstackedInfo\n\n  /* Misc */\n  const [loading, setLoading] = useState(false)\n  const [mode, setMode] = useState(DATA_LOADER_MODE.DIRECT)\n  const [\n    replaceRequiresConfirmation,\n    setReplaceRequiresConfirmation,\n  ] = useState(undefined)\n\n  /* Unpacking */\n  const columnsTypes = unstackedColumns ?? data?.dataTypes\n\n  //wrapper for async parse via web worker\n  const parseDatasetAsyncAndSetData = useCallback(\n    (data, dataTypes, parsingOptions) => {\n      setLoading(true)\n      return parseDatasetInWorker(data, dataTypes, {\n        ...parsingOptions,\n        dateLocale: get(localeList, parsingOptions.locale),\n      })\n        .then((resultData) => {\n          return resultData\n        })\n        .catch((err) => {\n          console.log('eee', err)\n        })\n        .finally(() => {\n          setLoading(false)\n        })\n    },\n    [setLoading]\n  )\n\n  const parseDatasetSyncAndSetData = useCallback(\n    (data, dataTypes, parsingOptions) => {\n      setLoading(true)\n      return new Promise((resolve, reject) => {\n        try {\n          const resultData = parseDataset(data, dataTypes, {\n            ...parsingOptions,\n            dateLocale: get(localeList, parsingOptions.locale),\n          })\n          resolve(resultData)\n        } catch (e) {\n          reject(e)\n        } finally {\n          setLoading(false)\n        }\n      })\n    },\n    [setLoading]\n  )\n\n  const parseDatasetAuto = useCallback(\n    (data, dataTypes, parsingOptions) => {\n      const worker = WEBWORKER_ACTIVE\n        ? parseDatasetAsyncAndSetData\n        : parseDatasetSyncAndSetData\n      return worker(data, dataTypes, parsingOptions)\n    },\n    [parseDatasetAsyncAndSetData, parseDatasetSyncAndSetData]\n  )\n\n  const parseDatasetAndSetData = useCallback(\n    (data, dataTypes, parsingOptions) => {\n      return parseDatasetAuto(data, dataTypes, parsingOptions).then((data) =>\n        setData(data)\n      )\n    },\n    [parseDatasetAuto]\n  )\n\n  const reset = useCallback(() => {\n    setData(null)\n    setUserData(null)\n    setUserDataType(null)\n    setUserInput('')\n    setDataSource(null)\n    setParserError(null)\n    setStackDimension(null)\n    setUnstackedInfo([null, null])\n  }, [])\n\n  const hydrateFromSavedProject = useCallback(\n    (project) => {\n      const {\n        userInput,\n        userData,\n        userDataType,\n        parseError,\n        unstackedColumns,\n        unstackedData,\n        dataTypes,\n        separator,\n        thousandsSeparator,\n        decimalsSeparator,\n        locale,\n        stackDimension,\n        dataSource,\n      } = project\n      setUserInput(userInput)\n      setUserDataType(userDataType)\n      setSeparator(separator)\n      setThousandsSeparator(thousandsSeparator)\n      setDecimalsSeparator(decimalsSeparator)\n      setLocale(locale)\n      setStackDimension(stackDimension)\n      setDataSource(dataSource)\n      setUserData(userData)\n      setParserError(parseError)\n      setUnstackedInfo([unstackedData, unstackedColumns])\n      parseDatasetAndSetData(userData, dataTypes, {\n        thousandsSeparator,\n        decimalsSeparator,\n        locale,\n      })\n    },\n    [parseDatasetAndSetData]\n  )\n\n  const handleReplacingData = useCallback(\n    (userData) => {\n      parseDatasetAuto(userData, undefined, {\n        locale,\n        decimal: decimalsSeparator,\n        group: thousandsSeparator,\n      }).then((newDataInferred) => {\n        if (newDataInferred.errors.length > 0) {\n          // Parsing resulted in errors, cannot replace data safely!\n          __cache.replacedData = newDataInferred\n          setReplaceRequiresConfirmation('parse-error')\n        } else {\n          const oldColNames = Object.keys(columnsTypes)\n          const newColNames = Object.keys(newDataInferred.dataTypes)\n          const missingCols = difference(oldColNames, newColNames)\n          if (missingCols.length > 0) {\n            // There is at least one column missing in the new dataset\n            // Replace cannot be safe\n            __cache.replacedData = newDataInferred\n            setReplaceRequiresConfirmation('missing-column:' + missingCols[0])\n          } else {\n            const nextDataTypes = {\n              ...newDataInferred.dataTypes,\n              ...columnsTypes, // Keep eventual overrides in data types\n            }\n            parseDatasetAuto(userData, nextDataTypes, {\n              locale,\n              decimal: decimalsSeparator,\n              group: thousandsSeparator,\n            }).then((newData) => {\n              if (newData.errors.length > 0) {\n                // There was some error in type coercing, data cannot be replaced safely\n                __cache.replacedData = newDataInferred\n                setReplaceRequiresConfirmation('type-mismatch')\n              } else {\n                if (stackDimension) {\n                  setUnstackedInfo([userData, newData.dataTypes])\n                  const stackedData = stackData(userData, stackDimension)\n                  setUserData(stackedData)\n                  parseDatasetAuto(stackedData, data.dataTypes, {\n                    locale,\n                    decimal: decimalsSeparator,\n                    group: thousandsSeparator,\n                  }).then(data => setData(data))\n                } else {\n                  setData(newData)\n                }\n              }\n            })\n          }\n        }\n      })\n    },\n    [\n      columnsTypes,\n      data,\n      decimalsSeparator,\n      locale,\n      parseDatasetAuto,\n      stackDimension,\n      thousandsSeparator,\n    ]\n  )\n\n  const handleNewUserData = useCallback(\n    (nextUserData) => {\n      setUserData(nextUserData)\n      if (mode === DATA_LOADER_MODE.DIRECT) {\n        parseDatasetAndSetData(nextUserData, undefined, {\n          locale,\n          decimal: decimalsSeparator,\n          group: thousandsSeparator,\n        })\n      } else if (mode === DATA_LOADER_MODE.REPLACE) {\n        handleReplacingData(nextUserData)\n      } else {\n        console.error('Unknown data loader mode!')\n      }\n    },\n    [\n      decimalsSeparator,\n      handleReplacingData,\n      locale,\n      mode,\n      parseDatasetAndSetData,\n      thousandsSeparator,\n    ]\n  )\n\n  /*\n   * Callback to handle user injecting data\n   * When user uploads some data (in any possible way), we store the raw user input at first\n   * Then we try to read it using different parsers (notably json and csv)\n   * Finally, if read is successful, we go inferring types using the raw-core library\n   */\n  function setUserDataAndDetect(str, source, options) {\n    const [dataType, parsedUserData, error, extra] = parseAndCheckData(str, {\n      separator: get(options, 'separator', null),\n    })\n    setUserInput(str)\n    setDataSource(source)\n    setUserDataType(dataType)\n    setParserError(error)\n    if (extra && typeof extra === \"object\" && \"separator\" in extra) {\n      setSeparator(extra.separator)\n    }\n    // Data parsed ok set parent data\n    if (dataType !== 'json' && !error) {\n      handleNewUserData(parsedUserData)\n    }\n    const jsonPath = dataSource?.jsonPath ?? undefined\n    if (dataType === 'json' && !error && jsonPath !== undefined) {\n      const jsonData = get(parsedUserData, jsonPath, null)\n      if (Array.isArray(jsonData)) {\n        handleNewUserData(jsonData)\n      }\n    }\n  }\n\n  const setJsonData = useCallback(\n    (data, path) => {\n      const normalized = normalizeJsonArray(data)\n      setUserData(normalized)\n      setDataSource({...dataSource, jsonPath: path })\n      handleNewUserData(normalized)\n    },\n    [dataSource, handleNewUserData]\n  )\n\n  /*\n   * Callback to handle user changing separator\n   * When the separator is changed, a fresh parsing of raw user input is required for proper handling\n   * Steps are very similar with respect to the `setUserInputAndDetect` callback, except for the\n   * fact that we take user input from state instead of from parameters\n   */\n  function handleChangeSeparator(newSeparator) {\n    const [dataType, parsedUserData, error] = parseAndCheckData(userInput, {\n      separator: newSeparator,\n    })\n    setSeparator(newSeparator)\n    setUserDataType(dataType)\n    setParserError(error)\n    if (dataType !== 'json' && !error && newSeparator) {\n      setUserData(parsedUserData)\n      parseDatasetAndSetData(parsedUserData, undefined, {\n        locale,\n        decimal: decimalsSeparator,\n        group: thousandsSeparator,\n      })\n    }\n  }\n\n  function handleChangeLocale(newLocale) {\n    if (!data) {\n      return\n    }\n    parseDatasetAndSetData(data.dataset, data.dataTypes, {\n      locale: newLocale,\n      decimal: decimalsSeparator,\n      group: thousandsSeparator,\n    })\n    setLocale(newLocale)\n  }\n\n  function handleChangeDecimalSeparator(newDecimalSeparator) {\n    const [dataType, parsedUserData, error] = parseAndCheckData(userInput, {\n      separator,\n    })\n    setDecimalsSeparator(newDecimalSeparator)\n    setUserDataType(dataType)\n    setParserError(error)\n    if (dataType !== 'json' && !error) {\n      setUserData(parsedUserData)\n      setLoading(true)\n      parseDatasetAndSetData(parsedUserData, undefined, {\n        locale,\n        decimal: newDecimalSeparator,\n        group: thousandsSeparator,\n      })\n      //setData(parseDataset(parsedUserData, undefined, {locale, decimal: newDecimalSeparator, group:thousandsSeparator}));\n    }\n  }\n\n  function handleChangeThousandsSeparator(newThousandsSeparator) {\n    const [dataType, parsedUserData, error] = parseAndCheckData(userInput, {\n      separator,\n    })\n    setThousandsSeparator(newThousandsSeparator)\n    setUserDataType(dataType)\n    setParserError(error)\n    if (dataType !== 'json' && !error) {\n      setUserData(parsedUserData)\n      parseDatasetAndSetData(parsedUserData, undefined, {\n        locale,\n        decimal: decimalsSeparator,\n        group: newThousandsSeparator,\n      })\n      // setData(parseDataset(parsedUserData, undefined, {locale, decimal: decimalsSeparator, group:newThousandsSeparator}));\n    }\n  }\n\n  /*\n   * Callback to handle user coercing a type of a column\n   * When this happens, we don't need to go through data parsing again, we just invoke\n   * the raw-core library starting from the parsed data (stage-2 data)\n   */\n  function coerceTypes(nextTypes) {\n    parseDatasetAndSetData(userData, nextTypes, {\n      locale,\n      decimal: decimalsSeparator,\n      group: thousandsSeparator,\n    })\n  }\n\n  /*\n   * Callback to handle user selecting a data sample from RawGraphs.io\n   * When this happens, we have data parsed with dsv with a proper separator out of the box\n   *   since in this case data are rigorously checked\n   * So we just take them as good and use the raw-core library to infer types\n   */\n  function loadSample(rawData, sampleSeparator) {\n    setSeparator(sampleSeparator)\n    setUserDataAndDetect(\n      rawData,\n      { type: 'sample' },\n      { separator: sampleSeparator }\n    )\n  }\n\n  function handleInlineEdit(newDataset) {\n    setUserData(newDataset)\n    parseDatasetAndSetData(newDataset, data.dataTypes, {\n      locale,\n      decimal: decimalsSeparator,\n      group: thousandsSeparator,\n    })\n    // setData(parseDataset(newDataset, data.dataTypes, {locale}))\n  }\n\n  function handleStackOperation(column) {\n    setStackDimension(column)\n    if (column !== null) {\n      if (unstackedData === null) {\n        setUnstackedInfo([userData, data.dataTypes])\n      }\n      const stackedData = stackData(unstackedData || userData, column)\n      setUserData(stackedData)\n      parseDatasetAndSetData(stackedData, undefined, {\n        locale,\n        decimal: decimalsSeparator,\n        group: thousandsSeparator,\n      })\n      // setData(parseDataset(stackedData, undefined, { locale }))\n    } else {\n      setUserData(unstackedData)\n      parseDatasetAndSetData(unstackedData, unstackedColumns, {\n        locale,\n        decimal: decimalsSeparator,\n        group: thousandsSeparator,\n      })\n      setUnstackedInfo([null, null])\n    }\n  }\n\n  const startDataReplace = useCallback(() => {\n    setMode(DATA_LOADER_MODE.REPLACE)\n    __cache.userInput = userInput\n    __cache.userDataType = userDataType\n    __cache.dataSource = dataSource\n    __cache.userData = userData\n    setUserInput(null)\n    setUserDataType(null)\n    setDataSource(null)\n    setUserData(null)\n  }, [dataSource, userData, userDataType, userInput])\n\n  const cancelDataReplace = useCallback(() => {\n    setReplaceRequiresConfirmation(false)\n    setMode(DATA_LOADER_MODE.DIRECT)\n    setUserInput(__cache.userInput)\n    setUserDataType(__cache.userDataType)\n    setDataSource(__cache.dataSource)\n    setUserData(__cache.userData)\n  }, [])\n\n  const commitDataReplace = useCallback(() => {\n    setReplaceRequiresConfirmation(false)\n    setData(__cache.replacedData)\n    setParserError(null)\n    setStackDimension(null)\n    setUnstackedInfo([null, null])\n  }, [])\n\n  return {\n    userInput,\n    setUserInput: setUserDataAndDetect,\n    userData,\n    userDataType,\n    parseError,\n    unstackedData,\n    unstackedColumns,\n    separator,\n    setSeparator: handleChangeSeparator,\n    thousandsSeparator,\n    setThousandsSeparator: handleChangeThousandsSeparator,\n    decimalsSeparator,\n    setDecimalsSeparator: handleChangeDecimalSeparator,\n    locale,\n    setLocale: handleChangeLocale,\n    stackDimension,\n    dataSource,\n    data,\n    loading,\n    coerceTypes,\n    loadSample,\n    handleInlineEdit,\n    handleStackOperation,\n    setJsonData,\n    resetDataLoader: reset,\n    hydrateFromSavedProject,\n    dataLoaderMode: mode,\n    startDataReplace,\n    cancelDataReplace,\n    commitDataReplace,\n    replaceRequiresConfirmation,\n  }\n}\n","import React, { useMemo, useRef, useState, useCallback } from 'react'\nimport ReactDataGrid from 'react-data-grid'\nimport { Overlay, OverlayTrigger } from 'react-bootstrap'\nimport classNames from 'classnames'\nimport { getTypeName, dateFormats } from '@rawgraphs/rawgraphs-core'\nimport S from './DataGrid.module.scss'\nimport { keyBy, get, isEqual } from 'lodash'\nimport {\n  dataTypeIcons,\n  DateIcon,\n  StringIcon,\n  NumberIcon,\n} from '../../constants'\nimport { BsFillCaretRightFill } from 'react-icons/bs'\n\nconst DATE_FORMATS = Object.keys(dateFormats)\n\nconst DateFormatSelector = React.forwardRef(\n  ({ currentFormat, onChange, className, ...props }, ref) => {\n    return (\n      <div\n        className={classNames(className, S['date-format-selector'])}\n        ref={ref}\n        {...props}\n      >\n        {DATE_FORMATS.map((dateFmt) => (\n          <div\n            key={dateFmt}\n            className={classNames(S['date-format-selector-entry'], {\n              [S.selected]: get(currentFormat, 'dateFormat', '') === dateFmt,\n            })}\n            onClick={(e) => {\n              e.stopPropagation()\n              e.preventDefault()\n              onChange &&\n                onChange({\n                  type: 'date',\n                  dateFormat: dateFmt,\n                })\n            }}\n          >\n            {dateFmt}\n          </div>\n        ))}\n      </div>\n    )\n  }\n)\n\nfunction DataTypeSelector({\n  currentType: typeDescriptor,\n  onTypeChange,\n  currentTypeComplete,\n}) {\n  const dataTypeIconDomRef = useRef(null)\n  const [showPicker, setShowPicker] = useState(false)\n  const currentType = get(typeDescriptor, 'type', typeDescriptor)\n\n  const handleTypeChange = useCallback(\n    (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      const newType = e.target.dataset.datatype\n      if (\n        typeof onTypeChange === 'function' &&\n        !isEqual(newType, typeDescriptor)\n      ) {\n        onTypeChange(newType)\n      }\n      setShowPicker(false)\n    },\n    [typeDescriptor, onTypeChange]\n  )\n\n  const handleTypeChangeDate = useCallback(\n    (newType) => {\n      if (\n        typeof onTypeChange === 'function' &&\n        !isEqual(newType, typeDescriptor)\n      ) {\n        onTypeChange(newType)\n      }\n      setShowPicker(false)\n    },\n    [typeDescriptor, onTypeChange]\n  )\n\n  const handleTargetClick = useCallback(\n    (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      setShowPicker(!showPicker)\n    },\n    [showPicker]\n  )\n\n  const Icon = dataTypeIcons[currentType]\n\n  return (\n    <>\n      <span\n        role=\"button\"\n        className={S['data-type-selector-trigger']}\n        ref={dataTypeIconDomRef}\n        onClick={handleTargetClick}\n      >\n        <Icon />\n      </span>\n      <Overlay\n        target={dataTypeIconDomRef.current}\n        show={showPicker}\n        placement=\"bottom-start\"\n        rootClose={true}\n        rootCloseEvent=\"click\"\n        onHide={() => {\n          setShowPicker(false)\n        }}\n        container={document.body}\n      >\n        {({\n          placement,\n          scheduleUpdate,\n          arrowProps,\n          outOfBoundaries,\n          show: _show,\n          ...props\n        }) => (\n          <div\n            id=\"data-type-selector\"\n            className={S['data-type-selector']}\n            onClick={(e) => e.stopPropagation()}\n            {...props}\n          >\n            <div\n              data-datatype=\"number\"\n              onClick={handleTypeChange}\n              className={classNames(S['data-type-selector-item'], {\n                [S.selected]: currentType === 'number',\n              })}\n            >\n              <NumberIcon /> Number\n            </div>\n            <OverlayTrigger\n              placement=\"right-start\"\n              overlay={\n                <DateFormatSelector\n                  currentType={typeDescriptor}\n                  onChange={handleTypeChangeDate}\n                />\n              }\n              trigger=\"click\"\n            >\n              {({ ref, ...triggerHandler }) => (\n                <div\n                  ref={ref}\n                  data-datatype=\"date\"\n                  {...triggerHandler}\n                  className={classNames(\n                    S['data-type-selector-item'],\n                    S['parent-type-selector'],\n                    { [S.selected]: currentType === 'date' }\n                  )}\n                >\n                  <div>\n                    <DateIcon />\n                    {'Date'}\n                    {currentType === 'date' && (\n                      <span className={S['date-format-preview']}>\n                        {' (' + (currentTypeComplete.dateFormat) + ')  '}\n                      </span>\n                    )}\n                  </div>\n                  <BsFillCaretRightFill\n                    style={{ marginRight: 0, fill: 'var(--gray-700)' }}\n                  />\n                </div>\n              )}\n            </OverlayTrigger>\n            <div\n              data-datatype=\"string\"\n              onClick={handleTypeChange}\n              className={classNames(S['data-type-selector-item'], {\n                [S.selected]: currentType === 'string',\n              })}\n            >\n              <StringIcon /> String\n            </div>\n          </div>\n        )}\n      </Overlay>\n    </>\n  )\n}\n\nfunction HeaderRenderer({ ...props }) {\n  const { column } = props\n  const { key, sortColumn, sortDirection } = column\n  return (\n    <div\n      className={classNames(\n        { [S['raw-col-header']]: true },\n        {\n          [S['unsorted']]:\n            key !== sortColumn ||\n            (key === sortColumn && sortDirection === 'NONE'),\n        },\n        { [S['acs']]: key === sortColumn && sortDirection === 'ASC' },\n        { [S['desc']]: key === sortColumn && sortDirection === 'DESC' }\n      )}\n    >\n      <DataTypeSelector\n        currentType={column._raw_datatype}\n        onTypeChange={column._raw_coerceType}\n        currentTypeComplete={column._raw_datatype}\n      />\n      <span\n        className={classNames(S['column-name'], 'text-truncate', 'd-block')}\n        title={column.name}\n      >\n        {column.name}\n      </span>\n    </div>\n  )\n}\n\nexport default function DataGrid({\n  userDataset,\n  dataset,\n  errors,\n  dataTypes,\n  coerceTypes,\n  onDataUpdate,\n}) {\n  const [[sortColumn, sortDirection], setSort] = useState(['id', 'NONE'])\n\n  const keyedErrors = useMemo(() => keyBy(errors, 'row'), [errors])\n\n  const containerEl = useRef()\n\n  // Make id column just as large as needed\n  // Adjust constants to fit cell padding and font size\n  // (Math.floor(Math.log10(data.dataset.length)) + 1) is the number\n  //   of digits of the highest id\n  const idColumnWidth =\n    24 + 8 * (Math.floor(Math.log10(userDataset.length)) + 1)\n  \n  const equalDinstribution = (containerEl.current?.getBoundingClientRect().width - idColumnWidth - 1) / Object.keys(dataTypes).length\n  const columnWidth = equalDinstribution ? Math.max(equalDinstribution, 170) : 170;\n\n  const columns = useMemo(() => {\n    if (!userDataset || !dataTypes) {\n      return []\n    }\n    return [\n      {\n        key: '_id',\n        name: '',\n        headerRenderer: () => null,\n        frozen: true,\n        width: idColumnWidth,\n        sortable: true,\n      },\n      ...Object.keys(dataTypes).map((k, i) => ({\n        key: k,\n        name: k,\n        sortColumn: sortColumn,\n        sortDirection: sortDirection,\n        headerRenderer: HeaderRenderer,\n        editable: true,\n        formatter: ({ row }) => {\n          return (\n            <div\n              className={classNames({ [S['has-error']]: row?._errors?.[k] })}\n            >\n              {row[k]?.toString()}\n              {/* {row[k]} */}\n            </div>\n          )\n        },\n        _raw_datatype: dataTypes[k],\n        _raw_coerceType: (nextType) =>\n          coerceTypes({ ...dataTypes, [k]: nextType }),\n        sortable: true,\n        resizable: true,\n        width: columnWidth\n      })),\n    ]\n  }, [\n    coerceTypes,\n    dataTypes,\n    userDataset,\n    idColumnWidth,\n    columnWidth,\n    sortColumn,\n    sortDirection,\n  ])\n\n  const sortedDataset = useMemo(() => {\n    let datasetWithIds = userDataset.map((item, i) => ({\n      // Using .map ensures that we are not mutating a property\n      ...item,\n      _id: i + 1, // Give items some id to populate left-most column\n      _stage3: dataset[i], // The dataset parsed by raw lib basing on data types is needed for sorting!\n      _errors: keyedErrors[i]?.error, // Inject errors to format cells with parsing errors\n    }))\n    if (sortDirection === 'NONE') return datasetWithIds\n\n    const sortColumnType = getTypeName(dataTypes[sortColumn])\n\n    if (sortColumnType === 'number') {\n      datasetWithIds = datasetWithIds.sort(\n        (a, b) => a._stage3[sortColumn] - b._stage3[sortColumn]\n      )\n    } else if (sortColumnType === 'date') {\n      datasetWithIds =\n        datasetWithIds.sort(\n          (a, b) =>\n            a._stage3[sortColumn]?.valueOf() ??\n            0 - b._stage3[sortColumn]?.valueOf()\n        ) ?? 0\n    } else {\n      datasetWithIds = datasetWithIds.sort((a, b) =>\n        a._stage3[sortColumn]\n          ?.toString()\n          .localeCompare(b._stage3[sortColumn].toString())\n      )\n    }\n\n    return sortDirection === 'DESC' ? datasetWithIds.reverse() : datasetWithIds\n  }, [userDataset, sortDirection, dataTypes, sortColumn, dataset, keyedErrors])\n\n  const handleSort = useCallback((columnKey, direction) => {\n    setSort([columnKey, direction])\n  }, [])\n\n  return (\n    <div ref={containerEl}>\n      <ReactDataGrid\n        minColumnWidth={idColumnWidth}\n        columns={columns}\n        rows={sortedDataset}\n        rowHeight={48}\n        sortColumn={sortColumn}\n        sortDirection={sortDirection}\n        onSort={handleSort}\n        height={432}\n        onColumnResize={() => {\n          \n        }}\n        onRowsUpdate={(update) => {\n          if (update.action === 'CELL_UPDATE') {\n            const newDataset = [...userDataset]\n            newDataset[update.fromRow] = {\n              ...newDataset[update.fromRow],\n              [update.cellKey]: update.updated[update.cellKey],\n            }\n            onDataUpdate && onDataUpdate(newDataset)\n          }\n        }}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Row, Col, Card } from 'react-bootstrap'\nimport styles from './DataSamples.module.scss'\n\nconst samplesList = [\n  {\n    name: 'Hate crimes in New York',\n    category: 'Alluvial Diagram',\n    url: './sample-datasets/Alluvial diagram - Hate crimes in New York.tsv',\n    delimiter: '\\t',\n    sourceName: 'NYC Open Data',\n    sourceURL:\n      'https://data.cityofnewyork.us/Public-Safety/NYPD-Hate-Crimes/bqiq-cu78',\n  },\n  {\n    name: 'Lannister vs Starck relationships',\n    category: 'Arc diagrams',\n    url:\n      './sample-datasets/Arc diagrams - Lannister vs Starck relationships.tsv',\n    delimiter: '\\t',\n    sourceName: 'T. Breid via Kaggle',\n    sourceURL: 'https://www.kaggle.com/theobreid/got-data',\n  },\n  {\n    name: 'EU Index of consumer prices',\n    category: 'Horizon Graph',\n    url: './sample-datasets/Horizon Graph - EU Index of consumer prices.tsv',\n    delimiter: '\\t',\n    sourceName: 'Eurostat',\n    sourceURL:\n      'https://ec.europa.eu/eurostat/databrowser/bookmark/d84c6140-ed7e-443e-baf9-918679862d58?lang=en',\n  },\n\n  {\n    name: 'New York mean wage per occupation',\n    category: 'Beeswarm plot',\n    url: './sample-datasets/Beeswarm plot - NY mean wages.tsv',\n    delimiter: '\\t',\n    sourceName: 'NYC Open Data',\n    sourceURL:\n      'https://data.ny.gov/w/gkgz-nw24/caer-yrtv?cur=S3JXBWlXCbs&from=SAa8_R9mOdD',\n  },\n\n  {\n    name: 'Temperature in Paris during the World War II',\n    category: 'Contour plot',\n    url:\n      './sample-datasets/Contour plot - Mean temperature in Paris 1944-1945.tsv',\n    delimiter: '\\t',\n    sourceName: 'NOAA',\n    sourceURL:\n      'https://www.ncdc.noaa.gov/data-access/land-based-station-data/land-based-datasets/world-war-ii-era-data',\n  },\n\n  {\n    name: 'Highest grossing movies in history',\n    category: 'Bubble chart',\n    url: './sample-datasets/Bubble Chart - TOP 50 Groossing Movies.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikipedia',\n    sourceURL:\n      'https://en.wikipedia.org/w/index.php?title=List_of_highest-grossing_films&oldid=1023491946',\n  },\n\n  {\n    name: 'Foreign residents in Milan',\n    category: 'Bumpchart',\n    url: './sample-datasets/Bump chart - Foreign residents in Milan.tsv',\n    delimiter: '\\t',\n    sourceName: 'Comune di Milano',\n    sourceURL:\n      'https://dati.comune.milano.it/dataset/ds74-popolazione-residenti-stranieri-cittadinanza',\n  },\n\n  {\n    name: 'Estimated migration flows between macro-areas from 1960 to 1970',\n    category: 'Chord diagram',\n    url:\n      './sample-datasets/Chord Diagram - Estimated migration flows between macro-areas.csv',\n    delimiter: ',',\n    sourceName: 'Gui J. Abel, via Data to Viz',\n    sourceURL:\n      'https://github.com/holtzy/data_to_viz/tree/master/Example_dataset',\n  },\n\n  {\n    name: 'Most populated cities per continent',\n    category: 'Circle packing',\n    url: './sample-datasets/Circle Packing - Most populated cities.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikidata',\n    sourceURL:\n      'https://query.wikidata.org/#SELECT%20%3Fitem%20%3FitemLabel%20%3Fpopulation%20%3Fcountry%20%3FcountryLabel%20%3Fcontinent%20%3FcontinentLabel%0AWHERE%20%7B%0A%20%20%3Fitem%20wdt%3AP31%20wd%3AQ1637706%20.%20%23%20get%20things%20that%20are%20bands%0A%20%20%3Fitem%20wdt%3AP1082%20%3Fpopulation%20.%0A%20%20%23%3Fitems%20wdt%3AP571%20%3Fdate%20.%20%23%20get%20the%20date%20when%20the%20band%20was%20founded%0A%20%20%3Fitem%20wdt%3AP17%20%3Fcountry%20.%0A%20%20%3Fcountry%20wdt%3AP30%20%3Fcontinent%20.%0A%20%20%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22%5BAUTO_LANGUAGE%5D%2Cen%22.%20%7D%0A%7D%0A',\n  },\n\n  {\n    name: 'Kobe Bryant shoots',\n    category: 'Hexagonal Binning, Voronoi diagram',\n    url: './sample-datasets/Hexbin - basketball shots.tsv',\n    delimiter: '\\t',\n    sourceName: 'Kaggle',\n    sourceURL: 'https://www.kaggle.com/c/kobe-bryant-shot-selection/',\n  },\n\n  {\n    name: 'Orchestras by musical instrument',\n    category: 'Treemap',\n    url: './sample-datasets/Treemap - Orchestra.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikipedia',\n    sourceURL:\n      'https://en.wikipedia.org/w/index.php?title=Orchestra&oldid=1022472978',\n  },\n\n  {\n    name: 'Italians PMs and Presidents',\n    category: 'Gantt chart',\n    url: './sample-datasets/Gantt chart - Italian PMs and presidents.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikidata',\n    sourceURL:\n      'https://query.wikidata.org/#%23Primi%20ministri%0ASELECT%20%3Fitem%20%3FitemLabel%20%3Fstart%20%3Fend%0AWHERE%20%0A%7B%0A%20%20%3Fitem%20p%3AP39%20%3Fposition.%0A%20%20%3Fposition%20ps%3AP39%20wd%3AQ332711%3B%0A%20%20%20%20%20%20%20%20pq%3AP580%20%3Fstart%3B%0A%20%20%20%20%20%20%20%20pq%3AP582%20%3Fend%0A%20%20%23%3Fstart%20wdt%3AP580%20%3Fitem.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22%5BAUTO_LANGUAGE%5D%2Cen%22.%20%7D%0A%7D',\n  },\n\n  {\n    name: 'Revenues per Music format',\n    category: 'Line chart',\n    url: './sample-datasets/Line chart - RIAA Music format revenues.tsv',\n    delimiter: '\\t',\n    sourceName: 'RIAA',\n    sourceURL: 'https://www.riaa.com/u-s-sales-database/',\n  },\n\n  {\n    name: 'Energy flows in UK (2050)',\n    category: 'Sankey diagram',\n    url: './sample-datasets/Sankey diagram - Energy flows.tsv',\n    delimiter: '\\t',\n    sourceName: 'gov.uk',\n    sourceURL:\n      'https://www.gov.uk/government/publications/2050-pathways-calculator-with-costs',\n  },\n\n  {\n    name: 'Aromas of wine and frequency',\n    category: 'Sunburst Diagram',\n    url: './sample-datasets/Sunburst - Wine Aromas.tsv',\n    delimiter: '\\t',\n    sourceName: 'Own work',\n    sourceURL: '',\n  },\n\n  {\n    name: 'Happiness index',\n    category: 'Multiset Barchart',\n    url: './sample-datasets/Multiset Barchart - Happiness Index.tsv',\n    delimiter: '\\t',\n    sourceName: 'World Happiness Report',\n    sourceURL: 'https://worldhappiness.report/',\n  },\n\n  {\n    name: 'GDP sector composition',\n    category: 'Pie chart, Stacked barchart',\n    url: './sample-datasets/Stacked barchart - GDP sector composition.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikipedia',\n    sourceURL:\n      'https://en.wikipedia.org/w/index.php?title=List_of_countries_by_GDP_sector_composition&oldid=1022131842',\n  },\n\n  {\n    name: 'Felidae classification (cats and friends)',\n    category: 'Dendrogram, Circular dendrogram',\n    url: './sample-datasets/Dendrogram - Felidae classification.tsv',\n    delimiter: '\\t',\n    sourceName: 'Special thanks to interns',\n    sourceURL: '',\n  },\n\n  {\n    name: 'Iris flowers',\n    category: 'Convex hull, Parallel Coordinates',\n    url: './sample-datasets/Convex hull - Iris flowers.tsv',\n    delimiter: '\\t',\n    sourceName: 'R. Fisher',\n    sourceURL: 'https://en.wikipedia.org/wiki/Iris_flower_data_set',\n  },\n\n  {\n    name: 'Letter Frequency by Language',\n    category: 'Matrix plot (Heatmap)',\n    url: './sample-datasets/Matrix Plot - Letters frequencies by language.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikipedia',\n    sourceURL: 'https://en.wikipedia.org/wiki/Letter_frequency',\n  },\n\n  {\n    name: 'FIFA players statistics',\n    category: 'Radar Chart',\n    url: './sample-datasets/Radar Chart - Fifa players.tsv',\n    delimiter: '\\t',\n    sourceName: 'K. Gadiya via Kaggle',\n    sourceURL: 'https://www.kaggle.com/karangadiya/fifa19',\n  },\n\n  {\n    name: 'Olympics Medals',\n    category: 'Streamgraph',\n    url: './sample-datasets/Streamgraph - Olympics Medals.tsv',\n    delimiter: '\\t',\n    sourceName: 'D. Agrawal via Kaggle',\n    sourceURL: 'https://www.kaggle.com/divyansh22/summer-olympics-medals',\n  },\n\n  {\n    name: 'Weather in New York, 2012-2015',\n    category: 'Violin plot, Boxplot',\n    url: './sample-datasets/Violin plot - Weather in New York.tsv',\n    delimiter: '\\t',\n    sourceName: 'NOAA via Vega Dataset',\n    sourceURL:\n      'https://github.com/vega/vega-datasets/blob/master/SOURCES.md#seattle-weathercsv',\n  },\n\n  {\n    name: 'Netflix Original Series 2013/2017',\n    category: 'Bar chart',\n    url: './sample-datasets/Bar chart - Netflix Original Series.tsv',\n    delimiter: '\\t',\n    sourceName: 'M. Schroyer via Data World',\n    sourceURL: 'https://data.world/mattschroyer/netflix-original-series',\n  },\n\n  {\n    name: 'Premier League and Serie A points',\n    category: 'Slope chart',\n    url: './sample-datasets/Slope graph - Premier SerieA ranking.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikipedia',\n    sourceURL: 'https://en.wikipedia.org/wiki/2019%E2%80%9320_Premier_League',\n  },\n\n  // {\n  //   name: '',\n  //   category: '',\n  //   url: './sample-datasets/',\n  //   delimiter: '\\t',\n  //   sourceName: '',\n  //   sourceURL: '',\n  // },\n]\nexport default function DataSamples({ onSampleReady, setLoadingError }) {\n  const select = async (sample) => {\n    const { delimiter, url } = sample\n    let response\n    try {\n      response = await fetch(url)\n    } catch (e) {\n      setLoadingError('Loading error. ' + e.message)\n      return\n    }\n    const text = await response.text()\n    onSampleReady(text, delimiter)\n    setLoadingError(null)\n  }\n  return (\n    <Row>\n      {samplesList\n        // sort by category name\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .map((d, i) => {\n          return (\n            <Col xs={6} lg={4} xl={3} key={i} style={{ marginBottom: 15 }}>\n              <Card className=\"cursor-pointer h-100\">\n                <Card.Body\n                  onClick={() => {\n                    select(d)\n                  }}\n                  className=\"d-flex flex-column\"\n                >\n                  <Card.Title className=\"\">\n                    <h2 className=\"\">{d.name}</h2>\n                    <h4 className=\"m-0\">{d.category}</h4>\n                  </Card.Title>\n                </Card.Body>\n                <a\n                  href={d.sourceURL}\n                  className={[styles['dataset-source']].join(' ')}\n                >\n                  Source: {d.sourceName}\n                </a>\n              </Card>\n            </Col>\n          )\n        })}\n    </Row>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { map } from 'lodash'\nimport './JsonViewer.scss'\n\nconst JsonViewerRecursive = ({\n  contextName,\n  nestingLevel,\n  context,\n  selectFilter,\n  onSelect,\n  path\n}) => {\n  const isSelectable = selectFilter(context)\n  const contextType = typeof context\n  const [mouseOver, setMouseOver] = useState(false)\n\n  const classes = [\n    'json-nested',\n    isSelectable ? 'selectable' : null,\n    mouseOver ? 'hover' : null,\n  ]\n    .filter((i) => i !== null)\n    .join(' ')\n\n  const handleSelect = useCallback(\n    (e) => {\n      if (isSelectable) {\n        e.stopPropagation()\n        e.preventDefault()\n        if (onSelect) onSelect(context, path.join(\".\"))\n      }\n    },\n    [context, isSelectable, onSelect, path]\n  )\n\n  const handleMouseOver = useCallback(\n    (e) => {\n      if (isSelectable) {\n        e.stopPropagation()\n        e.preventDefault()\n        setMouseOver(true)\n      }\n    },\n    [isSelectable]\n  )\n\n  const handleMouseOut = useCallback(\n    (e) => {\n      if (isSelectable) {\n        e.stopPropagation()\n        e.preventDefault()\n        setMouseOver(false)\n      }\n    },\n    [isSelectable]\n  )\n\n  if (contextType === 'object' && contextType !== null) {\n    return (\n      <div\n        className={classes}\n        onClick={handleSelect}\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}\n      >\n        {contextName && (\n          <>\n            <span className=\"property-name\">{contextName}</span>\n            <span className=\"colon\">{': '}</span>\n          </>\n        )}\n        {!Array.isArray(context) && (\n          <span className=\"curly-bracket open-bracket\">{'{'}</span>\n        )}\n        {Array.isArray(context) && (\n          <span className=\"square-bracket open-bracket\">{'['}</span>\n        )}\n        {map(context, (value, property) => (\n          <JsonViewerRecursive\n            key={property}\n            contextName={Array.isArray(context) ? null : property}\n            nestingLevel={nestingLevel + 1}\n            context={value}\n            selectFilter={selectFilter}\n            onSelect={onSelect}\n            path={[...path, property]}\n          />\n        ))}\n        {!Array.isArray(context) && (\n          <span className=\"curly-bracket close-bracket\">{'}'}</span>\n        )}\n        {Array.isArray(context) && (\n          <span className=\"square-bracket close-bracket\">{']'}</span>\n        )}\n      </div>\n    )\n  } else {\n    return (\n      <div\n        className={classes}\n        onClick={handleSelect}\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}\n      >\n        {contextName && (\n          <>\n            <span className=\"property-name\">{contextName}</span>\n            <span className=\"colon\">{': '}</span>\n          </>\n        )}\n        {context === null && <span className=\"scalar-value\">null</span>}\n        {context !== null && (\n          <>\n            {(contextType === 'bigint' || contextType === 'number') && (\n              <span className=\"scalar-value scalar-value-numeric\">\n                {context.toString()}\n              </span>\n            )}\n            {contextType === 'string' && (\n              <span className=\"scalar-value scalar-value-string\">\n                \"{context.toString()}\"\n              </span>\n            )}\n            {contextType === 'boolean' && (\n              <span className=\"scalar-value scalar-value-bool\">\n                \"{context ? 'true' : 'false'}\"\n              </span>\n            )}\n            {contextType === 'undefined' && (\n              <span className=\"scalar-value scalar-value-undefined\">\n                undefined\n              </span>\n            )}\n          </>\n        )}\n      </div>\n    )\n  }\n}\n\nconst JsonViewer = ({ context, selectFilter, onSelect }) => {\n  return (\n    <pre className=\"json-viewer\">\n      <JsonViewerRecursive\n        contextName={null}\n        nestingLevel={0}\n        context={context}\n        selectFilter={selectFilter}\n        onSelect={onSelect}\n        path={[]}\n      />\n    </pre>\n  )\n}\n\nexport default JsonViewer\n","import React, { useCallback } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport { separatorsLabels } from '../../constants'\n\nimport styles from './ParsingOptions.module.scss'\n\nexport default function SeparatorSelector({\n  title,\n  value,\n  onChange,\n  ...props\n}) {\n  const inputValue = value\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\t/g, '\\\\t')\n\n  const handleChange = useCallback(\n    (separator) => {\n      if (onChange) {\n        const nextValue = separator\n          .replace(/\\\\r/g, '\\r')\n          .replace(/\\\\n/g, '\\n')\n          .replace(/\\\\t/g, '\\t')\n        onChange(nextValue)\n      }\n    },\n    [onChange]\n  )\n\n  const formatValue = (value)=>{\n    return (\n      <>\n        <span className={['small',styles['separator-preview']].join(' ')}>{value}</span> <span>{separatorsLabels[value]}</span>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"option\">\n        {title}\n        <Dropdown className=\"d-inline-block raw-dropdown\">\n          <Dropdown.Toggle variant=\"white\" className=\"d-flex justify-content-start align-items-center text-truncate\">\n            { formatValue(inputValue) }\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {Object.keys(separatorsLabels).map(key=>{\n              return <Dropdown.Item key={separatorsLabels[key]} onSelect={() => handleChange(key)}>\n                { formatValue(key) }\n              </Dropdown.Item>\n            })}\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    </>\n  )\n}\n","import React, { useCallback } from 'react'\n\nexport default function ThousandsSeparatorSelector({\n  title,\n  value,\n  onChange,\n  ...props\n}) {\n  const inputValue = value\n  // // Remove?\n  // .replace(/\\r/g, \"\\\\r\")\n  // .replace(/\\n/g, \"\\\\n\")\n  // .replace(/\\t/g, \"\\\\t\")\n\n  const handleChange = useCallback(\n    (e) => {\n      if (onChange) {\n        const nextValue = e.target.value\n        // // Remove?\n        // .replace(/\\\\r/g, \"\\r\")\n        // .replace(/\\\\n/g, \"\\n\")\n        // .replace(/\\\\t/g, \"\\t\")\n\n        onChange(nextValue)\n      }\n    },\n    [onChange]\n  )\n\n  return (\n    <div className=\"option\">\n      {title}\n      <input\n        type=\"text\"\n        className=\"form-control text-field d-inline-block\"\n        value={inputValue}\n        onChange={handleChange}\n        {...props}\n      />\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\n\nexport default function DecimalsSeparatorSelector({\n  title,\n  value,\n  onChange,\n  ...props\n}) {\n  const inputValue = value\n\n  const handleChange = useCallback(\n    (e) => {\n      if (onChange) {\n        const nextValue = e.target.value\n        onChange(nextValue)\n      }\n    },\n    [onChange]\n  )\n\n  return (\n    <div className=\"option\">\n      {title}\n      <input\n        type=\"text\"\n        className=\"form-control text-field d-inline-block\"\n        value={inputValue}\n        onChange={handleChange}\n        {...props}\n      />\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport { localeList } from '../../constants'\n\nexport default function DateLocaleSelector({\n  title,\n  value,\n  onChange,\n  ...props\n}) {\n  const handleChange = useCallback(\n    (locale) => {\n      if (onChange) {\n        const nextLocale = locale\n        onChange(nextLocale)\n      }\n    },\n    [onChange]\n  )\n\n  return (\n    <div className=\"option\">\n      {title}\n      <Dropdown className=\"d-inline-block raw-dropdown\">\n        <Dropdown.Toggle variant=\"white\" className=\"\">\n          {value}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Header>\n            <span>\n              from{' '}\n              <a\n                href=\"https://github.com/d3/d3-time-format/tree/master/locale\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                d3-time-format\n              </a>\n            </span>\n          </Dropdown.Header>\n          {Object.keys(localeList).map((d) => {\n            return (\n              <Dropdown.Item key={d} onSelect={() => handleChange(d)}>\n                {d}\n              </Dropdown.Item>\n            )\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Dropdown } from 'react-bootstrap'\n\nexport default function StackSelector({\n  title,\n  value,\n  list,\n  onChange,\n  ...props\n}) {\n  const handleChange = useCallback(\n    (nextDimension) => {\n      if (onChange) {\n        onChange(nextDimension)\n      }\n    },\n    [onChange]\n  )\n\n  return (\n    <div className=\"option\">\n      {title}\n      <Dropdown className=\"d-inline-block raw-dropdown\">\n        <Dropdown.Toggle\n          variant=\"white\"\n          className=\"truncate-160px\"\n          disabled={list.length === 0}\n        >\n          {value ? value : 'Column'}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {value && (\n            <Dropdown.Item onSelect={() => handleChange(null)}>\n              {'Do not stack'}\n            </Dropdown.Item>\n          )}\n          {Object.keys(list).map((d) => {\n            return (\n              <Dropdown.Item key={d} onSelect={() => handleChange(d)}>\n                {d}\n              </Dropdown.Item>\n            )\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport classNames from 'classnames'\nimport S from './UrlFetch.module.scss'\n\nexport async function fetchData(source) {\n  const response = await fetch(source.url)\n  const text = await response.text()\n  return text\n}\n\nexport default function UrlFetch({\n  userInput,\n  setUserInput,\n  setLoadingError,\n  initialState = null,\n}) {\n  const [url, setUrl] = useState(initialState?.url)\n\n  const fetchUrl = useCallback(\n    async (url) => {\n      const source = { type: 'url', url }\n      let data\n      try {\n        data = await fetchData(source)\n        setUserInput(data, source)\n        setLoadingError(null)\n      } catch (e) {\n        setLoadingError('Loading error. ' + e.message)\n      }\n    },\n    [setLoadingError, setUserInput]\n  )\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      fetchUrl(url)\n      return false\n    },\n    [url, fetchUrl]\n  )\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        className={classNames('w-100', S['url-input'])}\n        value={url}\n        onChange={(e) => {\n          setUrl(e.target.value)\n        }}\n      />\n      <div className=\"text-right\">\n        <button\n          className=\"btn btn-sm btn-success mt-3\"\n          disabled={!url}\n          type=\"submit\"\n        >\n          Load data\n        </button>\n      </div>\n    </form>\n  )\n}\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport classNames from 'classnames'\nimport S from './SparqlFetch.module.scss'\nimport { html, render } from 'lit-html'\nimport SimpleClient from 'sparql-http-client/SimpleClient'\nimport { Generator } from 'sparqljs'\nimport '@rdfjs-elements/sparql-editor/sparql-editor.js'\nimport { SparqlMarker } from '../../../hooks/useDataLoaderUtils/parser'\n\nconst DEFAULT_PREFIXES = {\n  wd: 'http://www.wikidata.org/entity/',\n  wds: 'http://www.wikidata.org/entity/statement/',\n  wdv: 'http://www.wikidata.org/value/',\n  wdt: 'http://www.wikidata.org/prop/direct/',\n  wikibase: 'http://wikiba.se/ontology#',\n  p: 'http://www.wikidata.org/prop/',\n  ps: 'http://www.wikidata.org/prop/statement/',\n  pq: 'http://www.wikidata.org/prop/qualifier/',\n  rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\n  bd: 'http://www.bigdata.com/rdf#',\n  wdref: 'http://www.wikidata.org/reference/',\n  psv: 'http://www.wikidata.org/prop/statement/value/',\n  psn: 'http://www.wikidata.org/prop/statement/value-normalized/',\n  pqv: 'http://www.wikidata.org/prop/qualifier/value/',\n  pqn: 'http://www.wikidata.org/prop/qualifier/value-normalized/',\n  pr: 'http://www.wikidata.org/prop/reference/',\n  prv: 'http://www.wikidata.org/prop/reference/value/',\n  prn: 'http://www.wikidata.org/prop/reference/value-normalized/',\n  wdno: 'http://www.wikidata.org/prop/novalue/',\n  wdata: 'http://www.wikidata.org/wiki/Special:EntityData/',\n  schema: 'http://schema.org/',\n  rdf: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n  owl: 'http://www.w3.org/2002/07/owl#',\n  skos: 'http://www.w3.org/2004/02/skos/core#',\n  xsd: 'http://www.w3.org/2001/XMLSchema#',\n  prov: 'http://www.w3.org/ns/prov#',\n  bds: 'http://www.bigdata.com/rdf/search#',\n  gas: 'http://www.bigdata.com/rdf/gas#',\n  hint: 'http://www.bigdata.com/queryHints#',\n}\n\nexport async function fetchData(source) {\n  const sparqlGenerator = new Generator()\n  const client = new SimpleClient({\n    endpointUrl: source.url,\n  })\n  const response = await client.query.select(\n    sparqlGenerator.stringify(source.query)\n  )\n  const results = await response.json()\n  const rows = bindingsToJson(results.head.vars, results.results.bindings)\n  rows[SparqlMarker] = true\n  return rows\n}\n\nexport default function SparqlFetch({\n  userInput,\n  setUserInput,\n  setLoadingError,\n  initialState,\n}) {\n  const [url, setUrl] = useState(initialState?.url ?? 'https://query.wikidata.org/sparql')\n  const [parsedQuery, setParsedQuery] = useState(null)\n\n  const editorDomRef = useRef()\n\n  const initialQuery = useMemo(() => {\n    if (initialState?.query) {\n      const sparqlGenerator = new Generator()\n      return sparqlGenerator.stringify(initialState.query)\n    } else {\n      return ''\n    }\n  }, [initialState])\n\n  const onQueryParsed = useCallback((evt) => {\n    const { query } = evt.detail\n    if (query.queryType === 'SELECT') {\n      setParsedQuery(query)\n    } else {\n      setParsedQuery(null)\n    }\n  }, [])\n\n  const onParserFailure = useCallback(() => {\n    console.log('parser failed')\n    setParsedQuery(null)\n  }, [])\n\n  const onSubmit = useCallback(() => {\n    const source = {\n      type: 'sparql',\n      url,\n      query: parsedQuery,\n    }\n    fetchData(source)\n      .then((result) => {\n        setUserInput(result, {\n          type: 'sparql',\n          url,\n          query: parsedQuery,\n        })\n      })\n      .catch((err) => {\n        setLoadingError(\n          'It was not possible to execute the query on the given endpoint'\n        )\n      })\n  }, [parsedQuery, setLoadingError, setUserInput, url])\n\n  useEffect(() => {\n    const node = editorDomRef.current\n    render(\n      html`<sparql-editor\n        auto-parse\n        value=${initialQuery}\n        customPrefixes=${JSON.stringify(DEFAULT_PREFIXES)}\n        @parsed=${onQueryParsed}\n        @parsing-failed=${onParserFailure}\n      ></sparql-editor>`,\n      node\n    )\n  }, [onQueryParsed, onParserFailure, initialQuery])\n\n  return (\n    <>\n      <div className={classNames(S['base-iri-input-here'])}>\n        <span>Write your SPARQL Endpoint here</span>\n      </div>\n      <input\n        className={classNames('w-100', S['url-input'])}\n        value={url}\n        onChange={(e) => {\n          setUrl(e.target.value)\n        }}\n      />\n      <div className={classNames(S['query-input-here'])}>\n        <span>Write your query here</span>\n      </div>\n      <div ref={editorDomRef} />\n      <div className=\"text-right\">\n        <button\n          className=\"btn btn-sm btn-success mt-3\"\n          disabled={!parsedQuery || !url}\n          onClick={onSubmit}\n        >\n          Run query\n        </button>\n      </div>\n    </>\n  )\n}\n\nfunction bindingsToJson(varNames, bindings) {\n  const result = []\n  for (const binding of bindings) {\n    const row = {}\n    for (const variable of varNames) {\n      const term = binding[variable]\n      if (!term) {\n        row[variable] = ''\n      } else {\n        row[variable] = term.value\n      }\n    }\n    result.push(row)\n  }\n  return result\n}\n","import React from 'react'\nimport { Row, Col, Button } from 'react-bootstrap'\nimport SeparatorSelector from './SeparatorSelector'\nimport ThousandsSeparatorSelector from './ThousandsSeparatorSelector'\nimport DecimalsSeparatorSelector from './DecimalsSeparatorSelector'\nimport DateLocaleSelector from './DateLocaleSelector'\nimport StackSelector from './StackSelector'\n\nimport styles from './ParsingOptions.module.scss'\nimport { BsArrowRepeat } from 'react-icons/bs'\nimport { get } from 'lodash'\nimport { fetchData as fetchDataFromUrl } from '../DataLoader/loaders/UrlFetch'\nimport { fetchData as fetchDataFromSparql } from '../DataLoader/loaders/SparqlFetch'\n\nconst dataRefreshWorkers = {\n  \"url\": fetchDataFromUrl,\n  \"sparql\": fetchDataFromSparql\n}\n\nconst dataRefreshCaptions = {\n  \"url\": \"Refresh data from url\",\n  \"sparql\": \"Refresh data from query\"\n}\n\nexport default function ParsingOptions(props) {\n  const refreshData = async () => {\n    const dataRefreshImpl = dataRefreshWorkers[get(props.dataSource, \"type\", \"\")]\n    const data = await dataRefreshImpl(props.dataSource)\n    props.onDataRefreshed(data)\n  }\n\n  return (\n    <Row>\n      <Col className={styles.parsingOptions}>\n        <b>DATA PARSING OPTIONS</b>\n\n        {props.userDataType === 'csv' && (\n          <SeparatorSelector\n            title=\"Column separator\"\n            value={props.separator}\n            onChange={(nextSeparator) => props.setSeparator(nextSeparator)}\n          />\n        )}\n        <ThousandsSeparatorSelector\n          title=\"Thousands separator\"\n          value={props.thousandsSeparator}\n          onChange={(nextSeparator) =>\n            props.setThousandsSeparator(nextSeparator)\n          }\n        />\n        <DecimalsSeparatorSelector\n          title=\"Decimals separator\"\n          value={props.decimalsSeparator}\n          onChange={(nextSeparator) =>\n            props.setDecimalsSeparator(nextSeparator)\n          }\n        />\n\n        <DateLocaleSelector\n          title=\"Date Locale\"\n          value={props.locale}\n          onChange={(nextLocale) => props.setLocale(nextLocale)}\n        />\n\n        {get(dataRefreshWorkers, get(props.dataSource, 'type', ''), null) && (\n          <Button\n            color=\"primary\"\n            className={styles['refresh-button']}\n            onClick={() => refreshData()}\n          >\n            <BsArrowRepeat className=\"mr-2\" />\n            {get(dataRefreshCaptions, get(props.dataSource, 'type', ''), \"Refresh data\")}\n          </Button>\n        )}\n\n        <div className=\"divider mb-3 mt-0\" />\n\n        <b>DATA TRANSFORMATION</b>\n\n        <StackSelector\n          title=\"Stack on\"\n          value={props.stackDimension}\n          list={props.dimensions}\n          onChange={(nextStackDimension) =>\n            props.setStackDimension(nextStackDimension)\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n","import {\n  alluvialdiagram,\n  arcdiagram,\n  barchart,\n  barchartmultiset,\n  barchartstacked,\n  beeswarm,\n  boxplot,\n  bubblechart,\n  bumpchart,\n  chorddiagram,\n  circlepacking,\n  circularDendrogram,\n  contourPlot,\n  convexHull,\n  dendrogram,\n  ganttChart,\n  hexagonalBinning,\n  horizongraph,\n  linechart,\n  matrixplot,\n  parallelcoordinates,\n  piechart,\n  radarchart,\n  sankeydiagram,\n  slopechart,\n  streamgraph,\n  sunburst,\n  treemap,\n  violinplot,\n  voronoidiagram,\n  voronoitreemap,\n} from '@rawgraphs/rawgraphs-charts'\n\nimport { calendarHeatmap } from '@rawgraphs/rawgraphs-calendar-heatmap'\n\n// New charts, not included into first release.\n// Comment at necessity.\nlet charts = [\n  alluvialdiagram,\n  arcdiagram,\n  barchart,\n  barchartmultiset,\n  barchartstacked,\n  beeswarm,\n  boxplot,\n  bubblechart,\n  bumpchart,\n  calendarHeatmap,\n  chorddiagram,\n  circlepacking,\n  circularDendrogram,\n  contourPlot,\n  convexHull,\n  dendrogram,\n  ganttChart,\n  hexagonalBinning,\n  horizongraph,\n  linechart,\n  matrixplot,\n  parallelcoordinates,\n  piechart,\n  radarchart,\n  sankeydiagram,\n  slopechart,\n  streamgraph,\n  sunburst,\n  treemap,\n  violinplot,\n  voronoidiagram,\n  voronoitreemap,\n]\n\nexport default charts\n","import React, { useCallback } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useDropzone } from 'react-dropzone'\nimport classNames from 'classnames'\nimport S from './LoadProject.module.scss'\nimport { deserializeProject } from '@rawgraphs/rawgraphs-core'\nimport charts from '../../../charts'\n\n\nexport default function LoadProject({ onProjectSelected, setLoadingError }) {\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      const reader = new FileReader()\n      reader.addEventListener('load', (e) => {\n        try {\n          const project = deserializeProject(e.target.result, charts)\n          setLoadingError(null)\n          onProjectSelected(project)\n        } catch (e) {\n          setLoadingError(e.message)\n        }\n      })\n      if (acceptedFiles.length) {\n        reader.readAsText(acceptedFiles[0])\n      }\n    },\n    [onProjectSelected, setLoadingError]\n  )\n  const {\n    getRootProps,\n    getInputProps,\n    isDragReject,\n    isDragAccept,\n  } = useDropzone({\n    onDrop,\n    accept: '.graphon', // <-- Changed file extension\n    maxFiles: 1,\n  })\n  return (\n    <div\n      className={classNames(S.dropzone, {\n        [S.reject]: isDragReject,\n        [S.accept]: isDragAccept,\n      })}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      <span>Drag a file here or </span>\n      <Button className={S['browse-button']} color=\"primary\">\n        Browse\n      </Button>\n      <span>a file from your computer</span>\n      {isDragAccept && <p>All files will be accepted</p>}\n      {isDragReject && <p>Some files will be rejected</p>}\n    </div>\n  )\n}","import React from 'react'\n\nexport default function Paste({ userInput, setUserInput, setLoadingError }) {\n  return (\n    <textarea\n      value={userInput}\n      onChange={(e) => {\n        const str = e.target.value\n        setUserInput(str)\n        setLoadingError(null)\n      }}\n      style={{\n        backgroundColor: 'white',\n        border: '1px solid lightgrey',\n        borderRadius: 4,\n        width: '100%',\n        padding: '1rem',\n        minHeight: '250px',\n        height: '40vh',\n      }}\n    />\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useDropzone } from 'react-dropzone'\nimport classNames from 'classnames'\nimport S from './UploadFile.module.scss'\n\nexport default function UploadFile({\n  setUserInput,\n  setLoadingError,\n}) {\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      const reader = new FileReader()\n      reader.addEventListener('load', (e) => {\n        setUserInput(e.target.result)\n        setLoadingError(null)\n      })\n      if (acceptedFiles.length) {\n        reader.readAsText(acceptedFiles[0])\n      }\n    },\n    [setLoadingError, setUserInput]\n  )\n  const {\n    getRootProps,\n    getInputProps,\n    isDragReject,\n    isDragAccept,\n  } = useDropzone({\n    onDrop,\n    accept:\n      'text/csv,text/plain,application/json,application/vnd.ms-excel,text/tsv,text/tab-separated-values',\n    maxFiles: 1,\n  })\n  return (\n    <div\n      className={classNames(S.dropzone, {\n        [S.reject]: isDragReject,\n        [S.accept]: isDragAccept,\n      })}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      <span>Drag a file here or </span>\n      <Button className={S['browse-button']} color=\"primary\">\n        Browse\n      </Button>\n      <span>a file from your computer</span>\n      {isDragAccept && <p>All files will be accepted</p>}\n      {isDragReject && <p>Some files will be rejected</p>}\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './DataLoader.module.scss'\n\nexport default function Loading() {\n  return (\n    <div className={styles['loading-component']}>\n      <div className={styles['bg-animated']}/>\n      <p>loading...</p>\n    </div>\n  )\n}","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n/**\n *\n * @param {string} type The warning type: success, secondary, warning, danger\n * @param {string} error The error message to be displayed\n */\nfunction WarningMessage({\n  variant = 'warning',\n  message = 'A default warning message.',\n  action = null,\n}) {\n  return (\n    <Alert\n      variant={variant}\n      className=\"my-2 d-flex flex-row justify-content-between align-items-center\"\n    >\n      {message}\n      {action}\n    </Alert>\n  )\n}\n\nexport default WarningMessage\n","import React, { useState } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\n\nfunction DataMismatchModal({\n  replaceRequiresConfirmation,\n  commitDataReplace,\n  cancelDataReplace,\n}) {\n  const [showModal, setShowModal] = useState(true)\n\n  const handleClose = () => {\n    setShowModal(false)\n  }\n  return (\n    <Modal\n      className=\"raw-modal\"\n      show={showModal}\n      onHide={handleClose}\n      backdrop=\"static\"\n      keyboard={false}\n      // size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title as=\"h5\">\n          Warning:{' '}\n          {replaceRequiresConfirmation === 'parse-error' && <>parsing error</>}\n          {replaceRequiresConfirmation.startsWith('missing-column:') && (\n            <>missing column</>\n          )}\n          {replaceRequiresConfirmation === 'type-mismatch' && (\n            <>data-type mismatch</>\n          )}\n        </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        {replaceRequiresConfirmation === 'parse-error' && (\n          <>\n            <p>There was an error while parsing new data.</p>\n            <p>\n              You can load the new data and try to fix the error or return to\n              the data previously loaded.\n            </p>\n          </>\n        )}\n        {replaceRequiresConfirmation.startsWith('missing-column:') && (\n          <>\n            <p>\n              The data mapping of this project requires the dimension{' '}\n              <span className=\"font-weight-bold\">\n                {replaceRequiresConfirmation.split(':')[1]}\n              </span>\n              , that we can't find in the new data.\n            </p>\n            <p>\n              You can create a new data mapping with the new data or return to\n              the data previously loaded.\n            </p>\n          </>\n        )}\n        {replaceRequiresConfirmation === 'type-mismatch' && (\n          <>\n            <p>\n              The data-types previously set for this project can't be applied to\n              the new data.\n            </p>\n            <p>\n              You can use the new data and re-set data-types or return to the\n              data previously loaded.\n            </p>\n          </>\n        )}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"warning\"\n          onClick={() => {\n            commitDataReplace()\n          }}\n        >\n          Load new data\n        </Button>\n        <Button\n          variant=\"secondary\"\n          onClick={() => {\n            cancelDataReplace()\n          }}\n        >\n          Cancel\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default DataMismatchModal\n","import React, { useCallback, useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { BsClipboard } from 'react-icons/bs'\nimport { IoMdCheckmarkCircle } from 'react-icons/io'\nimport { useCopyToClipboard } from '../../hooks/useCopyToClipboard'\nimport style from './style.module.css'\n\nexport function CopyToClipboardButton({ content }) {\n  const copyToClipboard = useCopyToClipboard()\n  const [pending, setPending] = useState(false)\n\n  const handleCopy = useCallback(() => {\n    if (!pending) {\n      setPending(true)\n      copyToClipboard(content)\n      setTimeout(() => {\n        setPending(false)\n      }, 3000)\n    }\n  }, [content, copyToClipboard, pending])\n\n  return (\n    <Button\n      variant=\"light\"\n      className={style['copy-to-clipboard-button'] + \" d-flex flex-row align-items-center\"}\n      onClick={handleCopy}\n    >\n      {pending && (\n        <>\n          <IoMdCheckmarkCircle className=\"text-success\" />\n          <span className=\"ml-2\">Copied to clipboard</span>\n        </>\n      )}\n      {!pending && (\n        <>\n          <BsClipboard />\n          <span className=\"ml-2\">Copy to clipboard</span>\n        </>\n      )}\n    </Button>\n  )\n}\n","import ClipboardJS from \"clipboard\";\nimport { useCallback } from \"react\";\n\n\nexport function useCopyToClipboard() {\n  return useCallback((str) => {\n    const btn = document.createElement(\"button\")\n    btn.style.display = \"none\"\n    document.body.appendChild(btn)\n    const clipboard = new ClipboardJS(btn, {\n      text: function() {\n        return str\n      }\n    })\n    btn.focus()\n    btn.click()\n    clipboard.destroy()\n    document.body.removeChild(btn)\n  }, [])\n}","import { get } from 'lodash'\nimport React, { useCallback, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport {\n  BsArrowCounterclockwise,\n  BsArrowRepeat,\n  BsClipboard,\n  BsCloud,\n  BsFolder,\n  BsGift,\n  BsSearch,\n  BsUpload,\n} from 'react-icons/bs'\nimport { DATA_LOADER_MODE } from '../../hooks/useDataLoader'\nimport DataGrid from '../DataGrid/DataGrid'\nimport DataSamples from '../DataSamples/DataSamples'\nimport JsonViewer from '../JsonViewer'\nimport ParsingOptions from '../ParsingOptions'\nimport styles from './DataLoader.module.scss'\nimport LoadProject from './loaders/LoadProject'\nimport Paste from './loaders/Paste'\nimport UploadFile from './loaders/UploadFile'\nimport UrlFetch from './loaders/UrlFetch'\nimport Loading from './loading'\nimport WarningMessage from '../WarningMessage'\nimport DataMismatchModal from './DataMismatchModal'\nimport SparqlFetch from './loaders/SparqlFetch'\nimport { tsvFormat } from 'd3-dsv'\nimport { CopyToClipboardButton } from '../CopyToClipboardButton'\n\nfunction DataLoader({\n  userInput,\n  setUserInput,\n  userData,\n  userDataType,\n  parseError,\n  unstackedColumns,\n  separator,\n  setSeparator,\n  thousandsSeparator,\n  setThousandsSeparator,\n  decimalsSeparator,\n  setDecimalsSeparator,\n  locale,\n  setLocale,\n  stackDimension,\n  dataSource,\n  data,\n  loading,\n  coerceTypes,\n  loadSample,\n  handleInlineEdit,\n  handleStackOperation,\n  setJsonData,\n  resetDataLoader,\n  dataLoaderMode,\n  startDataReplace,\n  cancelDataReplace,\n  commitDataReplace,\n  replaceRequiresConfirmation,\n  hydrateFromProject,\n}) {\n  const [loadingError, setLoadingError] = useState()\n  const [initialOptionState, setInitialOptionState] = useState(null)\n\n  const options = [\n    {\n      id: 'paste',\n      name: 'Paste your data',\n      loader: (\n        <Paste\n          userInput={userInput}\n          setUserInput={(rawInput) => setUserInput(rawInput, { type: 'paste' })}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      message:\n        'Copy and paste your data from other applications or websites. You can use tabular (TSV, CSV, DSV) or JSON data.',\n      icon: BsClipboard,\n      allowedForReplace: true,\n    },\n    {\n      id: 'upload',\n      name: 'Upload your data',\n      loader: (\n        <UploadFile\n          userInput={userInput}\n          setUserInput={(rawInput) =>\n            setUserInput(rawInput, { type: 'upload' })\n          }\n          setLoadingError={setLoadingError}\n        />\n      ),\n      message: 'You can load tabular (TSV, CSV, DSV) or JSON data.',\n      icon: BsUpload,\n      allowedForReplace: true,\n    },\n    {\n      id: 'sample',\n      name: 'Try our data samples',\n      message: '',\n      loader: (\n        <DataSamples\n          onSampleReady={loadSample}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      icon: BsGift,\n      allowedForReplace: true,\n    },\n    {\n      id: 'sparql',\n      name: 'SPARQL query',\n      message: 'Load data with a SparQL query',\n      loader: (\n        <SparqlFetch\n          userInput={userInput}\n          setUserInput={(rawInput, source) => setUserInput(rawInput, source)}\n          setLoadingError={setLoadingError}\n          initialState={\n            initialOptionState?.type === 'sparql' ? initialOptionState : null\n          }\n        />\n      ),\n      icon: BsCloud,\n      disabled: false,\n      allowedForReplace: true,\n    },\n    {\n      id: 'url',\n      name: 'From URL',\n      message:\n        'Enter a web address (URL) pointing to the data (e.g. a public Dropbox file, a public API, ...). Please, be sure the server is CORS-enabled.',\n      loader: (\n        <UrlFetch\n          userInput={userInput}\n          setUserInput={(rawInput, source) => setUserInput(rawInput, source)}\n          setLoadingError={setLoadingError}\n          initialState={\n            initialOptionState?.type === 'url' ? initialOptionState : null\n          }\n        />\n      ),\n      icon: BsSearch,\n      disabled: false,\n      allowedForReplace: true,\n    },\n    {\n      id: 'project',\n      name: 'Open your project',\n      message: 'Load a .graphon project.', // <-- MODIFIED THIS LINE\n      loader: (\n        <LoadProject\n          onProjectSelected={hydrateFromProject}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      icon: BsFolder,\n      allowedForReplace: false,\n    },\n  ]\n  const [optionIndex, setOptionIndex] = useState(0)\n  const selectedOption = options[optionIndex]\n\n  let mainContent\n  if (userData && data) {\n    mainContent = (\n      <DataGrid\n        userDataset={userData}\n        dataset={data.dataset}\n        errors={data.errors}\n        dataTypes={data.dataTypes}\n        coerceTypes={coerceTypes}\n        onDataUpdate={handleInlineEdit}\n      />\n    )\n  } else if (userDataType === 'json' && userData === null) {\n    mainContent = (\n      <JsonViewer\n        context={JSON.parse(userInput)}\n        selectFilter={(ctx) => Array.isArray(ctx)}\n        onSelect={(ctx, path) => {\n          setJsonData(ctx, path)\n        }}\n      />\n    )\n  } else if (loading && !data) {\n    mainContent = <Loading />\n  } else {\n    mainContent = (\n      <>\n        {selectedOption.loader}\n        <p className=\"mt-3\">\n          {selectedOption.message}\n        </p>\n      </>\n    )\n  }\n\n  // #TODO: memoize/move to component?\n  function parsingErrors(data) {\n    const errors = get(data, 'errors', [])\n    const successRows = data.dataset.length - errors.length\n    const row = errors[0].row + 1\n    const column = Object.keys(errors[0].error)[0]\n    return (\n      <span>\n        Ops, please check <span className=\"font-weight-bold\">row {row}</span> at\n        column <span className=\"font-weight-bold\">{column}</span>.{' '}\n        {errors.length === 2 && (\n          <>\n            {' '}\n            There's another issue at row{' '}\n            <span className=\"font-weight-bold\">{errors[1].row + 1}</span>.{' '}\n          </>\n        )}\n        {errors.length > 2 && (\n          <>\n            {' '}\n            There are issues in{' '}\n            <span className=\"font-weight-bold\">{errors.length - 1}</span> more\n            rows.{' '}\n          </>\n        )}\n        {successRows > 0 && (\n          <>\n            The remaining{' '}\n            <span className=\"font-weight-bold\">\n              {successRows} row{successRows > 1 && <>s</>}\n            </span>{' '}\n            look{successRows === 1 && <>s</>} fine.\n          </>\n        )}\n      </span>\n    )\n  }\n\n  const reloadRAW = useCallback(() => {\n    window.location.replace(window.location.pathname)\n  }, [])\n\n  const copyToClipboardButton = !!userData ? (\n    <CopyToClipboardButton content={tsvFormat(userData)} />\n  ) : null\n\n  return (\n    <>\n      <Row className=\"content-glass\"> {/* Added glassmorphism class */}\n        {!userData && (\n          <Col\n            xs={3}\n            lg={2}\n            className=\"d-flex flex-column justify-content-start pl-3 pr-0 options\"\n          >\n            {options\n              .filter((opt) => {\n                return (\n                  dataLoaderMode !== DATA_LOADER_MODE.REPLACE ||\n                  opt.allowedForReplace\n                )\n              })\n              .map((d, i) => {\n                const classnames = [\n                  'w-100',\n                  'd-flex',\n                  'align-items-center',\n                  'user-select-none',\n                  'cursor-pointer',\n                  styles['loading-option'],\n                  d.disabled ? styles['disabled'] : null,\n                  d.id === selectedOption.id && !userDataType\n                    ? styles.active\n                    : null,\n                  userDataType ? styles.disabled : null,\n                ]\n                  .filter((c) => c !== null)\n                  .join(' ')\n                return (\n                  <div\n                    key={d.id}\n                    className={classnames}\n                    onClick={() => {\n                      setOptionIndex(i)\n                    }}\n                  >\n                    <d.icon className=\"w-25\" />\n                    <h4 className=\"m-0 d-inline-block\">{d.name}</h4>\n                  </div>\n                )\n              })}\n\n            {dataLoaderMode === DATA_LOADER_MODE.REPLACE && (\n              <>\n                <div className=\"divider mb-3 mt-0\" />\n                <div\n                  className={`w-100 mb-2 d-flex justify-content-center align-items-center ${styles['start-over']} user-select-none cursor-pointer`}\n                  onClick={reloadRAW}\n                >\n                  <BsArrowRepeat className=\"mr-2\" />\n                  <h4 className=\"m-0 d-inline-block\">{'Reset'}</h4>\n                </div>\n\n                <div\n                  className={`w-100 d-flex justify-content-center align-items-center ${styles['start-over']} ${styles['cancel']} user-select-none cursor-pointer mb-3`}\n                  onClick={() => {\n                    cancelDataReplace()\n                  }}\n                >\n                  <h4 className=\"m-0 d-inline-block\">{'Cancel'}</h4>\n                </div>\n              </>\n            )}\n          </Col>\n        )}\n        {userData && (\n          <Col\n            xs={3}\n            lg={2}\n            className=\"d-flex flex-column justify-content-start pl-3 pr-0 options\"\n          >\n            <ParsingOptions\n              locale={locale}\n              setLocale={setLocale}\n              separator={separator}\n              setSeparator={setSeparator}\n              thousandsSeparator={thousandsSeparator}\n              setThousandsSeparator={setThousandsSeparator}\n              decimalsSeparator={decimalsSeparator}\n              setDecimalsSeparator={setDecimalsSeparator}\n              dimensions={data ? unstackedColumns || data.dataTypes : []}\n              stackDimension={stackDimension}\n              setStackDimension={handleStackOperation}\n              userDataType={userDataType}\n              dataSource={dataSource}\n              onDataRefreshed={(rawInput) => setUserInput(rawInput, dataSource)}\n            />\n\n            <div className=\"divider mb-3 mt-0\" />\n\n            <div\n              className={`w-100 mb-2 d-flex justify-content-center align-items-center ${styles['start-over']} user-select-none cursor-pointer`}\n              onClick={reloadRAW}\n            >\n              <BsArrowRepeat className=\"mr-2\" />\n              <h4 className=\"m-0 d-inline-block\">{'Reset'}</h4>\n            </div>\n\n            <div\n              className={`w-100 d-flex justify-content-center align-items-center ${styles['start-over']} user-select-none cursor-pointer`}\n              onClick={() => {\n                setInitialOptionState(dataSource)\n                const dataSourceIndex = options.findIndex(\n                  (opt) => opt.id === dataSource?.type\n                )\n                setOptionIndex(Math.max(dataSourceIndex, 0))\n                startDataReplace()\n              }}\n            >\n              <BsArrowCounterclockwise className=\"mr-2\" />\n              <h4 className=\"m-0 d-inline-block\">{'Change data'}</h4>\n            </div>\n          </Col>\n        )}\n        <Col>\n          <Row className=\"h-100\">\n            <Col className=\"h-100\">\n              {mainContent}\n\n              {data && !parseError && get(data, 'errors', []).length === 0 && (\n                <WarningMessage\n                  variant=\"success\"\n                  message={\n                    <span>\n                      <span className=\"font-weight-bold\">\n                        {data.dataset.length} rows\n                      </span>{' '}\n                      (\n                      {data.dataset.length * Object.keys(data.dataTypes).length}{' '}\n                      cells) have been successfully parsed, now you can choose a\n                      chart!\n                    </span>\n                  }\n                  action={copyToClipboardButton}\n                />\n              )}\n\n              {parseError && (\n                <WarningMessage\n                  variant=\"danger\"\n                  message={parseError}\n                  action={copyToClipboardButton}\n                />\n              )}\n\n              {get(data, 'errors', []).length > 0 && (\n                <WarningMessage\n                  variant=\"warning\"\n                  message={parsingErrors(data)}\n                  action={copyToClipboardButton}\n                />\n              )}\n\n              {loadingError && (\n                <WarningMessage\n                  variant=\"danger\"\n                  message={loadingError}\n                  action={copyToClipboardButton}\n                />\n              )}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      {replaceRequiresConfirmation && (\n        <DataMismatchModal\n          replaceRequiresConfirmation={replaceRequiresConfirmation}\n          commitDataReplace={commitDataReplace}\n          cancelDataReplace={cancelDataReplace}\n        />\n      )}\n    </>\n  )\n}\n\nexport default React.memo(DataLoader)","import React, { useState, useMemo, useCallback } from 'react'\nimport classNames from 'classnames'\nimport { Row, Col, Card, Dropdown } from 'react-bootstrap'\nimport { BsLink, BsPlus } from 'react-icons/bs'\nimport uniq from 'lodash/uniq'\nimport styles from './ChartSelector.module.scss'\nimport { BsFillTrashFill } from 'react-icons/bs'\n\nfunction filterCharts(charts, filter) {\n  return filter === 'All charts'\n    ? charts\n    : charts.filter((d) => d.metadata.categories.indexOf(filter) !== -1)\n}\n\nfunction ChartSelector({\n  availableCharts,\n  currentChart,\n  setCurrentChart,\n  onRemoveCustomChart,\n  onAddChartClick,\n}) {\n  const [filter, setFilter] = useState('All charts')\n\n  const charts = useMemo(() => {\n    return filterCharts(availableCharts, filter)\n  }, [availableCharts, filter])\n\n  const handleFilterChange = useCallback(\n    (nextFilter) => {\n      setFilter(nextFilter)\n      const nextCharts = filterCharts(availableCharts, nextFilter)\n      if (nextCharts.indexOf(currentChart) === -1) {\n        setCurrentChart(nextCharts[0])\n      }\n    },\n    [availableCharts, currentChart, setCurrentChart]\n  )\n\n  return (\n    <>\n      <Row>\n        <Col className=\"text-right\">\n          Show\n          <Dropdown className=\"d-inline-block ml-2 raw-dropdown\">\n            <Dropdown.Toggle variant=\"white\" className=\"pr-5\">\n              {filter.charAt(0).toUpperCase() + filter.slice(1)}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                key={'All charts'}\n                onClick={() => handleFilterChange('All charts')}\n              >\n                All charts\n              </Dropdown.Item>\n              {uniq(\n                availableCharts.map((d) => d.metadata.categories).flat()\n              ).map((d) => {\n                return (\n                  <Dropdown.Item key={d} onClick={() => handleFilterChange(d)}>\n                    {d.charAt(0).toUpperCase() + d.slice(1)}\n                  </Dropdown.Item>\n                )\n              })}\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={3} className=\"pt-3\">\n          {currentChart && (\n            <Card className={styles.currentChart}>\n              <Card.Img variant=\"top\" src={currentChart.metadata.thumbnail} />\n              <Card.Body>\n                <Card.Title className=\"m-0\">\n                  <h2 className=\"m-0\">{currentChart.metadata.name}</h2>\n                </Card.Title>\n                <Card.Subtitle className=\"m-0\">\n                  <h4 className=\"mb-2\">{currentChart.metadata.category}</h4>\n                </Card.Subtitle>\n                <Card.Text>{currentChart.metadata.description}</Card.Text>\n                <Card.Link\n                  className={classNames({\n                    [styles.disabled]: !currentChart.metadata.code,\n                    underlined: true,\n                  })}\n                  href={currentChart.metadata.code}\n                  target=\"_blank\"\n                >\n                  <BsLink color=\"black\" /> Code\n                </Card.Link>\n                <Card.Link\n                  className={classNames({\n                    [styles.disabled]: !currentChart.metadata.tutorial,\n                    underlined: true,\n                  })}\n                  href={currentChart.metadata.tutorial}\n                  target=\"_blank\"\n                >\n                  <BsLink color=\"black\" /> Tutorial\n                </Card.Link>\n              </Card.Body>\n            </Card>\n          )}\n        </Col>\n        <Col>\n          <Row>\n            {charts.map((d, i) => {\n              return (\n                <Col xs={4} key={'chart-' + i} className={`p-3`}>\n                  <Card\n                    onClick={() => {\n                      setCurrentChart(d)\n                    }}\n                    className={classNames('flex-row h-100 cursor-pointer', {\n                      active: d === currentChart ? 'active' : '',\n                      [styles.customChart]: !!d.rawCustomChart,\n                    })}\n                  >\n                    <div\n                      className={`h-100 w-25 ${styles.thumbnail}`}\n                      style={{ backgroundImage: `url(\"${d.metadata.icon}\")` }}\n                    ></div>\n                    <Card.Body className=\"w-75 px-2 py-3\">\n                      <Card.Title className=\"m-0\">\n                        <h2 className=\"m-0\" style={{ whiteSpace: 'nowrap' }}>\n                          {d.metadata.name}\n                        </h2>\n                        {d.rawCustomChart && (\n                          <div>\n                            <button\n                              style={{\n                                position: 'absolute',\n                                top: -8,\n                                right: -8,\n                              }}\n                              className=\"btn btn-sm btn-primary\"\n                              onClick={(e) => {\n                                e.stopPropagation()\n                                onRemoveCustomChart(d)\n                              }}\n                            >\n                              <BsFillTrashFill />\n                            </button>\n                            <small\n                              style={{\n                                maxWidth: '100%',\n                                overflow: 'hidden',\n                                textOverflow: 'ellipsis',\n                                display: 'block',\n                                whiteSpace: 'nowrap',\n                              }}\n                            >\n                              {d.rawCustomChart.source}\n                            </small>\n                          </div>\n                        )}\n                      </Card.Title>\n                      <Card.Subtitle className=\"m-0\">\n                        <h4 className=\"m-0\">\n                          {d.metadata.categories\n                            .join(', ')\n                            .charAt(0)\n                            .toUpperCase() +\n                            d.metadata.categories.join(', ').slice(1)}\n                        </h4>\n                      </Card.Subtitle>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              )\n            })}\n            <Col xs={4} className={`p-3`}>\n              <Card\n                onClick={() => {\n                  onAddChartClick()\n                }}\n                className={classNames('flex-row h-100 cursor-pointer py-2')}\n              >\n                <div className=\"d-flex align-items-center justify-content-center w-25\">\n                  <BsPlus size={50} color=\"var(--primary)\" />\n                </div>\n                <Card.Body className=\"w-75 px-2 py-3\">\n                  <Card.Title className=\"m-0\">\n                    <h2 className=\"m-0\" style={{ whiteSpace: 'nowrap' }}>\n                      Load custom chart\n                    </h2>\n                  </Card.Title>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default React.memo(ChartSelector)\n","import React from 'react'\nimport { dataTypeIcons } from '../../constants'\nimport { getTypeName } from '@rawgraphs/rawgraphs-core'\n\nimport { useDrag } from 'react-dnd'\n\nimport styles from './DataMapping.module.scss'\n\nconst ColumnCard = ({\n  dimensionName,\n  dimensionType,\n  commitLocalMapping,\n  rollbackLocalMapping,\n}) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { id: dimensionName, type: 'column' },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n    end: (dropResult, monitor) => {\n      const didDrop = monitor.didDrop()\n      if (didDrop) {\n        commitLocalMapping()\n      } else {\n        rollbackLocalMapping()\n      }\n      // console.log('DID DROP', didDrop)\n    },\n  })\n\n  const dimType = getTypeName(dimensionType)\n  const DataTypeIcon = dataTypeIcons[dimType]\n\n  return (\n    <div\n      ref={drag}\n      className={`column-card ${styles['column-card']} ${\n        isDragging ? 'is-dragging' : ''\n      }`}\n    >\n      <DataTypeIcon className={styles['data-type-icon']} />\n      <span className={styles['column-title']}>{dimensionName}</span>\n    </div>\n  )\n}\n\nexport default ColumnCard\n","import React from 'react'\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap'\nimport { dataTypeIcons } from '../../constants'\nimport styles from './DataMapping.module.scss'\n\nfunction DataTypeIcon({ type }) {\n  const DataTypeIcon = dataTypeIcons[type]\n  return (\n    <span>\n      <OverlayTrigger\n        key=\"top\"\n        placement=\"top\"\n        overlay={\n          <Tooltip id={`tooltip-top`}>\n            Accepts {type}s\n          </Tooltip>\n        }\n      >\n        <DataTypeIcon className={styles['accepted-type-icon']} />\n      </OverlayTrigger>\n    </span>\n  )\n}\n\nexport default DataTypeIcon\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAsterisk(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-asterisk\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 0a1 1 0 0 1 1 1v5.268l4.562-2.634a1 1 0 1 1 1 1.732L10 8l4.562 2.634a1 1 0 1 1-1 1.732L9 9.732V15a1 1 0 1 1-2 0V9.732l-4.562 2.634a1 1 0 1 1-1-1.732L6 8 1.438 5.366a1 1 0 0 1 1-1.732L7 6.268V1a1 1 0 0 1 1-1z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAsterisk);\nexport default __webpack_public_path__ + \"static/media/asterisk.a0a42b25.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { ReactComponent as Asterisk } from './asterisk.svg'\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap'\n\nfunction RequiredIcon() {\n  return (\n    <OverlayTrigger\n      key=\"top\"\n      placement=\"top\"\n      overlay={<Tooltip id={`tooltip-top`}>Mandatory</Tooltip>}\n    >\n      <Asterisk width=\"1rem\" height=\"1rem\" style={{marginRight:\"2px\"}} />\n    </OverlayTrigger>\n  )\n}\n\nexport default RequiredIcon\n","import React, { useRef } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport classnames from 'classnames'\nimport styles from './DataMapping.module.scss'\nimport { BsX } from 'react-icons/bs'\nimport { useDrag, useDrop } from 'react-dnd'\nimport get from 'lodash/get'\nimport { AGGREGATIONS_LABELS } from '../../constants'\n\nexport default function ChartDimensionItem({\n  draggingColumn,\n  index,\n  isValid,\n  DataTypeIcon,\n  columnId,\n  dimension,\n  aggregators,\n  relatedAggregation,\n  onMove,\n\n  onChangeAggregation,\n  onDeleteItem,\n  onChangeDimension,\n\n  commitLocalMapping,\n  rollbackLocalMapping,\n  onInsertColumn,\n  replaceDimension,\n\n  localMappding,\n}) {\n  const ref = useRef(null)\n\n  const [{ isOver }, drop] = useDrop({\n    accept: ['column', 'card'],\n    collect: (monitor) => {\n      return {\n        isOver: monitor.isOver() && monitor.getItem().type === 'column',\n      }\n    },\n    hover(item, monitor) {\n      if (!dimension.multiple) {\n        return\n      }\n      if (!ref.current) {\n        return\n      }\n\n      const hoverIndex = index\n\n      //#TODO: for now we allow only dropping on \"drop another dimension here\" in case of multiple dimensions\n      if (false && item.type === 'column') {\n        onInsertColumn(hoverIndex, item)\n        item.type = 'card'\n        item.dimensionId = dimension.id\n        item.index = hoverIndex\n        return\n      } else if (item.dimensionId === dimension.id) {\n        const dragIndex = item.index\n        // Don't replace items with themselves\n        if (dragIndex === hoverIndex) {\n          return\n        }\n        // Determine rectangle on screen\n        const hoverBoundingRect = ref.current?.getBoundingClientRect()\n        // Get vertical middle\n        const hoverMiddleY =\n          (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n        // Determine mouse position\n        const clientOffset = monitor.getClientOffset()\n        // Get pixels to the top\n        const hoverClientY = clientOffset.y - hoverBoundingRect.top\n        // Only perform the move when the mouse has crossed half of the items height\n        // When dragging downwards, only move when the cursor is below 50%\n        // When dragging upwards, only move when the cursor is above 50%\n        // Dragging downwards\n        if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n          return\n        }\n        // Dragging upwards\n        if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n          return\n        }\n        onMove(dragIndex, hoverIndex)\n        // Note: we're mutating the monitor item here!\n        // Generally it's better to avoid mutations,\n        // but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        item.index = hoverIndex\n      } else {\n        //#TODO: for now we allow only dropping on \"drop another dimension here\" in case of multiple dimensions\n\n        // replaceDimension(\n        //   item.dimensionId,\n        //   dimension.id,\n        //   item.index,\n        //   index,\n        //   true\n        // )\n        // item.dimensionId = dimension.id\n        // item.index = hoverIndex\n        return\n      }\n    },\n    drop: (item, monitor) => {\n      if (!dimension.multiple) {\n        if (item.type === 'column') {\n          onChangeDimension(index, item.id)\n        } else {\n          replaceDimension(item.dimensionId, dimension.id, item.index, index)\n        }\n      }\n    },\n  })\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: 'card', index, id: columnId, dimensionId: dimension.id },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n    end: (dropResult, monitor) => {\n      const didDrop = monitor.didDrop()\n      if (didDrop) {\n        commitLocalMapping()\n      } else {\n        rollbackLocalMapping()\n      }\n    },\n  })\n\n  drag(drop(ref))\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        opacity: isDragging || draggingColumn ? 0.5 : 1,\n      }}\n      className={classnames(\n        'assigned-column',\n        styles['column-card'],\n        styles['assigned-column'],\n        isValid ? styles['column-valid'] : styles['column-invalid'],\n        {\n          'border border-danger': isOver,\n          // 'border border-warning': isDragging,\n        }\n      )}\n    >\n      <span>\n        {!!DataTypeIcon && (\n          <DataTypeIcon className={styles['data-type-icon']} />\n        )}\n      </span>\n      <span className={styles['column-title']}>{columnId}</span>\n      {dimension.aggregation && (\n        <Dropdown className=\"d-inline-block ml-2 raw-dropdown\">\n          <Dropdown.Toggle\n            variant={isValid ? 'primary' : 'danger'}\n            className=\"pr-5\"\n          >\n            {get(AGGREGATIONS_LABELS, relatedAggregation, relatedAggregation)}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {aggregators.map((aggregatorName) => (\n              <Dropdown.Item\n                key={aggregatorName}\n                onClick={() => onChangeAggregation(index, aggregatorName)}\n              >\n                {get(AGGREGATIONS_LABELS, aggregatorName, aggregatorName)}\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n      )}\n      <button\n        className={styles['remove-assigned']}\n        type=\"button\"\n        onClick={() => onDeleteItem(index)}\n      >\n        <BsX />\n      </button>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport DataTypeIcon from './DataTypeIcon'\nimport RequiredIcon from './RequiredIcon'\nimport { Col } from 'react-bootstrap'\nimport { useDrop } from 'react-dnd'\nimport get from 'lodash/get'\nimport uniqueId from 'lodash/uniqueId'\nimport classnames from 'classnames'\nimport arrayMove from 'array-move'\nimport arrayInsert from 'array-insert'\n\n// import { DATATYPE_ICONS } from \"../../constants\"\nimport { dataTypeIcons } from '../../constants'\nimport {\n  getTypeName,\n  getAggregatorNames,\n  getDefaultDimensionAggregation,\n} from '@rawgraphs/rawgraphs-core'\nimport ChartDimensionItem from './ChartDimensionItem'\n\nimport styles from './DataMapping.module.scss'\nconst aggregators = getAggregatorNames()\nconst emptyList = []\n\nconst ChartDimensionCard = ({\n  dimension,\n  dataTypes,\n  mapping,\n  setMapping,\n  commitLocalMapping,\n  rollbackLocalMapping,\n  draggingId,\n  setDraggingId,\n  replaceDimension,\n  localMappding,\n}) => {\n  const [{ isOver }, drop] = useDrop({\n    accept: ['column', 'card'],\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n    }),\n    drop: (item, monitor) => {\n      if (item.type === 'column') {\n        const defaulAggregation = dimension.aggregation\n          ? getDefaultDimensionAggregation(dimension, dataTypes[item.id])\n          : null\n\n        const columnDataType = getTypeName(dataTypes[item.id]);\n        const isValid =\n          dimension.validTypes?.length === 0 ||\n          dimension.validTypes?.includes(columnDataType)\n\n        setMapping({\n          ...mapping,\n          ids: (mapping.ids || []).concat(uniqueId()),\n          value: [...(mapping.value || []), item.id],\n          isValid: isValid,\n          mappedType: columnDataType,\n          config: dimension.aggregation\n            ? {\n                aggregation: [\n                  ...(get(mapping, 'config.aggregation') || []),\n                  defaulAggregation,\n                ],\n              }\n            : undefined,\n        })\n      } else if (item.dimensionId !== dimension.id) {\n        replaceDimension(\n          item.dimensionId,\n          dimension.id,\n          item.index,\n          mapping.value ? mapping.value.length : 0,\n          true\n        )\n      }\n    },\n  })\n\n  // const [collectedProps, drag] = useDrag({\n  //   item: {\n  //     type: 'card',\n\n  //   }\n  // })\n\n  const setAggregation = useCallback(\n    (newAggregations) => {\n      setMapping({\n        ...mapping,\n        config: { aggregation: [...newAggregations] },\n      })\n    },\n    [mapping, setMapping]\n  )\n\n  const idsMappedHere = get(mapping, 'ids', emptyList)\n  const columnsMappedHere = get(mapping, 'value', emptyList)\n  let aggregationsMappedHere = get(mapping, 'config.aggregation', emptyList)\n\n  const onChangeAggregation = useCallback(\n    (i, aggregatorName) => {\n      const newAggregations = [...aggregationsMappedHere]\n      newAggregations[i] = aggregatorName\n      setAggregation(newAggregations)\n    },\n    [aggregationsMappedHere, setAggregation]\n  )\n\n  const onDeleteItem = useCallback(\n    (i) => {\n      let nextConfig\n      if (mapping.config) {\n        nextConfig = {\n          ...mapping.config,\n          aggregation: mapping.config.aggregation.filter((col, j) => j !== i),\n        }\n      }\n\n      setMapping({\n        ...mapping,\n        ids: mapping.ids.filter((col, j) => j !== i),\n        value: mapping.value.filter((col, j) => j !== i),\n        config: nextConfig,\n      })\n    },\n    [mapping, setMapping]\n  )\n\n  const onChangeDimension = useCallback(\n    (i, newCol) => {\n      setMapping({\n        ...mapping,\n        value: mapping.value.map((col, j) => (j === i ? newCol : col)),\n      })\n    },\n    [mapping, setMapping]\n  )\n\n  const onMove = useCallback(\n    (dragIndex, hoverIndex) => {\n      let nextConfig\n      if (mapping.config) {\n        nextConfig = {\n          ...mapping.config,\n          aggregation: arrayMove(\n            mapping.config.aggregation,\n            dragIndex,\n            hoverIndex\n          ),\n        }\n      }\n\n      setMapping(\n        {\n          ...mapping,\n          ids: arrayMove(mapping.ids, dragIndex, hoverIndex),\n          value: arrayMove(mapping.value, dragIndex, hoverIndex),\n          config: nextConfig,\n        },\n        true\n      )\n    },\n    [mapping, setMapping]\n  )\n\n  const onInsertColumn = useCallback(\n    (index, item) => {\n      const defaulAggregation = dimension.aggregation\n        ? getDefaultDimensionAggregation(dimension, dataTypes[item.id])\n        : null\n\n      const nextId = uniqueId()\n      setDraggingId(nextId)\n      setMapping(\n        {\n          ...mapping,\n          ids: arrayInsert(mapping.ids ?? [], index, nextId),\n          value: arrayInsert(mapping.value ?? [], index, item.id),\n          config: dimension.aggregation\n            ? {\n                aggregation: arrayInsert(\n                  get(mapping, 'config.aggregation', []),\n                  index,\n                  defaulAggregation\n                ),\n              }\n            : undefined,\n        },\n        true\n      )\n    },\n    [dataTypes, dimension, mapping, setDraggingId, setMapping]\n  )\n\n  return (\n    // <div\n    //   className=\"Xcard Xp-3 Xm-2 \"\n    //   style={{ minWidth: 250 }}\n    // >\n\n    <Col xs={6} lg={4} xl={4}>\n      <div className={styles['chart-dimension'] + ' user-select-none'}>\n        {/* This is the card header */}\n        <div\n          className={`d-flex flex-row justify-content-between align-items-center ${styles['chart-dimension-header']}`}\n        >\n          <span className=\"text-left\">\n            {dimension.validTypes.map((t) => {\n              return <DataTypeIcon key={t} type={t} />\n              // const DataTypeIcon = dataTypeIcons[t]\n              // return (\n              //   <span key={t}>\n              //     <DataTypeIcon className={styles['accepted-type-icon']} />\n              //   </span>\n              // )\n            })}\n          </span>\n          <span className=\"text-capitalize text-center\">{dimension.name}</span>\n          <span\n            className={styles['dimension-required'] + ' text-right'}\n            style={{ opacity: dimension.required ? 1 : 0 }}\n          >\n            {dimension.required && <RequiredIcon />}\n          </span>\n        </div>\n\n        {/* These are the columns that have been dropped on the current dimension */}\n        {idsMappedHere.map((renderId, i) => {\n          const columnId = columnsMappedHere[i]\n          const columnDataType = getTypeName(dataTypes[columnId])\n          const relatedAggregation = dimension.aggregation\n            ? aggregationsMappedHere[i] ||\n              getDefaultDimensionAggregation(dimension, columnDataType)\n            : undefined\n          const isValid =\n            dimension.validTypes?.length === 0 ||\n            dimension.validTypes?.includes(columnDataType)\n\n          const DataTypeIcon = dataTypeIcons[getTypeName(dataTypes[columnId])]\n\n          return (\n            <ChartDimensionItem\n              id={renderId}\n              key={renderId}\n              index={i}\n              onMove={onMove}\n              onChangeDimension={onChangeDimension}\n              onChangeAggregation={onChangeAggregation}\n              onDeleteItem={onDeleteItem}\n              isValid={isValid}\n              DataTypeIcon={DataTypeIcon}\n              columnId={columnId}\n              dimension={dimension}\n              aggregators={aggregators}\n              relatedAggregation={relatedAggregation}\n              commitLocalMapping={commitLocalMapping}\n              rollbackLocalMapping={rollbackLocalMapping}\n              onInsertColumn={onInsertColumn}\n              draggingColumn={draggingId === renderId}\n              replaceDimension={replaceDimension}\n              localMappding={localMappding}\n            />\n          )\n        })}\n\n        {/* This is the dropzone */}\n        {(dimension.multiple || columnsMappedHere.length === 0) && (\n          <div\n            className={classnames('dropzone', styles['dropzone'], {\n              [styles['active']]: isOver,\n            })}\n            ref={drop}\n          >\n            {!dimension.multiple && 'Drop dimension here'}\n            {dimension.multiple &&\n              columnsMappedHere.length === 0 &&\n              'Drop dimensions here'}\n            {dimension.multiple &&\n              columnsMappedHere.length > 0 &&\n              'Drop another dimension here'}\n          </div>\n        )}\n      </div>\n    </Col>\n  )\n}\n\nexport default ChartDimensionCard\n","import React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport map from 'lodash/map'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\nimport ColumnCard from './ColumnCard'\nimport ChartDimensionCard from './ChartDimensionCard'\nimport get from 'lodash/get'\nimport uniqueId from 'lodash/uniqueId'\nimport arrayInsert from 'array-insert'\nimport { getDefaultDimensionAggregation } from '@rawgraphs/rawgraphs-core'\n\nfunction removeIndex(mapping, i) {\n  let nextConfig\n  if (mapping.config) {\n    nextConfig = {\n      ...mapping.config,\n      aggregation: mapping.config.aggregation.filter((col, j) => j !== i),\n    }\n  }\n\n  return {\n    ...mapping,\n    ids: mapping.ids.filter((col, j) => j !== i),\n    value: mapping.value.filter((col, j) => j !== i),\n    config: nextConfig,\n  }\n}\n\nfunction arrayReplace(arr, i, value) {\n  return arr.map((item, j) => (j === i ? value : item))\n}\n\nfunction handleReplaceLocalMapping(\n  nextId,\n  prev,\n  fromDimension,\n  toDimension,\n  fromIndex,\n  toIndex,\n  dimensions,\n  dataTypes,\n  multiple = false\n) {\n  const removedItem = {}\n  removedItem.aggregation =\n    prev[fromDimension]?.config?.aggregation?.[fromIndex]\n  removedItem.value = prev[fromDimension].value[fromIndex]\n\n  let moveFn = multiple ? arrayInsert : arrayReplace\n\n  const prevToMapping = prev[toDimension] || {}\n  const toDimensionMapping = {\n    ...prevToMapping,\n    ids: moveFn(prevToMapping.ids ?? [], toIndex, nextId),\n    value: moveFn(prevToMapping.value ?? [], toIndex, removedItem.value),\n  }\n\n  const dimension = dimensions[toDimension]\n  if (dimensions.aggregation) {\n    let newAggregation\n    if (removedItem.aggregation) {\n      newAggregation = removedItem.aggregation\n    } else {\n      newAggregation = getDefaultDimensionAggregation(\n        dimension,\n        dataTypes[removedItem.value]\n      )\n    }\n    toDimensionMapping.config = {\n      aggregation: moveFn(\n        get(prevToMapping, 'config.aggregation', []),\n        toIndex,\n        newAggregation\n      ),\n    }\n  }\n  const obj = {\n    ...prev,\n    [fromDimension]: removeIndex(prev[fromDimension], fromIndex),\n    [toDimension]: toDimensionMapping,\n  }\n  return obj\n}\n\nfunction DataMapping({ dataTypes, dimensions, mapping, setMapping }, ref) {\n  const [localMappding, setLocalMapping] = useState(mapping)\n\n  const updateMapping = useCallback(\n    (dimension, mappingConf, isLocal) => {\n      // Local\n      setLocalMapping((prev) => ({\n        ...prev,\n        [dimension]: mappingConf,\n      }))\n      if (!isLocal) {\n        // Gloab mapping\n        setMapping((prev) => ({\n          ...prev,\n          [dimension]: mappingConf,\n        }))\n      }\n    },\n    [setMapping]\n  )\n  const replaceDimension = useCallback(\n    (fromDimension, toDimension, fromIndex, toIndex, multiple = false) => {\n      const nextId = uniqueId()\n      if (multiple) {\n        setDraggingId(nextId)\n      }\n      setLocalMapping((prev) => {\n        return handleReplaceLocalMapping(\n          nextId,\n          prev,\n          fromDimension,\n          toDimension,\n          fromIndex,\n          toIndex,\n          dimensions,\n          dataTypes,\n          multiple\n        )\n      })\n      if (!multiple) {\n        setMapping((prev) => {\n          return handleReplaceLocalMapping(\n            nextId,\n            prev,\n            fromDimension,\n            toDimension,\n            fromIndex,\n            toIndex,\n            dimensions,\n            dataTypes\n          )\n        })\n      }\n    },\n    [dataTypes, dimensions, setMapping]\n  )\n\n  const [draggingId, setDraggingId] = useState(null)\n\n  const rollbackLocalMapping = useCallback(() => {\n    setLocalMapping(mapping)\n    setDraggingId(null)\n  }, [mapping])\n\n  // const commitLocalMapping = useCallback(() => {\n  //   console.log('COMMIT!', localMappding)\n  //   setMapping(localMappding)\n  //   setDraggingId(null)\n  // }, [localMappding, setMapping])\n  const commitLocalMapping = () => {\n    // setMapping()\n    setMapping(lastMapping.current)\n    setDraggingId(null)\n  }\n\n  const lastMapping = useRef()\n  useEffect(() => {\n    lastMapping.current = localMappding\n  })\n\n  useImperativeHandle(ref, () => ({\n    clearLocalMapping: () => {\n      setLocalMapping({})\n    },\n  }))\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Row>\n        <Col xs={3}>\n          <h5 className=\"text-uppercase\">Dimensions</h5>\n          {map(dataTypes, (dataType, columnName) => {\n            return (\n              <ColumnCard\n                key={columnName}\n                dimensionName={columnName}\n                dimensionType={dataType}\n                commitLocalMapping={commitLocalMapping}\n                rollbackLocalMapping={rollbackLocalMapping}\n              />\n            )\n          })}\n        </Col>\n        <Col>\n          <h5 className=\"text-uppercase\">Chart Variables</h5>\n          <Row\n            className=\"sticky-top\"\n            style={{ top: 'calc(var(--header-height) + 16px)' }}\n          >\n            {dimensions.map((d) => {\n              return (\n                <ChartDimensionCard\n                  key={d.id}\n                  dimension={d}\n                  dataTypes={dataTypes}\n                  // mapping={mapping[d.id] || {}}\n                  mapping={localMappding[d.id] || {}}\n                  setMapping={(mappingConf, isLocal = false) =>\n                    updateMapping(d.id, mappingConf, isLocal)\n                  }\n                  commitLocalMapping={commitLocalMapping}\n                  rollbackLocalMapping={rollbackLocalMapping}\n                  draggingId={draggingId}\n                  setDraggingId={setDraggingId}\n                  replaceDimension={replaceDimension}\n                  localMappding={localMappding}\n                />\n              )\n            })}\n          </Row>\n        </Col>\n      </Row>\n    </DndProvider>\n  )\n}\n\nexport default React.memo(React.forwardRef(DataMapping))\n","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport isObject from 'lodash/isObject'\n\nconst ChartOptionSelect = ({\n  options = [],\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  ...props\n}) => {\n  return (\n    <Row className={props.className}>\n      <Col xs={6} className=\"d-flex align-items-center nowrap\">{label}</Col>\n      <Col xs={6}>\n        <select\n          className=\"custom-select raw-select\"\n          value={value ?? defaultValue}\n          onChange={(e) => {\n            const stringValue = e.target.value\n            const value =\n              props.type === 'number' ? Number(stringValue) : stringValue\n            onChange(value)\n          }}\n        >\n          {options.map((option) =>\n            isObject(option) ? (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ) : (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            )\n          )}\n        </select>\n        {error && (\n          <small>\n            <i>{error}</i>\n          </small>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default React.memo(ChartOptionSelect)\n","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport ChartOptionSelect from './ChartOptionSelect'\n\nconst ChartOptionNumber = ({\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  isEnabled,\n  ...props\n}) => {\n  if (props.options) {\n    return (\n      <ChartOptionSelect\n        value={value}\n        error={error}\n        onChange={onChange}\n        default={defaultValue}\n        disabled={!isEnabled}\n        label={label}\n        {...props}\n      />\n    )\n  }\n  return (\n    <Row className={props.className}>\n      <Col xs={6} className=\"d-flex align-items-center nowrap\">{label}</Col>\n      <Col xs={6}>\n        <input\n          className=\"w-100 form-control text-field\"\n          type=\"number\"\n          value={value ?? ''}\n          step={props.step}\n          min={props.min}\n          max={props.max}\n          disabled={!isEnabled}\n          onChange={(e) => {\n            const str = e.target.value\n            if (str === '') {\n              onChange(undefined)\n            } else {\n              const n = parseFloat(str)\n              if (!isNaN(n)) {\n                onChange(n)\n              } else {\n                onChange(undefined)\n              }\n            }\n          }}\n          placeholder={defaultValue}\n        />\n      </Col>\n      {error && (\n        <small>\n          <i>{error}</i>\n        </small>\n      )}\n    </Row>\n  )\n}\n\nexport default React.memo(ChartOptionNumber)\n","import React from 'react'\nimport ChartOptionSelect from './ChartOptionSelect'\n\nconst ChartOptionText = ({\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  isEnabled,\n  ...props\n}) => {\n  if (props.options) {\n    return (\n      <ChartOptionSelect\n        value={value}\n        error={error}\n        onChange={onChange}\n        default={defaultValue}\n        label={label}\n        {...props}\n      />\n    )\n  }\n  return (\n    <label className=\"d-block\">\n      <b>{label}</b>\n      <br />\n      <input\n        type=\"text\"\n        value={value ?? ''}\n        step={props.step}\n        disabled={!isEnabled}\n        onChange={(e) => {\n          onChange(e.target.value)\n        }}\n        placeholder={defaultValue}\n      />\n      {error && (\n        <small>\n          <i>{error}</i>\n        </small>\n      )}\n    </label>\n  )\n}\n\nexport default React.memo(ChartOptionText)\n","import React, { useState } from 'react'\nimport styles from './InlineColorPicker.module.scss'\nimport { SketchPicker } from 'react-color'\n\nexport default function InlineColorPicker({ color: maybeColor, onChange, disabled }) {\n  const [displayColorPicker, setDisplayColorPicker] = useState(false)\n  const color = maybeColor ?? '#000000' // Same as <input type='color' />\n\n  return (\n    <>\n      <div\n        className={styles.swatch}\n        onClick={() => setDisplayColorPicker(true)}\n      >\n        <div className={styles.color} style={{ background: color }} />\n        {color.toUpperCase()}\n      </div>\n      {displayColorPicker && (\n        <div className={styles.popover}>\n          <div\n            className={styles.cover}\n            onClick={() => setDisplayColorPicker(false)}\n          />\n          <SketchPicker\n            disabled={disabled}\n            disableAlpha\n            color={color}\n            onChangeComplete={(color) => onChange(color.hex)}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { Col } from 'react-bootstrap'\nimport InilineColorPicker from '../../InlineColorPicker'\nimport ChartOptionSelect from './ChartOptionSelect'\n\nconst ChartOptionColor = ({\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  isEnabled,\n  ...props\n}) => {\n  if (props.options) {\n    return (\n      <ChartOptionSelect\n        value={value}\n        error={error}\n        onChange={onChange}\n        default={defaultValue}\n        label={label}\n        {...props}\n      />\n    )\n  }\n\n  return (\n    <label className={props.className+\" row\"}>\n      <Col xs={6} className=\"d-flex align-items-center\">{label}</Col>\n      <Col xs={6}>\n        <InilineColorPicker disabled={!isEnabled} color={value} onChange={onChange} />\n      </Col>\n      {error && (\n        <small>\n          <i>{error}</i>\n        </small>\n      )}\n    </label>\n  )\n}\n\nexport default React.memo(ChartOptionColor)\n","import React from 'react'\nimport styles from '../ChartOptions.module.scss'\nimport { COLOR_SCHEMES_LABELS } from '../../../constants'\nimport get from 'lodash/get'\n\nconst ColorSchemePreview = ({ label, scale, numSamples=150 }) => {\n  let samples\n  if (scale.ticks) {\n    samples = scale.ticks(numSamples)\n  } else {\n    if(scale.domain){\n      samples = scale.domain()\n    } else {\n      samples = []\n    }\n    \n  }\n  return (\n    <div className={styles['scheme-preview']}>\n      {label && <div style={{marginBottom:2}}>{get(COLOR_SCHEMES_LABELS, label, label)}</div>}\n      <div className=\"d-flex\">\n        {samples.map((sample) => (\n          <div\n            key={'sample-'+sample}\n            style={{ flex: 1, height: 10, background: scale(sample) }}\n          ></div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(ColorSchemePreview)","import React from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport ColorSchemePreview from './ColorSchemePreview'\nimport {\n  colorPresets,\n  getColorDomain,\n  getPresetScale\n} from '@rawgraphs/rawgraphs-core'\nimport styles from '../ChartOptions.module.scss'\n\nconst ColorSchemesDropDown = ({\n    interpolators,\n    interpolator,\n    setInterpolator,\n    // To display color-scale preview\n    colorDataset,\n    colorDataType,\n    scaleType,\n    currentFinalScale\n}) => {\n\n  return (\n    <Dropdown className=\"d-inline-block raw-dropdown w-100\">\n      <Dropdown.Toggle variant=\"white\" className=\"w-100\" style={{paddingRight:24}} disabled={!colorDataType}>\n        { currentFinalScale && <ColorSchemePreview\n          scale={currentFinalScale}\n        />}\n      </Dropdown.Toggle>\n      {colorDataType && <Dropdown.Menu className=\"w-100\">\n      {interpolators.map(\n        (intrplr) => {\n          return (\n            <Dropdown.Item key={intrplr} onClick={()=>setInterpolator(intrplr)} className={styles[\"color-scheme-dropdown-item\"]}>\n              { colorDataset[0] && colorPresets[scaleType][interpolator] && \n                <ColorSchemePreview\n                  scale={\n                    getPresetScale(scaleType, getColorDomain(colorDataset, colorDataType, scaleType), intrplr)\n                  }\n                  label={intrplr}\n                />\n              }\n            </Dropdown.Item>\n          )\n        }\n      )}\n      </Dropdown.Menu>}\n    </Dropdown>\n  )\n}\n\nexport default React.memo(ColorSchemesDropDown)","import React from 'react'\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap'\nimport {\n  BsArrowCounterclockwise,\n  BsArrowLeftRight,\n  BsLockFill,\n  BsUnlockFill,\n} from 'react-icons/bs'\n\nfunction ResetBtn({ resetScale }) {\n  return (\n    <OverlayTrigger\n      key=\"bottom\"\n      placement=\"bottom\"\n      overlay={<Tooltip id={`tooltip-top`}>Reset domain</Tooltip>}\n    >\n      <span type=\"button\" className=\"btn\" onClick={resetScale}>\n        <BsArrowCounterclockwise width=\"16\" height=\"16\" />\n      </span>\n    </OverlayTrigger>\n  )\n}\n\nfunction InvertBtn({ invertScale }) {\n  return (\n    <OverlayTrigger\n      key=\"bottom\"\n      placement=\"bottom\"\n      overlay={<Tooltip id={`tooltip-top`}>Invert</Tooltip>}\n    >\n      <span type=\"button\" className=\"btn\" onClick={invertScale}>\n        <BsArrowLeftRight width=\"16\" height=\"16\" />\n      </span>\n    </OverlayTrigger>\n  )\n}\n\nfunction LockBtn({ handleChangeLocked, locked }) {\n  return (\n    <OverlayTrigger\n      key=\"bottom\"\n      placement=\"bottom\"\n      overlay={<Tooltip id={`tooltip-top`}>{locked ? 'Unlock' : 'Lock'} scale</Tooltip>}\n    >\n      <span\n        type=\"button\"\n        className={`btn ${locked ? 'Xbtn-primary' : ''}`}\n        onClick={() => handleChangeLocked(!locked)}\n      >\n        {locked ? <BsUnlockFill width=\"16\" height=\"16\" /> : <BsLockFill width=\"16\" height=\"16\" />}\n      </span>\n    </OverlayTrigger>\n  )\n}\n\nexport { ResetBtn, InvertBtn, LockBtn }\n","import { useRef, useEffect } from 'react'\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef()\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value\n  }, [value]) // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current\n}\n","import React, { useState, useMemo, useEffect, useCallback, useRef } from 'react'\nimport InilineColorPicker from '../../InlineColorPicker'\nimport ColorSchemesDropDown from './ColorSchemesDropDown'\nimport { Row, Col, Dropdown } from 'react-bootstrap'\nimport { ResetBtn, InvertBtn, LockBtn } from './ColorScaleUtils'\nimport { SCALES_LABELS } from '../../../constants'\nimport get from 'lodash/get'\nimport keyBy from 'lodash/keyBy'\nimport {\n  getInitialScaleValues,\n  getColorScale,\n  getDefaultColorScale,\n  getColorDomain,\n  colorPresets,\n  getAvailableScaleTypes,\n  getValueType,\n} from '@rawgraphs/rawgraphs-core'\nimport styles from '../ChartOptions.module.scss'\nimport usePrevious from '../../../hooks/usePrevious'\n\nfunction getDatePickerValue(userValue) {\n  if (userValue.userDomain === 0) {\n    return 0\n  }\n  if (!userValue.userDomain) {\n    return ''\n  }\n\n  if (getValueType(userValue.userDomain) === 'date') {\n    return userValue.userDomain.toISOString().substring(0, 10)\n  }\n\n  return userValue.userDomain\n}\n\nconst ChartOptionColorScale = ({\n  value,\n  error,\n  onChange,\n  defaultValue,\n  label,\n  dimension,\n  dataset,\n  mapping,\n  dataTypes,\n  chart,\n  mappedData,\n  mappingValue,\n  colorDataset,\n  colorDataType,\n  hasAnyMapping,\n  ...props\n}) => {\n\n  // here we leverage injection of the __loaded prop in the color scale, see App.js\n  const initialValue = useRef(!!value.__loaded)\n  \n  const [scaleType, setScaleType] = useState(get(value, 'scaleType'))\n\n  const defaultColor = useMemo(() => {\n    const colorFromDefault = get(defaultValue, 'defaultColor', '#cccccc')\n    return get(value, 'defaultColor', colorFromDefault)\n  }, [defaultValue, value])\n\n  const [locked, setLocked] = useState(get(value, 'locked'))\n\n  const availableScaleTypes = useMemo(() => {\n    const nextTypes = getAvailableScaleTypes(colorDataType, colorDataset)\n    return nextTypes\n  }, [colorDataType, colorDataset])\n\n  const [interpolators, setInterpolators] = useState(\n    get(value, 'scaleType')\n      ? Object.keys(colorPresets[get(value, 'scaleType')])\n      : []\n  )\n\n  const [interpolator, setInterpolator] = useState(get(value, 'interpolator'))\n  const [userValues, setUserValues] = useState(\n    get(value, 'userScaleValues', []).map((userValue) => ({\n      ...userValue,\n      userDomain: userValue.domain,\n      userRange: userValue.range,\n    }))\n  )\n\n  const getCurrentFinalScale = useCallback(\n    (interpolator, scaleType, userValuesForFinalScale, defaultColor) => {\n      if (\n        !scaleType ||\n        !interpolator ||\n        !colorPresets[scaleType][interpolator] ||\n        !userValuesForFinalScale ||\n        !userValuesForFinalScale.length\n      ) {\n        return\n      }\n\n      const domains = userValuesForFinalScale\n        .map((x) => x.domain)\n        .filter((x) => x !== undefined)\n      if (!domains.length) {\n        return\n      }\n\n      const previewScale = getColorScale(\n        colorDataset, //the array of values of the dataset mapped on the color dimension\n        colorDataType,\n        scaleType, //\n        interpolator,\n        userValuesForFinalScale,\n      )\n\n      return previewScale\n    },\n    [colorDataType, colorDataset]\n  )\n\n  const getDefaultUserValues = useCallback(\n    (interpolator, scaleType) => {\n      if (!colorDataset.length || !colorDataType || !scaleType) {\n        return []\n      }\n      if (!colorPresets[scaleType][interpolator]) {\n        return []\n      }\n\n      const domain = getColorDomain(colorDataset, colorDataType, scaleType)\n\n      return getInitialScaleValues(domain, scaleType, interpolator).map(\n        (userValue) => ({\n          ...userValue,\n          userRange: userValue.range,\n          userDomain: userValue.domain,\n        })\n      )\n    },\n    [colorDataType, colorDataset]\n  )\n\n  const getUserValuesForFinalScale = useCallback(\n    (values) => {\n      return values.map((value) => ({\n        range: value.userRange,\n        domain:\n          colorDataType === 'date'\n            ? value.userDomain?.toString()\n            : value.userDomain,\n        // domain: value.userDomain,\n      }))\n    },\n    [colorDataType]\n  )\n\n  const currentFinalScale = useMemo(() => {\n\n    if (scaleType && interpolator) {\n      const currentUserValues =\n        userValues && userValues.length\n          ? userValues\n          : getDefaultUserValues(interpolator, scaleType)\n      const valuesForFinalScale = getUserValuesForFinalScale(currentUserValues)\n      return getCurrentFinalScale(interpolator, scaleType, valuesForFinalScale)\n    }\n    return getDefaultColorScale()\n  }, [\n    getCurrentFinalScale,\n    getDefaultUserValues,\n    getUserValuesForFinalScale,\n    interpolator,\n    scaleType,\n    userValues,\n  ])\n\n  const handleChangeValues = useCallback(\n    (nextUserValues) => {\n      let valuesForFinalScale = getUserValuesForFinalScale(nextUserValues)\n\n      //notify ui\n      const outScaleParams = {\n        scaleType,\n        interpolator: interpolator,\n        userScaleValues: valuesForFinalScale,\n        defaultColor,\n        locked,\n      }\n      onChange(outScaleParams)\n    },\n    [getUserValuesForFinalScale, scaleType, interpolator, defaultColor, locked, onChange]\n  )\n\n  const setUserValueRange = useCallback(\n    (index, value) => {\n      const newUserValues = [...userValues]\n      newUserValues[index].userRange = value\n      setUserValues(newUserValues)\n      handleChangeValues(newUserValues)\n    },\n    [handleChangeValues, userValues]\n  )\n\n  const setUserValueDomain = useCallback(\n    (index, value) => {\n      const newUserValues = [...userValues]\n      newUserValues[index].userDomain = value\n      setUserValues(newUserValues)\n      handleChangeValues(newUserValues)\n    },\n    [handleChangeValues, userValues]\n  )\n\n\n  const handleChangeScaleType = useCallback(\n    (nextScaleType) => {\n\n      setScaleType(nextScaleType)\n\n      //update interpolators\n      const nextInterpolators = colorPresets[nextScaleType]\n        ? Object.keys(colorPresets[nextScaleType])\n        : []\n      setInterpolators(nextInterpolators)\n\n      //set first interpolator\n      const nextInterpolator = nextInterpolators[0]\n      setInterpolator(nextInterpolator)\n\n      //user values\n      const nextUserValues = getDefaultUserValues(\n        nextInterpolator,\n        nextScaleType,\n      )\n      setUserValues(nextUserValues)\n      const valuesForFinalScale = getUserValuesForFinalScale(nextUserValues)\n\n      //notify ui\n      const outScaleParams = {\n        scaleType: nextScaleType,\n        interpolator: nextInterpolator,\n        userScaleValues: valuesForFinalScale,\n        defaultColor,\n        locked,\n      }\n      onChange(outScaleParams)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getDefaultUserValues, getUserValuesForFinalScale, defaultColor, onChange, locked]\n  )\n\n  const handleSetInterpolator = useCallback(\n    (nextInterpolator, customUserValues) => {\n      setInterpolator(nextInterpolator)\n\n      //user values\n      const nextUserValues = getDefaultUserValues(nextInterpolator, scaleType)\n      setUserValues(nextUserValues)\n      let valuesForFinalScale = getUserValuesForFinalScale(nextUserValues)\n      \n      if(customUserValues){\n        const byDomain = keyBy(customUserValues, 'domain')\n        valuesForFinalScale = valuesForFinalScale.map(v => ({\n          ...v,\n          range: byDomain[v.domain.toString()] ? byDomain[v.domain.toString()].userRange : v.range\n        }))\n      }\n      //notify ui\n      const outScaleParams = {\n        scaleType,\n        interpolator: nextInterpolator,\n        userScaleValues: valuesForFinalScale,\n        defaultColor,\n        locked,\n      }\n      onChange(outScaleParams)\n    },\n    [getDefaultUserValues, getUserValuesForFinalScale, onChange, scaleType, defaultColor, locked,]\n  )\n\n  const handleChangeLocked = useCallback(\n    (nextLocked) => {\n      setLocked(nextLocked)\n      //this is needed for disabiling automatic scale reset\n      initialValue.current = true\n\n      const outScaleParams = {\n        scaleType,\n        interpolator,\n        userScaleValues: userValues,\n        defaultColor,\n        locked: nextLocked,\n      }\n      onChange(outScaleParams)\n    },\n    [scaleType, interpolator, userValues, defaultColor, onChange]\n  )\n\n\n\n  const resetScale = useCallback(() => {\n    handleSetInterpolator(interpolator, userValues)\n  }, [handleSetInterpolator, interpolator, userValues])\n\n  const invertScale = useCallback(() => {\n\n    let reversedValues = [...userValues]\n    reversedValues.reverse()\n\n    const invertedValues = userValues.map((v, i) => ({\n      ...v,\n      userRange: reversedValues[i].userRange,\n      range: reversedValues[i].range,\n\n    }))\n\n    setUserValues(invertedValues)\n    handleChangeValues(invertedValues)\n  }, [handleChangeValues, userValues])\n\n\n\n  const prevMappingValue = usePrevious(mappingValue)\n\n  useEffect(() => {\n    if (prevMappingValue && mappingValue !== prevMappingValue) {\n      initialValue.current = false\n    }\n  }, [mappingValue, prevMappingValue])\n\n  useEffect(() => {\n    if (!initialValue.current && !locked) {\n      const nextScaleType = availableScaleTypes[0]\n      handleChangeScaleType(nextScaleType)\n    }\n\n  }, [availableScaleTypes, handleChangeScaleType, locked])\n\n  // update scale on dataset update.\n  // #TODO: fixme\n\n  // const prevDataset = usePrevious(colorDataset)\n  // const prevScaleType = usePrevious(colorDataset)\n\n  // useEffect(() => {\n  //   if (!locked && colorDataset !== prevDataset && prevScaleType === scaleType) {\n  //     console.info(\"dddd resetting scope\")\n  //     const nextUserValues = getDefaultUserValues(\n  //       interpolator,\n  //       scaleType,\n  //     )\n  //     setUserValues(nextUserValues)\n  //     const valuesForFinalScale = getUserValuesForFinalScale(nextUserValues)\n  //     //notify ui\n  //     const outScaleParams = {\n  //       scaleType,\n  //       interpolator,\n  //       userScaleValues: valuesForFinalScale,\n  //       defaultColor,\n  //       locked,\n  //     }\n  //     onChange(outScaleParams)\n  //   }\n  // }, [colorDataset, defaultColor, getDefaultUserValues, getUserValuesForFinalScale, interpolator, locked, onChange, prevDataset, prevScaleType, scaleType])\n\n\n  return hasAnyMapping ? (\n    <>\n      <Row className={props.className} style={{marginTop:'8px', marginBottom:'8px'}}>\n        <Col xs={5} className=\"d-flex align-items-center nowrap\">\n          Color scale\n        </Col>\n        <Col xs={7}>\n          <Dropdown className=\"d-inline-block raw-dropdown w-100\">\n            <Dropdown.Toggle variant=\"white\" className=\"w-100\" style={{paddingRight:24}} disabled={!colorDataType}>\n              {get(SCALES_LABELS, scaleType, scaleType)}\n            </Dropdown.Toggle>\n            <Dropdown.Menu className=\"w-100\">\n            {availableScaleTypes.map(\n              (s) => {\n                return (\n                  <Dropdown.Item key={s} onClick={()=>handleChangeScaleType(s)}>\n                    {get(SCALES_LABELS, s, s)}\n                  </Dropdown.Item>\n                )\n              }\n            )}\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n      </Row>\n\n      {/* Color scheme */}\n      <Row className={[props.className].join(' ')} style={{marginTop:'8px', marginBottom:'8px'}}>\n        <Col xs={5} className=\"d-flex align-items-center nowrap\">\n          Color scheme\n        </Col>\n        <Col xs={7}>\n          <ColorSchemesDropDown\n            interpolators={interpolators}\n            interpolator={interpolator}\n            setInterpolator={handleSetInterpolator}\n            // To display color-scale preview\n            colorDataset={colorDataset}\n            colorDataType={colorDataType}\n            scaleType={scaleType}\n            currentFinalScale={currentFinalScale}\n          />\n        </Col>\n      </Row>\n\n      {/* Scale color swatches */}\n      {colorDataType && userValues && (\n        <div className={styles['color-swatches-list']}>\n          {userValues.map((userValue, i) => (\n            <Row\n              key={i}\n              className={[\n                styles['chart-option'],\n                styles['color-swatch'],\n                scaleType !== 'ordinal'\n                  ? styles['not-ordinal']\n                  : styles['ordinal'],\n              ].join(' ')}\n            >\n              <Col xs={12}>\n                <div className={styles['color-scale-item']}>\n                  {scaleType === 'ordinal' &&\n                    get(userValue, 'domain') !== undefined && (\n                      <span\n                        className=\"nowrap text-truncate pr-2\"\n                        title={userValue.domain && userValue.domain.toString()}\n                      >\n                        {userValue.domain === ''\n                          ? '[empty string]'\n                          : userValue.domain.toString()}\n                      </span>\n                    )}\n                  {scaleType !== 'ordinal' && (\n                    <>\n                      <span className=\"nowrap\">\n                        {i === 0\n                          ? 'Start'\n                          : i === userValues.length - 1\n                            ? 'End'\n                            : 'Middle'}\n                      </span>\n                      <input\n                        disabled={locked}\n                        type={getValueType(userValue.userDomain)}\n                        className=\"form-control text-field\"\n                        value={getDatePickerValue(userValue)}\n                        onChange={(e) => {\n                          if (colorDataType === 'date') {\n                            setUserValueDomain(i, new Date(e.target.value))\n                          } else {\n                            setUserValueDomain(i, e.target.value)\n                          }\n                        }}\n                      ></input>\n                    </>\n                  )}\n                  <InilineColorPicker\n                    color={userValue.userRange}\n                    onChange={(color) => {\n                      setUserValueRange(i, color)\n                    }}\n                  />\n                </div>\n              </Col>\n            </Row>\n          ))}\n          <Row>\n            <Col className=\"d-flex justify-content-end\">\n              <ResetBtn resetScale={resetScale} />\n              <InvertBtn invertScale={invertScale} />\n              {\n                scaleType !== 'ordinal' && (\n                  <LockBtn locked={locked} handleChangeLocked={handleChangeLocked} />\n                )\n              }\n\n            </Col>\n          </Row>\n\n        </div>\n      )}\n\n    </>\n  ) : null\n}\n\nexport default ChartOptionColorScale\n","import React, { useState, useMemo, useEffect, useCallback } from 'react'\nimport InilineColorPicker from '../../InlineColorPicker'\nimport { Col } from 'react-bootstrap'\nimport get from 'lodash/get'\nimport style from '../ChartOptions.module.scss'\n\nconst ChartOptionColorScaleDefault = ({\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  dimension,\n  dataset,\n  mapping,\n  dataTypes,\n  chart,\n  mappedData,\n  mappingValue,\n  colorDataType,\n  colorDataset,\n  ...props\n}) => {\n  const colorFromValue = useMemo(() => {\n    const colorFromDefault = get(defaultValue, 'defaultColor', '#cccccc')\n    return get(value, 'defaultColor', colorFromDefault)\n  }, [defaultValue, value])\n\n  const [defaultColor, setDefaultColor] = useState(colorFromValue)\n\n  const handleChangeDefaultColor = useCallback(\n    (nextDefaultColor) => {\n      setDefaultColor(nextDefaultColor)\n      const outScaleParams = {\n        ...value,\n        defaultColor: nextDefaultColor,\n      }\n      onChange(outScaleParams)\n    },\n    [value, onChange]\n  )\n\n  useEffect(() => {\n    if (defaultValue && defaultValue.defaultColor !== defaultColor) {\n      handleChangeDefaultColor(defaultValue.defaultColor)\n    }\n  }, [defaultColor, defaultValue, handleChangeDefaultColor])\n\n  return (\n    <>\n      <label className={[style['chart-option'], 'row'].join(' ')}>\n        <Col xs={6} className=\"d-flex align-items-center\">\n          Default\n        </Col>\n        <Col xs={6}>\n          <InilineColorPicker\n            color={defaultColor}\n            onChange={handleChangeDefaultColor}\n          />\n        </Col>\n      </label>\n    </>\n  )\n}\n\nexport default ChartOptionColorScaleDefault\n","import React, { useMemo } from 'react'\nimport ChartOptionColorScale from './ChartOptionColorScale'\nimport ChartOptionColorScaleDefault from './ChartOptionColorScaleDefault'\n\nconst ChartOptionColorScaleWrapper = ({\n  value,\n  onChange,\n  default: defaultValue,\n  mappingValue,\n  colorDataType,\n  colorDataset,\n\n}) => {\n\n  const hasAnyMapping = useMemo(() => {\n    return colorDataset && colorDataset.length > 0\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [colorDataset])\n\n  return <>\n    {!hasAnyMapping && <ChartOptionColorScaleDefault onChange={onChange} defaultValue={defaultValue} value={value} />}\n    {hasAnyMapping &&  <ChartOptionColorScale hasAnyMapping={hasAnyMapping} mappingValue={mappingValue} defaultValue={defaultValue} value={value} colorDataType={colorDataType} colorDataset={colorDataset} onChange={onChange} />}\n  </>\n}\n\nexport default ChartOptionColorScaleWrapper\n","import React from 'react'\nimport { Row, Col, Form } from 'react-bootstrap'\n\nconst ChartOptionBoolean = ({ optionId, label, value, error, onChange, className, isEnabled }) => {\n  return (\n    <Row className={className}>\n      <Col xs={6} className=\"d-flex align-items-center nowrap\">{label}</Col>\n      <Form className=\"col-6 d-flex align-items-center\">\n        <Form.Check\n          type=\"switch\"\n          checked={!!value}\n          disabled={!isEnabled}\n          onChange={(e) => {\n            onChange(e.target.checked)\n          }}\n          id={optionId}\n          label={value ? 'Yes' : 'No'}\n        />\n      </Form>\n      {error && (\n        <div className=\"col-12\">\n          <small>\n            <i>{error}</i>\n          </small>\n        </div>\n      )}\n    </Row>\n  )\n}\n\nexport default React.memo(ChartOptionBoolean)\n","import React, { useCallback, useState, useMemo } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport {\n  getOptionsConfig,\n  getContainerOptions,\n  getDefaultOptionsValues,\n  getEnabledOptions,\n  getTypeName,\n} from '@rawgraphs/rawgraphs-core'\nimport ChartOptionNumber from './ChartOptionTypes/ChartOptionNumber'\nimport ChartOptionText from './ChartOptionTypes/ChartOptionText'\nimport ChartOptionColor from './ChartOptionTypes/ChartOptionColor'\nimport ChartOptionColorScaleWrapper from './ChartOptionTypes/ChartOptionColorScaleWrapper'\nimport ChartOptionBoolean from './ChartOptionTypes/ChartOptionBoolean'\nimport get from 'lodash/get'\nimport map from 'lodash/map'\nimport styles from './ChartOptions.module.scss'\nimport omit from 'lodash/omit'\n\nconst CHART_OPTION_COMPONENTS = {\n  number: ChartOptionNumber,\n  text: ChartOptionText,\n  color: ChartOptionColor,\n  colorScale: ChartOptionColorScaleWrapper,\n  boolean: ChartOptionBoolean,\n}\n\nfunction getPartialMapping(mapping, dimension, repeatIndex) {\n  const nv = get(mapping[dimension], `value[${repeatIndex}]`)\n  return {\n    ...mapping,\n    [dimension]: {\n      ...mapping[dimension],\n      value: [nv],\n    },\n  }\n}\n\nfunction getPartialMappedData(mappedData, dimension, repeatIndex) {\n  return Array.isArray(mappedData)\n    ? mappedData.map((datum) => {\n        const value = get(datum[dimension], `[${repeatIndex}]`)\n        return {\n          ...datum,\n          [dimension]: value,\n        }\n      })\n    : mappedData\n}\n\nfunction getDefaultForRepeat(def, index) {\n  if (Array.isArray(def.repeatDefault)) {\n    return get(def.repeatDefault, `[${index}]`, def.default)\n  }\n  return def.default\n}\n\nfunction WrapControlComponent({\n  type,\n  optionId,\n  setVisualOptions,\n  label,\n  repeatIndex,\n  ...props\n}) {\n  const Component = CHART_OPTION_COMPONENTS[type]\n\n  const remainingOptions = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n\n    return Object.keys(omit(props.visualOptions, optionId))\n      .map((k) => JSON.stringify(get(props.visualOptions, k, '')))\n      .join('-')\n  }, [type, props.visualOptions, optionId])\n\n  const domainFromChart = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n    if (props.domain && props.chart[props.domain]) {\n      //as sometimes the current chart is not in synch with current options (chart is set before options, we just handle an exception)\n      //everything should be ok on the next render.\n      try {\n        const domain = props.chart[props.domain](\n          props.mappedData,\n          props.mapping,\n          props.visualOptions\n        )\n        return domain\n      } catch (e) {\n        return null\n      }\n    } else {\n      return null\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    type,\n    props.chart,\n    props.domain,\n    props.mappedData,\n    props.mapping,\n    remainingOptions,\n  ])\n\n  const mappingValue = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n    return domainFromChart\n      ? '__custom__'\n      : get(props.mapping, `[${props.dimension}].value`)\n  }, [domainFromChart, props.dimension, props.mapping, type])\n\n  const colorDataType = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n    if (domainFromChart) {\n      return domainFromChart.type\n    }\n    return props.dataTypes[mappingValue]\n      ? getTypeName(props.dataTypes[mappingValue])\n      : 'string'\n  }, [type, props.dataTypes, domainFromChart, mappingValue])\n\n  const colorDataset = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n    if (domainFromChart) {\n      return domainFromChart.domain\n    }\n\n    if (props.mappedData) {\n      return props.mappedData\n        .map((d) => get(d, props.dimension))\n        .filter(\n          (item) => item !== undefined && !(Array.isArray(item) && !item.length)\n        )\n    } else {\n      return []\n    }\n  }, [type, props.dimension, domainFromChart, props.mappedData])\n\n  const handleControlChange = useCallback(\n    (nextValue) => {\n      setVisualOptions((visualOptions) => {\n        let newValue = nextValue\n        if (repeatIndex !== undefined) {\n          newValue = visualOptions[optionId] || []\n          newValue[repeatIndex] = nextValue\n        }\n        return {\n          ...visualOptions,\n          [optionId]: newValue,\n        }\n      })\n    },\n    [optionId, repeatIndex, setVisualOptions]\n  )\n\n  return (\n    <Component\n      type={type}\n      domainFromChart={domainFromChart}\n      mappingValue={mappingValue}\n      colorDataType={colorDataType}\n      colorDataset={colorDataset}\n      optionId={optionId}\n      label={\n        repeatIndex !== undefined ? (\n          <React.Fragment>\n            {label} ({repeatIndex + 1})\n          </React.Fragment>\n        ) : (\n          label\n        )\n      }\n      {...omit(props, [\n        'mapping',\n        'visualOptions',\n        'chart',\n        'dataset',\n        'dataTypes',\n        'mappedData',\n      ])}\n      onChange={handleControlChange}\n    />\n  )\n}\n\nconst ChartOptions = ({\n  chart,\n  dataset,\n  mapping,\n  dataTypes,\n  visualOptions,\n  setVisualOptions,\n  error,\n  mappedData,\n}) => {\n  const optionsConfig = useMemo(() => {\n    return getOptionsConfig(chart?.visualOptions)\n  }, [chart])\n\n  const [collapseStatus, setCollapseStatus] = useState(() => {\n    const groups = {}\n    for (const option in optionsConfig) {\n      const group = optionsConfig[option].group\n      if (!groups.hasOwnProperty(group)) {\n        groups[group] = true\n      }\n    }\n    return groups\n  })\n\n  const enabledOptions = useMemo(() => {\n    return getEnabledOptions(optionsConfig, visualOptions, mapping)\n  }, [optionsConfig, visualOptions, mapping])\n\n  // const enabledGroupsByName = useMemo(() => {\n  //   const enabledGroupsNames = Object.keys(optionsConfig).map(optionName => enabledOptions[optionName] ? optionsConfig[optionName].group : null).filter(x => !!x)\n  //   return mapValues(keyBy(enabledGroupsNames), x => true)\n  // }, [enabledOptions, optionsConfig])\n  // // #TODO we can use enabledGroupsByName to disable the group\n\n  const optionsDefinitionsByGroup = useMemo(() => {\n    // update \"collapseStatus\" state\n    // add/remove options groups when selected charts changes\n    const groups = {}\n    for (const option in optionsConfig) {\n      const group = optionsConfig[option].group\n      if (!groups.hasOwnProperty(group)) {\n        groups[group] = group === 'artboard' ? false : true\n      }\n    }\n    setCollapseStatus(groups)\n    return Object.keys(optionsConfig).reduce((acc, optionId) => {\n      const option = optionsConfig[optionId]\n      const group = option?.group || ''\n      if (!acc[group]) {\n        acc[group] = {}\n      }\n      acc[group][optionId] = option\n      return acc\n    }, {})\n  }, [optionsConfig])\n\n  const containerOptions = useMemo(() => {\n    const defaultOptionsValues = getDefaultOptionsValues(optionsConfig, mapping)\n    const opts = {\n      ...defaultOptionsValues,\n      ...visualOptions,\n    }\n    return getContainerOptions(optionsConfig, opts)\n  }, [mapping, optionsConfig, visualOptions])\n\n  return (\n    <div className={[styles['chart-options'], 'col-4', 'col-xl-3'].join(' ')}>\n      {map(optionsDefinitionsByGroup, (options, groupName) => {\n        return (\n          <div\n            key={groupName}\n            groupname={groupName}\n            className={[\n              styles['options-group'],\n              collapseStatus[groupName] ? styles['collapsed'] : '',\n            ].join(' ')}\n          >\n            <Row className=\"sticky-top\">\n              <Col\n                className={`d-flex justify-content-between align-items-center ${styles['group-header']}`}\n              >\n                <h5 className=\"text-uppercase m-0\">{groupName}</h5>\n                <span\n                  className={[styles['collapse-button'], 'cursor-pointer'].join(\n                    ' '\n                  )}\n                  onClick={() =>\n                    setCollapseStatus({\n                      ...collapseStatus,\n                      [groupName]: !collapseStatus[groupName],\n                    })\n                  }\n                ></span>\n              </Col>\n            </Row>\n            {map(options, (def, optionId) => {\n              // repeated options: notice that value is set to a default if undefined\n              // this is caused by changes in shapes of the mapping object\n              // (when a new value is dragged to the dimension that repeats the option)\n              // the same approach is applied in option validation by the raw core lib\n              return def.repeatFor ? (\n                get(\n                  mapping,\n                  `[${def.repeatFor}].value`,\n                  []\n                ).map((v, repeatIndex) => (\n                  <WrapControlComponent\n                    className={styles['chart-option']}\n                    key={optionId + repeatIndex}\n                    repeatIndex={repeatIndex}\n                    {...def}\n                    optionId={optionId}\n                    error={error?.errors?.[optionId + repeatIndex]}\n                    value={\n                      visualOptions?.[optionId]?.[repeatIndex] ??\n                      getDefaultForRepeat(def, repeatIndex)\n                    }\n                    mapping={\n                      def.type === 'colorScale'\n                        ? getPartialMapping(mapping, def.repeatFor, repeatIndex)\n                        : undefined\n                    }\n                    chart={def.type === 'colorScale' ? chart : undefined}\n                    dataset={def.type === 'colorScale' ? dataset : undefined}\n                    dataTypes={\n                      def.type === 'colorScale' ? dataTypes : undefined\n                    }\n                    visualOptions={\n                      def.type === 'colorScale' ? visualOptions : undefined\n                    }\n                    mappedData={getPartialMappedData(\n                      mappedData,\n                      def.repeatFor,\n                      repeatIndex\n                    )}\n                    setVisualOptions={setVisualOptions}\n                    isEnabled={enabledOptions[optionId]}\n                  />\n                ))\n              ) : (\n                <WrapControlComponent\n                  className={styles['chart-option']}\n                  key={optionId}\n                  {...def}\n                  optionId={optionId}\n                  error={error?.errors?.[optionId]}\n                  value={visualOptions?.[optionId]}\n                  mapping={def.type === 'colorScale' ? mapping : undefined}\n                  chart={def.type === 'colorScale' ? chart : undefined}\n                  dataset={def.type === 'colorScale' ? dataset : undefined}\n                  dataTypes={def.type === 'colorScale' ? dataTypes : undefined}\n                  visualOptions={\n                    def.type === 'colorScale' ? visualOptions : undefined\n                  }\n                  mappedData={mappedData}\n                  setVisualOptions={setVisualOptions}\n                  isEnabled={enabledOptions[optionId]}\n                />\n              )\n            })}\n            {groupName === 'artboard' && visualOptions.showLegend && (\n              <p className=\"small\">\n                The final output will be {containerOptions?.width}px *{' '}\n                {containerOptions?.height}px including the legend.\n              </p>\n            )}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ChartOptions\n","/**\n * @typedef {{\n *  name: string\n *  id: string\n *  description: string\n *  code: string\n *  categories: string[]\n *  tutorial?: string\n * }} chartMetadata\n */\n\n/**\n * @type string | null\n */\nlet prevChartIdRendered = null\n\n/**\n * @param {ChartMetada} chartMetadata\n */\nexport function onChartRendered(chartMetadata) {\n  if (prevChartIdRendered === chartMetadata.id) {\n    // Nothing to report the chart still the same\n    return\n  }\n  prevChartIdRendered = chartMetadata.id\n\n  if (typeof window.gtag === 'function') {\n    window.gtag('event', 'chart-render', {\n      event_category: chartMetadata.id,\n    })\n  }\n}\n\n/**\n * @param {chartMetadata} chartMetadata\n * @param {string} format\n */\nexport function onChartExported(chartMetadata, format) {\n  if (typeof window.gtag === 'function') {\n    window.gtag('event', 'chart-export', {\n      event_category: chartMetadata.id,\n      event_label: format,\n    })\n  }\n}\n","import React, { useRef, useEffect } from 'react'\nimport { chart as rawChart } from '@rawgraphs/rawgraphs-core'\nimport useDebounce from '../../hooks/useDebounce'\nimport WarningMessage from '../WarningMessage'\nimport { onChartRendered } from '../../gaEvents'\n\nconst ChartPreview = ({\n  chart,\n  dataset: data,\n  dataTypes,\n  mapping,\n  visualOptions,\n  error,\n  setError,\n  setRawViz,\n  mappedData,\n}) => {\n  const domRef = useRef(null)\n\n  const vizOptionsDebounced = useDebounce(visualOptions, 200)\n\n  useEffect(() => {\n    setError(null)\n\n    // control required variables\n    // need to create this array because the prop mapping does not return to {} when data is inserted and removed\n    const currentlyMapped = []\n    for (let variable in mapping) {\n      if (mapping[variable].ids && mapping[variable].ids.length > 0) {\n        currentlyMapped.push(variable)\n      }\n    }\n\n    let requiredVariables = chart.dimensions.filter(\n      (d) => d.required && currentlyMapped.indexOf(d.id) === -1\n    )\n\n    if (requiredVariables.length > 0) {\n      let errorMessage = (\n        <span>\n          Required chart variables: you need to map{' '}\n          {requiredVariables\n            .map((d, i) => <span key={i} className=\"font-weight-bold\">{d.name}</span>)\n            .reduce((prev, curr) => [prev, ' and ', curr])}\n        </span>\n      )\n      setError({ variant: 'secondary', message: errorMessage })\n      setRawViz(null)\n      while (domRef.current.firstChild) {\n        domRef.current.removeChild(domRef.current.firstChild)\n      }\n      return\n    }\n\n    // control multiple required variables\n    const multivaluesVariables = chart.dimensions.filter(\n      (d) =>\n        d.multiple &&\n        d.required &&\n        d.minValues &&\n        mapping[d.id].ids.length < d.minValues\n    )\n    if (multivaluesVariables.length > 0) {\n      let errorMessage = (\n        <span>\n          Please map{' '}\n          {multivaluesVariables\n            .map((d) => (\n              <>\n                at least <span className=\"font-weight-bold\">{d.minValues}</span>{' '}\n                dimensions on <span className=\"font-weight-bold\">{d.name}</span>\n              </>\n            ))\n            .reduce((prev, curr) => [prev, ' and ', curr])}\n          .\n        </span>\n      )\n      setError({ variant: 'secondary', message: errorMessage })\n      setRawViz(null)\n      while (domRef.current.firstChild) {\n        domRef.current.removeChild(domRef.current.firstChild)\n      }\n      return\n    }\n\n    // control data-types mismatches\n    for (let variable in mapping) {\n      if (\n        mapping[variable].ids &&\n        mapping[variable].ids.length > 0 &&\n        !mapping[variable].isValid\n      ) {\n        const variableObj = chart.dimensions.find((d) => d.id === variable)\n        const errorMessage = `Data-type mismatch: you can’t map ${mapping[variable].mappedType}s on ${variableObj.name}.`\n        setError({ variant: 'danger', message: errorMessage })\n        setRawViz(null)\n        while (domRef.current.firstChild) {\n          domRef.current.removeChild(domRef.current.firstChild)\n        }\n        return\n      }\n    }\n\n    if (!mappedData) {\n      // console.info('Clearing viz')\n      setRawViz(null)\n      while (domRef.current.firstChild) {\n        domRef.current.removeChild(domRef.current.firstChild)\n      }\n      return\n    }\n    // console.info('Updating viz')\n    try {\n      const viz = rawChart(chart, {\n        data,\n        mapping: mapping,\n        dataTypes,\n        visualOptions: vizOptionsDebounced,\n      })\n      try {\n        const rawViz = viz.renderToDOM(domRef.current, mappedData)\n        setRawViz(rawViz)\n        setError(null)\n        onChartRendered(chart.metadata)\n      } catch (e) {\n        console.log(\"chart error\", e)\n        setError({ variant: 'danger', message: 'Chart error. ' + e.message })\n        setRawViz(null)\n      }\n    } catch (e) {\n      while (domRef.current.firstChild) {\n        domRef.current.removeChild(domRef.current.firstChild)\n      }\n      console.log({ e })\n      setError({ variant: 'danger', message: 'Chart error. ' + e.message })\n      setRawViz(null)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setError, vizOptionsDebounced, setRawViz, mappedData, chart, mapping])\n\n  return (\n    <div className={'col-8 col-xl-9'}>\n      <div\n        className={['overflow-auto', 'position-sticky'].join(' ')}\n        style={{ top: 'calc(15px + var(--header-height))' }}\n      >\n        {error && (\n          <WarningMessage variant={error.variant} message={error.message} />\n        )}\n        <div ref={domRef}>{/* Don't put content in this <div /> */}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(ChartPreview)\n","import { useEffect, useState } from 'react'\n\nexport default function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value)\n      }, delay)\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler)\n      }\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  )\n\n  return debouncedValue\n}\n","import React, { useState, useEffect } from 'react'\nimport { Row } from 'react-bootstrap'\nimport ChartOptions from '../ChartOptions'\nimport ChartPreview from '../ChartPreview'\nimport { chart as rawChart } from '@rawgraphs/rawgraphs-core'\nimport { mapDataInWorker } from '../../worker'\nimport { WEBWORKER_ACTIVE } from '../../constants'\n\nconst ChartPreviewWithOptions = ({\n  chart,\n  dataset,\n  dataTypes,\n  mapping,\n  visualOptions,\n  setVisualOptions,\n  setRawViz,\n  setMappingLoading,\n}) => {\n  const [error, setError] = useState({variant: \"secondary\", message: \"Required chart variables\"})\n  const [mappedData, setMappedData] = useState(null)\n\n  useEffect(() => {\n    // console.info('Updating mapped dataset')\n    try {\n      setMappingLoading(true)\n\n      if (WEBWORKER_ACTIVE) {\n        mapDataInWorker(chart.metadata.name, {\n          data: dataset,\n          mapping: mapping,\n          dataTypes,\n        }, chart.rawCustomChart)\n          .then((mappedData) => {\n            setMappingLoading(false)\n            setMappedData(mappedData)\n          })\n          .catch((err) => {\n            console.error(err)\n            setMappingLoading(false)\n            setMappedData(null)\n          })\n      } else {\n        const viz = rawChart(chart, {\n          data: dataset,\n          mapping: mapping,\n          dataTypes,\n        })\n        const vizData = viz._getVizData()\n        setMappingLoading(false)\n        setMappedData(vizData)\n      }\n    } catch (e) {\n      console.error(e)\n      setMappingLoading(false)\n      setMappedData(null)\n    }\n  }, [\n    chart,\n    mapping,\n    dataTypes,\n    setError,\n    setRawViz,\n    setMappingLoading,\n    dataset,\n  ])\n\n  return (\n    <Row>\n        <ChartOptions\n          chart={chart}\n          dataset={dataset}\n          mapping={mapping}\n          dataTypes={dataTypes}\n          visualOptions={visualOptions}\n          setVisualOptions={setVisualOptions}\n          error={error}\n          mappedData={mappedData}\n        />\n        <ChartPreview\n          chart={chart}\n          dataset={dataset}\n          dataTypes={dataTypes}\n          mapping={mapping}\n          visualOptions={visualOptions}\n          error={error}\n          setError={setError}\n          setRawViz={setRawViz}\n          mappedData={mappedData}\n        />\n    </Row>\n  )\n}\n\nexport default ChartPreviewWithOptions\n","import React, { useCallback, useState } from 'react'\nimport { InputGroup, DropdownButton, Dropdown } from 'react-bootstrap'\nimport { onChartExported } from '../../gaEvents'\n\nfunction downloadBlob(url, filename) {\n  // Create a new anchor element\n  const a = document.createElement('a')\n  a.href = url\n  a.download = filename || 'download'\n  a.click()\n  return a\n}\n\nexport default function Exporter({ rawViz, exportProject }) {\n  const downloadSvg = useCallback(\n    (filename) => {\n      var svgString = new XMLSerializer().serializeToString(\n        rawViz._node.firstChild\n      )\n      var DOMURL = window.URL || window.webkitURL || window\n      var svg = new Blob([svgString], { type: 'image/svg+xml;charset=utf-8' })\n      var url = DOMURL.createObjectURL(svg)\n      downloadBlob(url, filename)\n      DOMURL.revokeObjectURL(svg)\n    },\n    [rawViz]\n  )\n\n  const downloadImage = useCallback(\n    (format, filename) => {\n      var svgString = new XMLSerializer().serializeToString(\n        rawViz._node.firstChild\n      )\n      var DOMURL = window.URL || window.webkitURL || window\n      var svg = new Blob([svgString], { type: 'image/svg+xml;charset=utf-8' })\n      var url = DOMURL.createObjectURL(svg)\n      var canvas = document.createElement('canvas')\n      canvas.height = rawViz._node.firstChild.clientHeight\n      canvas.width = rawViz._node.firstChild.clientWidth\n      var ctx = canvas.getContext('2d')\n      var img = new Image()\n      img.onload = function () {\n        ctx.drawImage(img, 0, 0)\n        var dataUrl = canvas.toDataURL(format)\n        downloadBlob(dataUrl, filename)\n        DOMURL.revokeObjectURL(svg)\n      }\n      img.src = url\n    },\n    [rawViz]\n  )\n\n  const downloadProject = useCallback(\n    async (filename) => {\n      const project = await exportProject()\n      const str = JSON.stringify(project)\n      const blob = new Blob([str], { type: 'application/json' })\n      const DOMURL = window.URL || window.webkitURL || window\n      const url = DOMURL.createObjectURL(blob)\n      downloadBlob(url, filename)\n      DOMURL.revokeObjectURL(url)\n    },\n    [exportProject]\n  )\n\n  const exportFormats = ['svg', 'png', 'jpg', 'rawgraphs']\n\n  const [currentFormat, setCurrentFormat] = useState('svg')\n  const [currentFile, setCurrentFile] = useState('viz')\n\n  const downloadViz = useCallback(() => {\n    switch (currentFormat) {\n      case 'svg':\n        downloadSvg(`${currentFile}.svg`)\n        break\n      case 'png':\n        downloadImage('image/png', `${currentFile}.png`)\n        break\n      case 'jpg':\n        downloadImage('image/jpeg', `${currentFile}.jpg`)\n        break\n      case 'rawgraphs':\n        downloadProject(`${currentFile}.rawgraphs`)\n        break\n      default:\n        break\n    }\n    // TODO: Make a getter for _chartImplementation\n    onChartExported(rawViz._chartImplementation.metadata, currentFormat)\n  }, [\n    currentFile,\n    currentFormat,\n    downloadImage,\n    downloadProject,\n    downloadSvg,\n    rawViz,\n  ])\n\n  return (\n    <div className=\"row\">\n      <div className=\"col col-sm-3\">\n        <InputGroup className=\"mb-3 raw-input-group\">\n          <input\n            type=\"text\"\n            className=\"form-control text-field\"\n            value={currentFile}\n            onChange={(e) => setCurrentFile(e.target.value)}\n          ></input>\n          <DropdownButton\n            as={InputGroup.Append}\n            title={`.${currentFormat}`}\n            id=\"input-group-dropdown-1\"\n            className=\"raw-dropdown\"\n          >\n            {exportFormats.map((d) => {\n              return (\n                <Dropdown.Item key={d} onClick={() => setCurrentFormat(d)}>\n                  .{d}\n                </Dropdown.Item>\n              )\n            })}\n          </DropdownButton>\n        </InputGroup>\n      </div>\n\n      <div className=\"col col-sm-2\">\n        <button\n          className=\"btn btn-primary btn-block raw-btn\"\n          onClick={downloadViz}\n        >\n          Download\n        </button>\n      </div>\n    </div>\n  )\n}\n","/* eslint-disable no-restricted-globals */\nimport * as d3 from 'd3'\nimport * as rawgraphsCore from '@rawgraphs/rawgraphs-core'\nimport LRU from 'lru-cache'\n\nexport const NPM_CDN = 'https://cdn.jsdelivr.net/npm/'\n\n/**\n * NOTE: In a perfect we got type definition from core\n *\n * @typedef {{\n *  metadata: { id: string }\n * }} ChartContract\n */\n\nconst queue = []\nconst cacheChartsPkg = new LRU(50)\nconst cacheDependenciesTree = new LRU(400)\n\nconst DEPENDENCIES_ALIAS = {\n  d3,\n  '@rawgraphs/rawgraphs-core': rawgraphsCore,\n}\n\n/**\n * Reauire a dependency in the DOM Context and cache it\n *\n * @param {string} name\n */\nasync function requireDependency(name) {\n  if (DEPENDENCIES_ALIAS[name]) {\n    return DEPENDENCIES_ALIAS[name]\n  }\n  let url\n  try {\n    url = new URL(name)\n  } catch (e) {\n    url = new URL(`${NPM_CDN}${name}`)\n  }\n  const sUrl = url.toString()\n  if (cacheDependenciesTree.has(sUrl)) {\n    return cacheDependenciesTree.get(sUrl)\n  }\n  const v = await requireFromUrl(sUrl.toString())\n  if (v) {\n    cacheDependenciesTree.set(sUrl, v)\n  }\n  return v\n}\n\n/**\n * AMD Define for the DOM Context\n */\nfunction defineDOM(...params) {\n  /**\n   * @type {(dependencies: string[]) void}\n   */\n  let factory\n  /**\n   * @type string[]\n   */\n  let dependencies\n  // Adjust various AMD callding patterhns\n  if (params.length < 2) {\n    factory = params[0]\n    dependencies = []\n  } else {\n    if (params.length >= 3) {\n      params = params.slice(1)\n    }\n    dependencies = params[0]\n    factory = params[1]\n  }\n  // Instance dependencies\n  const exports = {}\n  const module = { exports }\n  const rutimeDepenciesPromises = dependencies.map((dep) =>\n    dep === 'exports'\n      ? Promise.resolve(exports)\n      : dep === 'module'\n      ? Promise.resolve(module)\n      : requireDependency(dep)\n  )\n  queue.push(\n    Promise.all(rutimeDepenciesPromises).then((rutimeDepencies) => {\n      // Run factory ... This will (maybe) write into exports\n      const outFactory = factory(...rutimeDepencies)\n      if (\n        !dependencies.includes('exports') &&\n        !dependencies.includes('module') &&\n        outFactory\n      ) {\n        // NOTE: In this case the factory return module\n        return outFactory\n      }\n      // Push filled exports\n      return exports\n    })\n  )\n}\n\ndefineDOM.amd = {}\n\n/**\n * Reauire a dependency in Web Worker Context\n *\n * @param {string} name\n */\nfunction requireDependencyWebWorker(name) {\n  if (DEPENDENCIES_ALIAS[name]) {\n    return DEPENDENCIES_ALIAS[name]\n  }\n  let url\n  try {\n    url = new URL(name)\n  } catch (e) {\n    url = new URL(`${NPM_CDN}${name}`)\n  }\n  const sUrl = url.toString()\n  if (cacheDependenciesTree.has(sUrl)) {\n    return cacheDependenciesTree.get(sUrl)\n  }\n  const v = requireFromUrlWebWorker(sUrl.toString())\n  if (v) {\n    cacheDependenciesTree.set(sUrl, v)\n  }\n  return v\n}\n\n/**\n * AMD Define for the WebWorker Context\n */\nfunction defineWebWorker(...params) {\n  /**\n   * @type {(dependencies: string[]) void}\n   */\n  let factory\n  /**\n   * @type string[]\n   */\n  let dependencies\n  // Adjust various AMD callding patterhns\n  if (params.length < 2) {\n    factory = params[0]\n    dependencies = []\n  } else {\n    if (params.length >= 3) {\n      params = params.slice(1)\n    }\n    dependencies = params[0]\n    factory = params[1]\n  }\n  // Instance dependencies\n  const exports = {}\n  const module = { exports }\n  const rutimeDepencies = dependencies.map((dep) =>\n    dep === 'exports'\n      ? exports\n      : dep === 'module'\n      ? module\n      : requireDependencyWebWorker(dep)\n  )\n  // Run factory ... This will (maybe) write into exports\n  const outFactory = factory(...rutimeDepencies)\n  if (\n    !dependencies.includes('exports') &&\n    !dependencies.includes('module') &&\n    outFactory\n  ) {\n    // NOTE: In this case the factory return module\n    queue.push(outFactory)\n  } else {\n    queue.push(exports)\n  }\n}\ndefineWebWorker.amd = {}\n\n/**\n * Require from URL in the DOM\n *\n * @param {string} url\n */\nfunction requireFromUrl(url) {\n  return new Promise((resolve, reject) => {\n    window.define = defineDOM\n    const scriptTag = document.createElement('script')\n    scriptTag.src = url\n    scriptTag.async = true\n    scriptTag.addEventListener(\n      'load',\n      () => {\n        // Pop last exports\n        const promiseFinalExports = queue.pop()\n        if (!promiseFinalExports) {\n          reject(`Problem during the execution of ${url}`)\n          return\n        }\n        return promiseFinalExports\n          .then(() => {\n            scriptTag.remove()\n            resolve(promiseFinalExports)\n          })\n          .catch((err) => {\n            scriptTag.remove()\n            reject(err)\n          })\n      },\n      {\n        once: true,\n      }\n    )\n    scriptTag.addEventListener(\n      'error',\n      () => {\n        scriptTag.remove()\n        reject(`Cannot import url ${url}`)\n      },\n      {\n        once: true,\n      }\n    )\n    document.head.append(scriptTag)\n  })\n}\n\nfunction isRawChartLike(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    return (\n      typeof obj.render === 'function' && typeof obj.metadata.id === 'string'\n    )\n  }\n  return false\n}\n\n/**\n * @param {string} url\n * @returns {Promise<ChartContract[]>}\n */\nexport async function requireRawChartsFromUrl(url) {\n  if (cacheChartsPkg.get(url)) {\n    return Promise.resolve(cacheChartsPkg.get(url))\n  }\n  const daExports = await requireFromUrl(url)\n  if (!daExports) {\n    return []\n  }\n  const charts = Object.values(daExports).filter(isRawChartLike)\n  // NOTE: Cache only relevant exports ...\n  if (charts.length > 0) {\n    cacheChartsPkg.set(url, charts)\n  }\n  return charts\n}\n\n/**\n * @param {string} url\n * @returns {ChartContract[]}\n */\nexport function requireRawChartsFromUrlWebWorker(url) {\n  if (cacheChartsPkg.get(url)) {\n    return cacheChartsPkg.get(url)\n  }\n  const daExports = requireFromUrlWebWorker(url)\n  if (!daExports) {\n    return []\n  }\n  const charts = Object.values(daExports).filter(isRawChartLike)\n  // NOTE: Cache only relevant exports ...\n  if (charts.length > 0) {\n    cacheChartsPkg.set(url, charts)\n  }\n  return charts\n}\n\n/**\n * Require from url in WebWorker context\n *\n * @param {string} url\n */\nfunction requireFromUrlWebWorker(url) {\n  self.define = defineWebWorker\n  self.importScripts(url)\n  const finalExports = queue.pop()\n  return finalExports\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { sha3_512 } from 'js-sha3'\nimport difference from 'lodash/difference'\nimport uniq from 'lodash/uniq'\nimport find from 'lodash/find'\nimport { requireRawChartsFromUrl, NPM_CDN } from './rawRequire'\nimport './chart-types'\n\nconst STORE_NS = 'rawCustomCharts'\n\n/**\n * @param {CustomChartContract[]} prevCharts\n * @param {CustomChartContract[]} newChartsToInject\n * @returns {[CustomChartContract[],CustomChartContract[]]}\n */\nfunction getNextCustomChartsAndReleased(prevCharts, newChartsToInject) {\n  const newIds = newChartsToInject.map((c) => c.metadata.id)\n  const releasedCustomCharts = []\n  const nextCustomCharts = prevCharts\n    .filter((prevChart) => {\n      const shouldBeReleased = newIds.includes(prevChart.metadata.id)\n      if (shouldBeReleased) {\n        releasedCustomCharts.push(prevChart)\n      }\n      return !shouldBeReleased\n    })\n    .concat(newChartsToInject)\n  return [nextCustomCharts, releasedCustomCharts]\n}\n\n/**\n * @param {CustomChartContract[]} nextCustomCharts\n */\nasync function storeCustomCharts(nextCustomCharts) {\n  const toStoreCustomCharts = nextCustomCharts.map((chart) => ({\n    id: chart.metadata.id,\n    source: chart.rawCustomChart.source,\n  }))\n  localStorage.setItem(STORE_NS, JSON.stringify(toStoreCustomCharts))\n  const cache = await window.caches.open(STORE_NS)\n  const nextHashses = toStoreCustomCharts\n    .map((chart) =>\n      chart.source.indexOf('file:') === 0\n        ? chart.source.replace('file:', '')\n        : null\n    )\n    .filter(Boolean)\n  const cacheKeys = await cache.keys()\n  const currentHashses = cacheKeys.map((k) => k.url.split('/').slice(-1)[0])\n  const toRemoveHashes = difference(currentHashses, nextHashses)\n  await Promise.all(toRemoveHashes.map((hash) => cache.delete('/' + hash)))\n}\n\n/**\n * @param {File} file\n * @returns {Promise<string>}\n */\nfunction makeFileHash(file) {\n  return new Promise((resolve) => {\n    const reader = new FileReader()\n    reader.onload = function (event) {\n      resolve(sha3_512(event.target.result))\n    }\n    reader.readAsArrayBuffer(file)\n  })\n}\n\nasync function loadStoredCustomCharts() {\n  /**\n   * @type {StoredCustomChart[]}\n   */\n  const storedCustomCharts = JSON.parse(localStorage.getItem(STORE_NS) ?? '[]')\n  const cache = await window.caches.open(STORE_NS)\n\n  // Calculate an unique list of sources to load\n  // It also read caches storage and create a browser url for file sources\n  const packsToLoad = await Promise.all(\n    uniq(storedCustomCharts.map((chart) => chart.source)).map(\n      /**\n       * @param {string} source\n       * @returns {Promise<{ source: string, url: string } | null>}\n       */\n      (source) => {\n        if (source.indexOf('file:') === 0) {\n          return cache.match('/' + source.replace('file:', '')).then((m) => {\n            if (!m) {\n              return Promise.resolve(null)\n            }\n            return m.blob().then((b) => ({\n              source,\n              url: URL.createObjectURL(b),\n            }))\n          })\n        }\n        if (source.indexOf('url:') === 0) {\n          return Promise.resolve({\n            source,\n            url: source.replace('url:', ''),\n          })\n        }\n        if (source.indexOf('npm:') === 0) {\n          return Promise.resolve({\n            source,\n            url: NPM_CDN + source.replace('npm:', ''),\n          })\n        }\n        return Promise.resolve(null)\n      }\n    )\n  ).then((packs) => packs.filter(Boolean))\n\n  const loadedChartsById = await Promise.all(\n    packsToLoad.map((p) =>\n      requireRawChartsFromUrl(p.url).then((charts) =>\n        charts.map((chart) => ({\n          ...chart,\n          rawCustomChart: p,\n        }))\n      )\n    )\n  ).then((nChars) => {\n    /**\n     * @type {Record<string, CustomChartContract>}\n     */\n    const by = {}\n    return nChars.reduce((o, charts) => {\n      charts.forEach((c) => {\n        o[c.metadata.id] = c\n      })\n      return o\n    }, by)\n  })\n\n  return storedCustomCharts.map((c) => loadedChartsById[c.id]).filter(Boolean)\n}\n\nasync function exportCustomChart(chart) {\n  if (!chart.rawCustomChart) {\n    // Not a custom chart\n    return null\n  }\n  const { source } = chart.rawCustomChart\n  if (source.indexOf('file:') === 0) {\n    const cache = await window.caches.open(STORE_NS)\n    const hash = source.replace('file:', '')\n    const result = await cache.match(`/${hash}`)\n    if (!result) {\n      throw new Error(`File not found: ${hash}`)\n    }\n    const content = await result.text()\n    return {\n      source,\n      content,\n    }\n  }\n  return {\n    source,\n  }\n}\n\n/**\n * This hook handle the custom user charts.\n * It's business is to load custom charts from some `source`:\n *  - `file:hash` File source we hash the file content to identify \"which\" file\n *  - `url:cdn_url` An url that point to a js file bundled as UMD | AMD\n *  - `npm:name` A valid package name on npm registry bundled also as UMD | AMD\n *\n * It loads the current custom charts on mount from user storage and sync\n * them when you call its methods.\n *\n * @param {{ storage: boolean }}\n * @returns {[CustomChartContract[], {\n *  uploadCustomCharts: (file?: File, mode?:  'replace' | 'add') => Promise<CustomChartContract[]>\n *  loadCustomChartsFromUrl: (url: string) => Promise<CustomChartContract[]>\n *  loadCustomChartsFromNpm: (name: string) => Promise<CustomChartContract[]>\n *  importCustomChartFromProject: (projectChart: CustomChartContract) => Promise<CustomChartContract>\n *  removeCustomChart: (chart: CustomChartContract) => Promise<CustomChartContract[]>\n *  exportCustomChart: (chart: CustomChartContract) => Promise<{ source: string, content: string | null }>\n * }]}\n */\nexport default function useCustomCharts({ storage = true } = { storage: true }) {\n  const [customCharts, setCustomCharts] = useState([])\n\n  // Loads custom charts saved in user storage\n  useEffect(() => {\n    if (storage) {\n      loadStoredCustomCharts().then(setCustomCharts)\n    }\n  }, [storage])\n\n  const loadCustomChartsFromUrlAsSource = useCallback(\n    async (source, url) => {\n      let newChartsToInject = await requireRawChartsFromUrl(url)\n      if (newChartsToInject.length === 0) {\n        return\n      }\n      newChartsToInject = newChartsToInject.map((chart) => ({\n        ...chart,\n        rawCustomChart: {\n          source,\n          url,\n        },\n      }))\n      const [\n        nextCustomCharts,\n        releasedCustomCharts,\n      ] = getNextCustomChartsAndReleased(customCharts, newChartsToInject)\n      releasedCustomCharts.forEach((c) => {\n        URL.revokeObjectURL(c.rawCustomChart.url)\n      })\n      setCustomCharts(nextCustomCharts)\n      if (storage) {\n        await storeCustomCharts(nextCustomCharts)\n      }\n      return nextCustomCharts\n    },\n    [customCharts, storage]\n  )\n\n  const loadCustomChartsFromUrl = useCallback(\n    async (url) => {\n      const source = `url:${url}`\n      return loadCustomChartsFromUrlAsSource(source, url)\n    },\n    [loadCustomChartsFromUrlAsSource]\n  )\n\n  const loadCustomChartsFromNpm = useCallback(\n    async (name) => {\n      const source = `npm:${name}`\n      const url = NPM_CDN + name\n      return loadCustomChartsFromUrlAsSource(source, url)\n    },\n    [loadCustomChartsFromUrlAsSource]\n  )\n\n  const uploadCustomCharts = useCallback(\n    async (file, mode = 'add') => {\n      if (!file) {\n        return []\n      }\n      const url = URL.createObjectURL(file)\n      let newChartsToInject = await requireRawChartsFromUrl(url)\n      if (newChartsToInject.length === 0) {\n        return\n      }\n      const fileHash = await makeFileHash(file)\n      const source = `file:${fileHash}`\n      newChartsToInject = newChartsToInject.map((chart) => ({\n        ...chart,\n        rawCustomChart: {\n          source,\n          url,\n        },\n      }))\n      const [nextCustomCharts, releasedCustomCharts] =\n        mode === 'replace'\n          ? [newChartsToInject, customCharts]\n          : getNextCustomChartsAndReleased(customCharts, newChartsToInject)\n      releasedCustomCharts.forEach((c) => {\n        URL.revokeObjectURL(c.rawCustomChart.url)\n      })\n      setCustomCharts(nextCustomCharts)\n      if (storage) {\n        const cache = await window.caches.open(STORE_NS)\n        await cache.put(fileHash, new Response(file))\n        await storeCustomCharts(nextCustomCharts)\n      }\n      return nextCustomCharts\n    },\n    [customCharts, storage]\n  )\n\n  const importCustomChartFromProject = useCallback(\n    async (projectChart) => {\n      const { source, content } = projectChart.rawCustomChart\n      let url, file, fileHash\n      if (source.indexOf('url:') === 0) {\n        url = source.replace('url:', '')\n      } else if (source.indexOf('npm:') === 0) {\n        url = NPM_CDN + source.replace('npm:', '')\n      } else if (source.indexOf('file:') === 0) {\n        fileHash = source.replace('file:', '')\n        file = new File([content], `${fileHash}.js`, {\n          type: 'application/json',\n        })\n        url = URL.createObjectURL(file)\n      } else {\n        throw new Error(`Try to import invalid source ${source}`)\n      }\n      const newChartsToInject = await requireRawChartsFromUrl(url)\n      let newChart = find(\n        newChartsToInject,\n        (c) => c.metadata.id === projectChart.metadata.id\n      )\n      if (!newChart) {\n        throw new Error(\n          `Can't find chart ${projectChart.metadata.id} from ${source}`\n        )\n      }\n      newChart = {\n        ...newChart,\n        rawCustomChart: {\n          source,\n          url,\n        },\n      }\n      const [\n        nextCustomCharts,\n        releasedCustomCharts,\n      ] = getNextCustomChartsAndReleased(customCharts, [newChart])\n      releasedCustomCharts.forEach((c) => {\n        URL.revokeObjectURL(c.rawCustomChart.url)\n      })\n      setCustomCharts(nextCustomCharts)\n      if (storage) {\n        if (file) {\n          const cache = await window.caches.open(STORE_NS)\n          await cache.put(fileHash, new Response(file))\n        }\n        await storeCustomCharts(nextCustomCharts)\n      }\n      return newChart\n    },\n    [customCharts, storage]\n  )\n\n  const removeCustomChart = useCallback(\n    async (chart) => {\n      const nextCustomCharts = customCharts.filter(\n        (c) => c.metadata.id !== chart.metadata.id\n      )\n      setCustomCharts(nextCustomCharts)\n      if (storage) {\n        await storeCustomCharts(nextCustomCharts)\n      }\n      return nextCustomCharts\n    },\n    [customCharts, storage]\n  )\n\n  return [\n    customCharts,\n    {\n      uploadCustomCharts,\n      removeCustomChart,\n      loadCustomChartsFromUrl,\n      loadCustomChartsFromNpm,\n      exportCustomChart,\n      importCustomChartFromProject,\n    },\n  ]\n}\n","import { useCallback, useState } from 'react'\nimport useCustomCharts from './useCustomCharts'\nimport './chart-types'\n\n// NOTE: ... FUTURE PALCE 2 RAW APPROVED CHARTS FROM USERS <3\n// At this point we can mark some npm accounts or special cdn hosts to have secure\n// and quailty raw charts ... so we can then skip the security advisor\n\nconst HOSTS_WHITELIST = ['localhost']\n\n/**\n * @param {URL} url\n */\nfunction isUrlAllowed(url) {\n  if (HOSTS_WHITELIST.includes(url.hostname)) {\n    return true\n  }\n  return false\n}\n\n/**\n * @param {string} name\n */\nfunction isNpmPkgAllowed(name) {\n  return false\n}\n\nclass UserAbortError extends Error {\n  constructor(...args) {\n    super(...args)\n    this.isAbortByUser = true\n  }\n}\n\n/**\n * @returns {[CustomChartContract[], {\n *  toConfirmCustomChart: null\n *  | { type: 'npm', value: string }\n *  | { type: 'url', value: url }\n *  | { type: 'file', value: File }\n *  | { type: 'project', value: CustomChartContract }\n *  uploadCustomCharts: (file?: File) => Promise<CustomChartContract[]>\n *  loadCustomChartsFromUrl: (url: string) => Promise<CustomChartContract[]>\n *  loadCustomChartsFromNpm: (name: string) => Promise<CustomChartContract[]>\n *  importCustomChartFromProject: (projectChart: CustomChartContract) => Promise<CustomChartContract>\n *  removeCustomChart: (chart: CustomChartContract) => Promise<CustomChartContract[]>\n *  exportCustomChart: (chart: CustomChartContract) => Promise<{ source: string, content: string | null }>\n *  confirmCustomChartLoad: () => void\n *  abortCustomChartLoad: () => void\n * }]}\n */\nexport default function useSafeCustomCharts() {\n  const [\n    customCharts,\n    {\n      uploadCustomCharts: unsafeUploadCustomCharts,\n      loadCustomChartsFromNpm: unsafeLoadCustomChartsFromNpm,\n      loadCustomChartsFromUrl: unsafeLoadCustomChartsFromUrl,\n      importCustomChartFromProject: unsafeImportCustomChartFromProject,\n      ...methods\n    },\n  ] = useCustomCharts()\n\n  const [toConfirmCustomChart, setToConfirmCustomChartLoad] = useState(null)\n\n  const loadCustomChartsFromUrl = useCallback(\n    (url) => {\n      let parsedUrl\n      try {\n        parsedUrl = new URL(url)\n      } catch (err) {\n        // Invalid url\n        return Promise.resolve([])\n      }\n      if (isUrlAllowed(parsedUrl)) {\n        return unsafeLoadCustomChartsFromUrl(String(parsedUrl))\n      } else {\n        return new Promise((resolve, reject) => {\n          setToConfirmCustomChartLoad({\n            type: 'url',\n            value: String(parsedUrl),\n            resolve,\n            reject,\n          })\n        })\n      }\n    },\n    [unsafeLoadCustomChartsFromUrl]\n  )\n\n  const loadCustomChartsFromNpm = useCallback(\n    (inputName) => {\n      const name = inputName.trim()\n      if (name.trim() === '') {\n        return\n      }\n      if (isNpmPkgAllowed(name)) {\n        unsafeLoadCustomChartsFromNpm(name)\n      } else {\n        return new Promise((resolve, reject) => {\n          setToConfirmCustomChartLoad({\n            type: 'npm',\n            value: name,\n            resolve,\n            reject,\n          })\n        })\n      }\n    },\n    [unsafeLoadCustomChartsFromNpm]\n  )\n\n  const uploadCustomCharts = useCallback((file) => {\n    return new Promise((resolve, reject) => {\n      setToConfirmCustomChartLoad({\n        type: 'file',\n        value: file,\n        resolve,\n        reject,\n      })\n    })\n  }, [])\n\n  const importCustomChartFromProject = useCallback(\n    (projectChart) => {\n      const { source } = projectChart.rawCustomChart\n      let askConfirm = false\n      if (source.indexOf('url:') === 0) {\n        if (!isUrlAllowed(new URL(source.replace('url:', '')))) {\n          askConfirm = true\n        }\n      } else if (source.indexOf('npm:') === 0) {\n        if (!isNpmPkgAllowed(source.replace('npm:', ''))) {\n          askConfirm = true\n        }\n      } else if (source.indexOf('file:') === 0) {\n        askConfirm = true\n      }\n      if (askConfirm) {\n        return new Promise((resolve, reject) => {\n          setToConfirmCustomChartLoad({\n            type: 'project',\n            value: projectChart,\n            resolve,\n            reject,\n          })\n        })\n      } else {\n        return unsafeImportCustomChartFromProject(projectChart)\n      }\n    },\n    [unsafeImportCustomChartFromProject]\n  )\n\n  const confirmCustomChartLoad = useCallback(() => {\n    const { type, value, resolve, reject } = toConfirmCustomChart\n    if (type === 'file') {\n      unsafeUploadCustomCharts(value).then(resolve, reject)\n    } else if (type === 'url') {\n      unsafeLoadCustomChartsFromUrl(value).then(resolve, reject)\n    } else if (type === 'npm') {\n      unsafeLoadCustomChartsFromNpm(value).then(resolve, reject)\n    } else if (type === 'project') {\n      unsafeImportCustomChartFromProject(value).then(resolve, reject)\n    }\n    setToConfirmCustomChartLoad(null)\n  }, [\n    toConfirmCustomChart,\n    unsafeImportCustomChartFromProject,\n    unsafeLoadCustomChartsFromNpm,\n    unsafeLoadCustomChartsFromUrl,\n    unsafeUploadCustomCharts,\n  ])\n\n  const abortCustomChartLoad = useCallback(() => {\n    if (toConfirmCustomChart) {\n      toConfirmCustomChart.reject(new UserAbortError())\n    }\n    setToConfirmCustomChartLoad(null)\n  }, [toConfirmCustomChart])\n\n  return [\n    customCharts,\n    {\n      toConfirmCustomChart,\n      abortCustomChartLoad,\n      confirmCustomChartLoad,\n      uploadCustomCharts,\n      loadCustomChartsFromUrl,\n      loadCustomChartsFromNpm,\n      importCustomChartFromProject,\n      ...methods,\n    },\n  ]\n}\n","import classNames from 'classnames'\nimport React, { memo, useState } from 'react'\nimport { Button, Modal } from 'react-bootstrap'\nimport { useDropzone } from 'react-dropzone'\nimport { BsCloud, BsUpload } from 'react-icons/bs'\nimport styles from './CustomChartLoader.module.scss'\n\nfunction LoadFromFile({ loading, load }) {\n  function onDrop(acceptedFiles) {\n    if (acceptedFiles.length) {\n      load(acceptedFiles[0])\n    }\n  }\n  const {\n    getRootProps,\n    getInputProps,\n    isDragReject,\n    isDragAccept,\n  } = useDropzone({\n    disabled: loading,\n    onDrop,\n    accept: 'text/plain,text/javascript,.js',\n    maxFiles: 1,\n  })\n  return (\n    <div\n      className={classNames(styles.dropzone, {\n        [styles.reject]: isDragReject,\n        [styles.accept]: isDragAccept,\n      })}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      <span>Drag a file here or </span>\n      <Button className={styles['browse-button']} color=\"primary\">\n        Browse\n      </Button>\n      <span>a file from your computer</span>\n      <div className={styles.dropin}>\n        {isDragAccept && <p>All files will be accepted</p>}\n        {isDragReject && <p>Some files will be rejected</p>}\n      </div>\n    </div>\n  )\n}\n\nfunction LoadFromString({ load, loading, placeholder }) {\n  const [value, setValue] = useState('')\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault()\n        load(value)\n      }}\n    >\n      <input\n        disabled={loading}\n        className=\"form-control mb-2\"\n        placeholder={placeholder}\n        type=\"text\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          disabled={value.trim() === '' || loading}\n          className=\"btn btn-primary\"\n          onClick={() => {}}\n        >\n          Load your chart\n        </button>\n      </div>\n    </form>\n  )\n}\n\nfunction CustomChartLoaderForm({\n  uploadCustomCharts,\n  loadCustomChartsFromUrl,\n  loadCustomChartsFromNpm,\n  onClose,\n}) {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [type, setType] = useState('file')\n\n  function handleError(e) {\n    setLoading(false)\n    if (e.isAbortByUser) {\n      return\n    }\n    console.log(e)\n    setError(e)\n  }\n\n  function changeImportType(type) {\n    setError(null)\n    setType(type)\n  }\n\n  return (\n    <div className=\"row\" style={{ minHeight: 300 }}>\n      <div className=\"col-md-4\">\n        <div\n          onClick={() => {\n            changeImportType('file')\n          }}\n          className={classNames(\n            'd-flex align-items-center cursor-pointer',\n            styles.loadingOption,\n            {\n              [styles.active]: type === 'file',\n            }\n          )}\n        >\n          <BsUpload className=\"w-25\" />\n          <h4 className=\"m-0 d-inline-block\">Load from file</h4>\n        </div>\n        <div\n          onClick={() => changeImportType('url')}\n          className={classNames(\n            'd-flex align-items-center cursor-pointer',\n            styles.loadingOption,\n            {\n              [styles.active]: type === 'url',\n            }\n          )}\n        >\n          <BsCloud className=\"w-25\" />\n          <h4 className=\"m-0 d-inline-block\">Import from URL</h4>\n        </div>\n        <div\n          onClick={() => changeImportType('npm')}\n          className={classNames(\n            'd-flex align-items-center cursor-pointer',\n            styles.loadingOption,\n            {\n              [styles.active]: type === 'npm',\n            }\n          )}\n        >\n          <BsCloud className=\"w-25\" />\n          <h4 className=\"m-0 d-inline-block\">Import from NPM</h4>\n        </div>\n      </div>\n      <div className=\"col-md-8\">\n        {type === 'npm' && (\n          <LoadFromString\n            loading={loading}\n            load={(pkg) => {\n              setError(null)\n              setLoading(true)\n              loadCustomChartsFromNpm(pkg).then(onClose, handleError)\n            }}\n            key=\"npm\"\n            placeholder={'Load UMD or AMD JS File from NPM'}\n          />\n        )}\n        {type === 'url' && (\n          <LoadFromString\n            loading={loading}\n            load={(url) => {\n              setError(null)\n              setLoading(true)\n              loadCustomChartsFromUrl(url).then(onClose, handleError)\n            }}\n            key=\"url\"\n            placeholder={'Load UMD or AMD JS File from URL'}\n          />\n        )}\n        {type === 'file' && (\n          <LoadFromFile\n            loading={loading}\n            load={(url) => {\n              setError(null)\n              setLoading(true)\n              uploadCustomCharts(url).then(onClose, handleError)\n            }}\n            key=\"url\"\n            placeholder={'Load UMD or AMD JS File from URL'}\n          />\n        )}\n        {error && (\n          <div className=\"alert alert-danger mt-2\">\n            Error during custom chart import\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nfunction CustomChartLoader({ isOpen, onClose, ...props }) {\n  return (\n    <Modal\n      show={isOpen}\n      onHide={onClose}\n      backdrop=\"static\"\n      centered\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      className=\"raw-modal\"\n      contentClassName=\"bg-white\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Load custom chart</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <CustomChartLoaderForm {...props} onClose={onClose} />\n      </Modal.Body>\n      <Modal.Footer>\n        <div className='text-center w-100'>\n          Do you want to know how to create a custom chart?{' '}\n          <a href=\"https://rawgraphs.io\" target=\"_blank\" rel=\"noreferrer\">\n            Check our documentation\n          </a>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default memo(CustomChartLoader)\n","import { Modal, Button } from 'react-bootstrap'\n\nexport default function CustomChartWarnModal({\n  toConfirmCustomChart,\n  abortCustomChartLoad,\n  confirmCustomChartLoad,\n}) {\n  return (\n    <Modal\n      show={toConfirmCustomChart !== null}\n      onHide={() => abortCustomChartLoad(null)}\n      backdrop=\"static\"\n      centered\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      className=\"raw-modal\"\n      contentClassName='border'\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Warning!</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>\n          You are about to execute third party JavaScript continue at your own\n          risk.\n        </p>\n        {toConfirmCustomChart && toConfirmCustomChart.type === 'project' && (\n          <div\n            title={toConfirmCustomChart.value.rawCustomChart.source}\n            style={{\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              width: '100%',\n            }}\n          >\n            {toConfirmCustomChart.value.rawCustomChart.source}\n          </div>\n        )}\n      </Modal.Body>\n\n      <Modal.Footer className=\"d-flex justify-content-between\">\n        <Button\n          variant=\"light\"\n          onClick={() => {\n            abortCustomChartLoad()\n          }}\n        >\n          Don't execute\n        </Button>\n        <Button\n          variant=\"primary\"\n          onClick={() => {\n            confirmCustomChartLoad()\n          }}\n        >\n          Continue\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useState, useCallback, useMemo, useEffect, useRef } from 'react'\nimport {\n  getOptionsConfig,\n  getDefaultOptionsValues,\n  deserializeProject,\n} from '@rawgraphs/rawgraphs-core'\nimport HeaderItems from './HeaderItems'\nimport Header from './components/Header'\nimport Section from './components/Section'\nimport Footer from './components/Footer'\nimport ScreenSizeAlert from './components/ScreenSizeAlert'\nimport DataLoader from './components/DataLoader'\nimport ChartSelector from './components/ChartSelector'\nimport DataMapping from './components/DataMapping'\nimport ChartPreviewWithOptions from './components/ChartPreviewWIthOptions'\nimport Exporter from './components/Exporter'\nimport get from 'lodash/get'\nimport find from 'lodash/find'\nimport usePrevious from './hooks/usePrevious'\nimport { serializeProject } from '@rawgraphs/rawgraphs-core'\nimport baseCharts from './charts'\nimport useSafeCustomCharts from './hooks/useSafeCustomCharts'\nimport useDataLoader from './hooks/useDataLoader'\nimport isPlainObject from 'lodash/isPlainObject'\nimport CookieConsent from 'react-cookie-consent'\nimport CustomChartLoader from './components/CustomChartLoader'\nimport CustomChartWarnModal from './components/CustomChartWarnModal'\n\n// #TODO: i18n\n\nfunction App() {\n  const [\n    customCharts,\n    {\n      toConfirmCustomChart,\n      confirmCustomChartLoad,\n      abortCustomChartLoad,\n      uploadCustomCharts,\n      loadCustomChartsFromUrl,\n      loadCustomChartsFromNpm,\n      importCustomChartFromProject,\n      removeCustomChart,\n      exportCustomChart,\n    },\n  ] = useSafeCustomCharts()\n  const charts = useMemo(() => baseCharts.concat(customCharts), [customCharts])\n\n  const dataLoader = useDataLoader()\n  const {\n    userInput,\n    userData,\n    userDataType,\n    parseError,\n    unstackedData,\n    unstackedColumns,\n    data,\n    separator,\n    thousandsSeparator,\n    decimalsSeparator,\n    locale,\n    stackDimension,\n    dataSource,\n    loading,\n    hydrateFromSavedProject,\n  } = dataLoader\n\n  /* From here on, we deal with viz state */\n  const [currentChart, setCurrentChart] = useState(charts[0])\n  const [mapping, setMapping] = useState({})\n  const [visualOptions, setVisualOptions] = useState(() => {\n    const options = getOptionsConfig(charts[0]?.visualOptions)\n    return getDefaultOptionsValues(options)\n  })\n  const [rawViz, setRawViz] = useState(null)\n  const [mappingLoading, setMappingLoading] = useState(false)\n  const dataMappingRef = useRef(null)\n\n  const columnNames = useMemo(() => {\n    if (get(data, 'dataTypes')) {\n      return Object.keys(data.dataTypes)\n    }\n  }, [data])\n\n  const prevColumnNames = usePrevious(columnNames)\n  const clearLocalMapping = useCallback(() => {\n    if (dataMappingRef.current) {\n      dataMappingRef.current.clearLocalMapping()\n    }\n  }, [])\n\n  // NOTE: When we run the import we want to use the \"last\"\n  // version of importProject callback\n  const lasImportProjectRef = useRef()\n  useEffect(() => {\n    lasImportProjectRef.current = importProject\n  })\n  useEffect(() => {\n    const projectUrlStr = new URLSearchParams(window.location.search).get('url')\n    let projectUrl\n    try {\n      projectUrl = new URL(projectUrlStr)\n    } catch (e) {\n      // BAD URL\n      return\n    }\n    fetch(projectUrl)\n      .then((r) => (r.ok ? r.text() : Promise.reject(r)))\n      .then(\n        (projectStr) => {\n          const project = deserializeProject(projectStr, baseCharts)\n          const lastImportProject = lasImportProjectRef.current\n          if (lastImportProject) {\n            lastImportProject(project, true)\n          }\n        },\n        (err) => {\n          console.log(`Can't load ${projectUrl}`, err)\n        }\n      )\n  }, [])\n\n  //resetting mapping when column names changes (ex: separator change in parsing)\n  useEffect(() => {\n    if (prevColumnNames) {\n      if (!columnNames) {\n        setMapping({})\n        clearLocalMapping()\n      } else {\n        const prevCols = prevColumnNames.join('.')\n        const currentCols = columnNames.join('.')\n        if (prevCols !== currentCols) {\n          setMapping({})\n          clearLocalMapping()\n        }\n      }\n    }\n  }, [columnNames, prevColumnNames, clearLocalMapping])\n\n  // update current chart when the related custom charts change under the hood\n  // if the related custom chart is removed set the first chart\n  useEffect(() => {\n    if (currentChart.rawCustomChart) {\n      const currentCustom = find(\n        customCharts,\n        (c) => c.metadata.id === currentChart.metadata.id\n      )\n      if (!currentCustom) {\n        setCurrentChart(baseCharts[0])\n        return\n      }\n      if (\n        currentCustom.rawCustomChart.source !==\n        currentChart.rawCustomChart.source\n      ) {\n        setCurrentChart(currentCustom)\n      }\n    }\n  }, [customCharts, currentChart])\n\n  const handleChartChange = useCallback(\n    (nextChart) => {\n      setMapping({})\n      clearLocalMapping()\n      setCurrentChart(nextChart)\n      const options = getOptionsConfig(nextChart?.visualOptions)\n      setVisualOptions(getDefaultOptionsValues(options))\n      setRawViz(null)\n    },\n    [clearLocalMapping]\n  )\n\n  const exportProject = useCallback(async () => {\n    const customChart = await exportCustomChart(currentChart)\n    return serializeProject({\n      userInput,\n      userData,\n      userDataType,\n      parseError,\n      unstackedData,\n      unstackedColumns,\n      data,\n      separator,\n      thousandsSeparator,\n      decimalsSeparator,\n      locale,\n      stackDimension,\n      dataSource,\n      currentChart,\n      mapping,\n      visualOptions,\n      customChart,\n    })\n  }, [\n    currentChart,\n    data,\n    dataSource,\n    decimalsSeparator,\n    locale,\n    mapping,\n    parseError,\n    separator,\n    stackDimension,\n    thousandsSeparator,\n    userData,\n    userDataType,\n    userInput,\n    visualOptions,\n    unstackedColumns,\n    unstackedData,\n    exportCustomChart,\n  ])\n\n  // project import\n  const importProject = useCallback(\n    async (project, fromUrl) => {\n      let nextCurrentChart\n      if (project.currentChart.rawCustomChart) {\n        try {\n          nextCurrentChart = await importCustomChartFromProject(\n            project.currentChart\n          )\n        } catch (err) {\n          if (err.isAbortByUser) {\n            if (fromUrl) {\n              // NOTE: clean the url when the user abort loading custom js\n              window.history.replaceState(null, null, '/')\n            }\n            return\n          }\n          throw err\n        }\n      } else {\n        nextCurrentChart = project.currentChart\n      }\n      hydrateFromSavedProject(project)\n      setCurrentChart(nextCurrentChart)\n      setMapping(project.mapping)\n      // adding \"annotations\" for color scale:\n      // we annotate the incoming options values (complex ones such as color scales)\n      // to le the ui know they are coming from a loaded project\n      // so we don't have to re-evaluate defaults\n      // this is due to the current implementation of the color scale\n      const patchedOptions = { ...project.visualOptions }\n      Object.keys(patchedOptions).forEach((k) => {\n        if (isPlainObject(patchedOptions[k])) {\n          patchedOptions[k].__loaded = true\n        }\n      })\n      setVisualOptions(project.visualOptions)\n    },\n    [hydrateFromSavedProject, importCustomChartFromProject]\n  )\n\n  const [isModalCustomChartOpen, setModalCustomChartOpen] = useState(false)\n  const toggleModalCustomChart = useCallback(\n    () => setModalCustomChartOpen((o) => !o),\n    []\n  )\n\n  return (\n    <div className=\"App\">\n      <Header menuItems={HeaderItems} />\n      <CustomChartWarnModal\n        toConfirmCustomChart={toConfirmCustomChart}\n        confirmCustomChartLoad={confirmCustomChartLoad}\n        abortCustomChartLoad={abortCustomChartLoad}\n      />\n      <div className=\"app-sections\">\n        <Section title={`1. Load your data`} loading={loading}>\n          <DataLoader {...dataLoader} hydrateFromProject={importProject} />\n        </Section>\n        {data && (\n          <Section title=\"2. Choose a chart\">\n            <CustomChartLoader\n              isOpen={isModalCustomChartOpen}\n              onClose={toggleModalCustomChart}\n              loadCustomChartsFromNpm={loadCustomChartsFromNpm}\n              loadCustomChartsFromUrl={loadCustomChartsFromUrl}\n              uploadCustomCharts={uploadCustomCharts}\n            />\n            <ChartSelector\n              onAddChartClick={toggleModalCustomChart}\n              onRemoveCustomChart={removeCustomChart}\n              availableCharts={charts}\n              currentChart={currentChart}\n              setCurrentChart={handleChartChange}\n            />\n          </Section>\n        )}\n        {data && currentChart && (\n          <Section title={`3. Mapping`} loading={mappingLoading}>\n            <DataMapping\n              ref={dataMappingRef}\n              dimensions={currentChart.dimensions}\n              dataTypes={data.dataTypes}\n              mapping={mapping}\n              setMapping={setMapping}\n            />\n          </Section>\n        )}\n        {data && currentChart && (\n          <Section title=\"4. Customize\">\n            <ChartPreviewWithOptions\n              chart={currentChart}\n              dataset={data.dataset}\n              dataTypes={data.dataTypes}\n              mapping={mapping}\n              visualOptions={visualOptions}\n              setVisualOptions={setVisualOptions}\n              setRawViz={setRawViz}\n              setMappingLoading={setMappingLoading}\n            />\n          </Section>\n        )}\n        {data && currentChart && rawViz && (\n          <Section title=\"5. Export\">\n            <Exporter rawViz={rawViz} exportProject={exportProject} />\n          </Section>\n        )}\n        <Footer />\n        <CookieConsent\n          location=\"bottom\"\n          buttonText=\"Got it!\"\n          style={{ background: '#f5f5f5', color: '#646467' }}\n          buttonStyle={{\n            background: '#646467',\n            color: 'white',\n            fontSize: '13px',\n            borderRadius: '3px',\n            padding: '5px 20px',\n          }}\n          buttonClasses=\"btn btn-default btn-grey\"\n          acceptOnScroll={true}\n        >\n          This website uses Google Analytics to anonymously collect browsing\n          data.{' '}\n          <a\n            href=\"https://rawgraphs.io/privacy/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"ml-2 text-body border-bottom border-dark\"\n          >\n            Learn More\n          </a>\n        </CookieConsent>\n      </div>\n      <ScreenSizeAlert />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}